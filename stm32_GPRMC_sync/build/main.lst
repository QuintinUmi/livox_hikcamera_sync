ARM GAS  /tmp/ccKrIQuL.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.Error_Handler_Custom,"ax",%progbits
  16              		.align	1
  17              		.global	Error_Handler_Custom
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	Error_Handler_Custom:
  25              	.LFB68:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * Copyright (c) 2024 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Src/main.c    ****   * in the root directory of this software component.
  14:Src/main.c    ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   ******************************************************************************
  17:Src/main.c    ****   */
  18:Src/main.c    **** /* USER CODE END Header */
  19:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  20:Src/main.c    **** #include "main.h"
  21:Src/main.c    **** #include "dma.h"
  22:Src/main.c    **** #include "tim.h"
  23:Src/main.c    **** #include "usart.h"
  24:Src/main.c    **** #include "gpio.h"
  25:Src/main.c    **** 
  26:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  27:Src/main.c    **** /* USER CODE BEGIN Includes */
  28:Src/main.c    **** #include <stdio.h>
  29:Src/main.c    **** #include <stdlib.h>
  30:Src/main.c    **** #include <string.h>
  31:Src/main.c    **** #include "core_cm3.h"
  32:Src/main.c    **** /* USER CODE END Includes */
ARM GAS  /tmp/ccKrIQuL.s 			page 2


  33:Src/main.c    **** 
  34:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  35:Src/main.c    **** /* USER CODE BEGIN PTD */
  36:Src/main.c    **** 
  37:Src/main.c    **** /* USER CODE END PTD */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  40:Src/main.c    **** /* USER CODE BEGIN PD */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* USER CODE END PD */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  45:Src/main.c    **** /* USER CODE BEGIN PM */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* USER CODE END PM */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  50:Src/main.c    **** 
  51:Src/main.c    **** /* USER CODE BEGIN PV */
  52:Src/main.c    **** 
  53:Src/main.c    **** /* USER CODE END PV */
  54:Src/main.c    **** 
  55:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  56:Src/main.c    **** void SystemClock_Config(void);
  57:Src/main.c    **** /* USER CODE BEGIN PFP */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* USER CODE END PFP */
  60:Src/main.c    **** 
  61:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  62:Src/main.c    **** /* USER CODE BEGIN 0 */
  63:Src/main.c    **** 
  64:Src/main.c    **** 
  65:Src/main.c    **** 
  66:Src/main.c    **** // 定义基准时间 2003-02-12 02:00:00
  67:Src/main.c    **** unsigned int BASE_YEAR = 2003;
  68:Src/main.c    **** unsigned int  BASE_MONTH = 2;
  69:Src/main.c    **** unsigned int  BASE_DAY = 12;
  70:Src/main.c    **** unsigned int  BASE_HOUR = 2;
  71:Src/main.c    **** unsigned int BASE_MINUTE = 0;
  72:Src/main.c    **** unsigned int  BASE_SECOND = 0;
  73:Src/main.c    **** 
  74:Src/main.c    **** // 定义位置
  75:Src/main.c    **** char LATITUDE[20] = "2237.8840,N"; // 22.6314°N
  76:Src/main.c    **** char LONGITUDE[20] = "11009.2400,E"; // 110.154°E
  77:Src/main.c    **** 
  78:Src/main.c    **** // 初始时间设置
  79:Src/main.c    **** uint32_t baseTime = 0; // 秒数
  80:Src/main.c    **** 
  81:Src/main.c    **** uint32_t baseTick = 0;
  82:Src/main.c    **** uint32_t elapsed = 0;
  83:Src/main.c    **** 
  84:Src/main.c    **** // GPS数据模拟
  85:Src/main.c    **** char gprmc_data[100];
  86:Src/main.c    **** 
  87:Src/main.c    **** 
  88:Src/main.c    **** 
  89:Src/main.c    **** // USART句柄声明
ARM GAS  /tmp/ccKrIQuL.s 			page 3


  90:Src/main.c    **** extern UART_HandleTypeDef huart3;
  91:Src/main.c    **** extern UART_HandleTypeDef huart1;
  92:Src/main.c    **** 
  93:Src/main.c    **** uint8_t uart_rx_buffer; 
  94:Src/main.c    **** 
  95:Src/main.c    **** // 定时器句柄声明
  96:Src/main.c    **** extern TIM_HandleTypeDef htim2; 
  97:Src/main.c    **** extern TIM_HandleTypeDef htim3;
  98:Src/main.c    **** extern TIM_HandleTypeDef htim4; // 100Hz -- /100: PPS ,  /10: Trigger
  99:Src/main.c    **** 
 100:Src/main.c    **** 
 101:Src/main.c    **** // 触发发送trigger的标志
 102:Src/main.c    **** volatile uint8_t trigger_flag = 0;
 103:Src/main.c    **** // 触发发送GPS数据的标志
 104:Src/main.c    **** volatile uint8_t send_gps_flag = 0;
 105:Src/main.c    **** 
 106:Src/main.c    **** 
 107:Src/main.c    **** 
 108:Src/main.c    **** void Error_Handler_Custom(void)
 109:Src/main.c    **** {
  27              		.loc 1 109 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
  36              	.L6:
 110:Src/main.c    **** 
 111:Src/main.c    ****   while (1) {
  37              		.loc 1 111 3 view .LVU1
 112:Src/main.c    ****     // 闪烁错误指示 LED 
 113:Src/main.c    ****     HAL_GPIO_WritePin(GPIOC, GPIO_PIN_5, RESET); 
  38              		.loc 1 113 5 view .LVU2
  39 0002 0022     		movs	r2, #0
  40 0004 2021     		movs	r1, #32
  41 0006 0F48     		ldr	r0, .L9
  42 0008 FFF7FEFF 		bl	HAL_GPIO_WritePin
  43              	.LVL0:
 114:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2, RESET); 
  44              		.loc 1 114 5 view .LVU3
  45 000c 0022     		movs	r2, #0
  46 000e 0421     		movs	r1, #4
  47 0010 0D48     		ldr	r0, .L9+4
  48 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
  49              	.LVL1:
 115:Src/main.c    ****     for(int i = 0; i < 500; i ++);
  50              		.loc 1 115 5 view .LVU4
  51              	.LBB2:
  52              		.loc 1 115 9 view .LVU5
  53              		.loc 1 115 13 is_stmt 0 view .LVU6
  54 0016 0023     		movs	r3, #0
  55              	.LVL2:
  56              	.L2:
  57              		.loc 1 115 20 is_stmt 1 discriminator 1 view .LVU7
ARM GAS  /tmp/ccKrIQuL.s 			page 4


  58              		.loc 1 115 5 is_stmt 0 discriminator 1 view .LVU8
  59 0018 B3F5FA7F 		cmp	r3, #500
  60 001c 01DA     		bge	.L8
  61              		.loc 1 115 34 is_stmt 1 discriminator 3 view .LVU9
  62              		.loc 1 115 29 discriminator 3 view .LVU10
  63              		.loc 1 115 31 is_stmt 0 discriminator 3 view .LVU11
  64 001e 0133     		adds	r3, r3, #1
  65              	.LVL3:
  66              		.loc 1 115 31 discriminator 3 view .LVU12
  67 0020 FAE7     		b	.L2
  68              	.L8:
  69              		.loc 1 115 31 discriminator 3 view .LVU13
  70              	.LBE2:
 116:Src/main.c    ****     HAL_GPIO_WritePin(GPIOC, GPIO_PIN_5, SET); 
  71              		.loc 1 116 5 is_stmt 1 view .LVU14
  72 0022 0122     		movs	r2, #1
  73 0024 2021     		movs	r1, #32
  74 0026 0748     		ldr	r0, .L9
  75 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
  76              	.LVL4:
 117:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2, SET); 
  77              		.loc 1 117 5 view .LVU15
  78 002c 0122     		movs	r2, #1
  79 002e 0421     		movs	r1, #4
  80 0030 0548     		ldr	r0, .L9+4
  81 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
  82              	.LVL5:
 118:Src/main.c    ****     for(int i = 0; i < 500; i ++);
  83              		.loc 1 118 5 view .LVU16
  84              	.LBB3:
  85              		.loc 1 118 9 view .LVU17
  86              		.loc 1 118 13 is_stmt 0 view .LVU18
  87 0036 0023     		movs	r3, #0
  88              	.LVL6:
  89              	.L4:
  90              		.loc 1 118 20 is_stmt 1 discriminator 1 view .LVU19
  91              		.loc 1 118 5 is_stmt 0 discriminator 1 view .LVU20
  92 0038 B3F5FA7F 		cmp	r3, #500
  93 003c E1DA     		bge	.L6
  94              		.loc 1 118 34 is_stmt 1 discriminator 3 view .LVU21
  95              		.loc 1 118 29 discriminator 3 view .LVU22
  96              		.loc 1 118 31 is_stmt 0 discriminator 3 view .LVU23
  97 003e 0133     		adds	r3, r3, #1
  98              	.LVL7:
  99              		.loc 1 118 31 discriminator 3 view .LVU24
 100 0040 FAE7     		b	.L4
 101              	.L10:
 102 0042 00BF     		.align	2
 103              	.L9:
 104 0044 00100140 		.word	1073811456
 105 0048 000C0140 		.word	1073810432
 106              	.LBE3:
 107              		.cfi_endproc
 108              	.LFE68:
 110              		.section	.text.DWT_Init,"ax",%progbits
 111              		.align	1
 112              		.global	DWT_Init
ARM GAS  /tmp/ccKrIQuL.s 			page 5


 113              		.syntax unified
 114              		.thumb
 115              		.thumb_func
 116              		.fpu softvfp
 118              	DWT_Init:
 119              	.LFB69:
 119:Src/main.c    ****   }
 120:Src/main.c    **** }
 121:Src/main.c    **** 
 122:Src/main.c    **** 
 123:Src/main.c    **** void DWT_Init(void) {
 120              		.loc 1 123 21 is_stmt 1 view -0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 124:Src/main.c    ****     if (!(DWT->CTRL & DWT_CTRL_CYCCNTENA_Msk)) {
 125              		.loc 1 124 5 view .LVU26
 126              		.loc 1 124 14 is_stmt 0 view .LVU27
 127 0000 084B     		ldr	r3, .L13
 128 0002 1B68     		ldr	r3, [r3]
 129              		.loc 1 124 8 view .LVU28
 130 0004 13F0010F 		tst	r3, #1
 131 0008 0BD1     		bne	.L11
 125:Src/main.c    ****         CoreDebug->DEMCR |= CoreDebug_DEMCR_TRCENA_Msk; // 启用DWT和ITM单元
 132              		.loc 1 125 9 is_stmt 1 view .LVU29
 133              		.loc 1 125 26 is_stmt 0 view .LVU30
 134 000a 074A     		ldr	r2, .L13+4
 135 000c D368     		ldr	r3, [r2, #12]
 136 000e 43F08073 		orr	r3, r3, #16777216
 137 0012 D360     		str	r3, [r2, #12]
 126:Src/main.c    ****         DWT->CYCCNT = 0; // 清零计数器
 138              		.loc 1 126 9 is_stmt 1 view .LVU31
 139              		.loc 1 126 21 is_stmt 0 view .LVU32
 140 0014 034B     		ldr	r3, .L13
 141 0016 0022     		movs	r2, #0
 142 0018 5A60     		str	r2, [r3, #4]
 127:Src/main.c    ****         DWT->CTRL |= DWT_CTRL_CYCCNTENA_Msk; // 启用CYCCNT
 143              		.loc 1 127 9 is_stmt 1 view .LVU33
 144              		.loc 1 127 19 is_stmt 0 view .LVU34
 145 001a 1A68     		ldr	r2, [r3]
 146 001c 42F00102 		orr	r2, r2, #1
 147 0020 1A60     		str	r2, [r3]
 148              	.L11:
 128:Src/main.c    ****     }
 129:Src/main.c    **** }
 149              		.loc 1 129 1 view .LVU35
 150 0022 7047     		bx	lr
 151              	.L14:
 152              		.align	2
 153              	.L13:
 154 0024 001000E0 		.word	-536866816
 155 0028 F0ED00E0 		.word	-536810000
 156              		.cfi_endproc
 157              	.LFE69:
 159              		.section	.text.DWT_Delay,"ax",%progbits
 160              		.align	1
ARM GAS  /tmp/ccKrIQuL.s 			page 6


 161              		.global	DWT_Delay
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu softvfp
 167              	DWT_Delay:
 168              	.LVL8:
 169              	.LFB70:
 130:Src/main.c    **** void DWT_Delay(uint32_t us) {   // 微秒级延时
 170              		.loc 1 130 29 is_stmt 1 view -0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              		@ link register save eliminated.
 131:Src/main.c    ****     uint32_t startTick = DWT->CYCCNT;
 175              		.loc 1 131 5 view .LVU37
 176              		.loc 1 131 14 is_stmt 0 view .LVU38
 177 0000 074B     		ldr	r3, .L17
 178 0002 5A68     		ldr	r2, [r3, #4]
 179              	.LVL9:
 132:Src/main.c    ****     uint32_t delayTicks = us * (SystemCoreClock / 1000000); // 转换微秒为tick数
 180              		.loc 1 132 5 is_stmt 1 view .LVU39
 181              		.loc 1 132 49 is_stmt 0 view .LVU40
 182 0004 074B     		ldr	r3, .L17+4
 183 0006 1B68     		ldr	r3, [r3]
 184 0008 0749     		ldr	r1, .L17+8
 185 000a A1FB0313 		umull	r1, r3, r1, r3
 186 000e 9B0C     		lsrs	r3, r3, #18
 187              		.loc 1 132 14 view .LVU41
 188 0010 00FB03F0 		mul	r0, r0, r3
 189              	.LVL10:
 133:Src/main.c    **** 
 134:Src/main.c    ****     while (DWT->CYCCNT - startTick < delayTicks);
 190              		.loc 1 134 5 is_stmt 1 view .LVU42
 191              	.L16:
 192              		.loc 1 134 49 discriminator 1 view .LVU43
 193              		.loc 1 134 11 discriminator 1 view .LVU44
 194              		.loc 1 134 15 is_stmt 0 discriminator 1 view .LVU45
 195 0014 024B     		ldr	r3, .L17
 196 0016 5B68     		ldr	r3, [r3, #4]
 197              		.loc 1 134 24 discriminator 1 view .LVU46
 198 0018 9B1A     		subs	r3, r3, r2
 199              		.loc 1 134 11 discriminator 1 view .LVU47
 200 001a 8342     		cmp	r3, r0
 201 001c FAD3     		bcc	.L16
 135:Src/main.c    **** }
 202              		.loc 1 135 1 view .LVU48
 203 001e 7047     		bx	lr
 204              	.L18:
 205              		.align	2
 206              	.L17:
 207 0020 001000E0 		.word	-536866816
 208 0024 00000000 		.word	SystemCoreClock
 209 0028 83DE1B43 		.word	1125899907
 210              		.cfi_endproc
 211              	.LFE70:
 213              		.section	.text.nmea_checksum,"ax",%progbits
ARM GAS  /tmp/ccKrIQuL.s 			page 7


 214              		.align	1
 215              		.global	nmea_checksum
 216              		.syntax unified
 217              		.thumb
 218              		.thumb_func
 219              		.fpu softvfp
 221              	nmea_checksum:
 222              	.LVL11:
 223              	.LFB71:
 136:Src/main.c    **** 
 137:Src/main.c    **** 
 138:Src/main.c    **** // 校验和计算函数
 139:Src/main.c    **** uint8_t nmea_checksum(const char* sentence) {
 224              		.loc 1 139 45 is_stmt 1 view -0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              		@ link register save eliminated.
 229              		.loc 1 139 45 is_stmt 0 view .LVU50
 230 0000 0246     		mov	r2, r0
 140:Src/main.c    ****     uint8_t checksum = 0;
 231              		.loc 1 140 5 is_stmt 1 view .LVU51
 232              	.LVL12:
 141:Src/main.c    ****     if (*sentence == '$') {
 233              		.loc 1 141 5 view .LVU52
 234              		.loc 1 141 9 is_stmt 0 view .LVU53
 235 0002 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 236              		.loc 1 141 8 view .LVU54
 237 0004 242B     		cmp	r3, #36
 238 0006 07D0     		beq	.L24
 239              	.LVL13:
 240              	.L20:
 139:Src/main.c    ****     uint8_t checksum = 0;
 241              		.loc 1 139 45 view .LVU55
 242 0008 0020     		movs	r0, #0
 243              	.LVL14:
 244              	.L21:
 142:Src/main.c    ****         sentence++;  // Skip '$'
 143:Src/main.c    ****     }
 144:Src/main.c    ****     
 145:Src/main.c    ****     while (*sentence && *sentence != '*') {
 245              		.loc 1 145 11 is_stmt 1 view .LVU56
 246              		.loc 1 145 12 is_stmt 0 view .LVU57
 247 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 248              		.loc 1 145 11 view .LVU58
 249 000c 33B1     		cbz	r3, .L22
 250              		.loc 1 145 22 discriminator 1 view .LVU59
 251 000e 2A2B     		cmp	r3, #42
 252 0010 04D0     		beq	.L22
 146:Src/main.c    ****         checksum ^= *sentence++;
 253              		.loc 1 146 9 is_stmt 1 view .LVU60
 254              		.loc 1 146 30 is_stmt 0 view .LVU61
 255 0012 0132     		adds	r2, r2, #1
 256              	.LVL15:
 257              		.loc 1 146 18 view .LVU62
 258 0014 5840     		eors	r0, r0, r3
 259              	.LVL16:
ARM GAS  /tmp/ccKrIQuL.s 			page 8


 260              		.loc 1 146 18 view .LVU63
 261 0016 F8E7     		b	.L21
 262              	.LVL17:
 263              	.L24:
 142:Src/main.c    ****         sentence++;  // Skip '$'
 264              		.loc 1 142 9 is_stmt 1 view .LVU64
 142:Src/main.c    ****         sentence++;  // Skip '$'
 265              		.loc 1 142 17 is_stmt 0 view .LVU65
 266 0018 0132     		adds	r2, r2, #1
 267              	.LVL18:
 142:Src/main.c    ****         sentence++;  // Skip '$'
 268              		.loc 1 142 17 view .LVU66
 269 001a F5E7     		b	.L20
 270              	.LVL19:
 271              	.L22:
 147:Src/main.c    ****     }
 148:Src/main.c    ****     return checksum;
 272              		.loc 1 148 5 is_stmt 1 view .LVU67
 149:Src/main.c    **** }
 273              		.loc 1 149 1 is_stmt 0 view .LVU68
 274 001c 7047     		bx	lr
 275              		.cfi_endproc
 276              	.LFE71:
 278              		.section	.rodata.GPRMC_Generator.str1.4,"aMS",%progbits,1
 279              		.align	2
 280              	.LC0:
 281 0000 24475052 		.ascii	"$GPRMC,%02d%02d%02d.00,A,%s,%s,0.00,0.00,%02d%02d%0"
 281      4D432C25 
 281      30326425 
 281      30326425 
 281      3032642E 
 282 0033 32642C2C 		.ascii	"2d,,,A*\000"
 282      2C412A00 
 283 003b 00       		.align	2
 284              	.LC1:
 285 003c 25303258 		.ascii	"%02X\015\012\000"
 285      0D0A00
 286              		.section	.text.GPRMC_Generator,"ax",%progbits
 287              		.align	1
 288              		.global	GPRMC_Generator
 289              		.syntax unified
 290              		.thumb
 291              		.thumb_func
 292              		.fpu softvfp
 294              	GPRMC_Generator:
 295              	.LVL20:
 296              	.LFB72:
 150:Src/main.c    **** 
 151:Src/main.c    **** 
 152:Src/main.c    **** 
 153:Src/main.c    **** // GPRMC Generator
 154:Src/main.c    **** void GPRMC_Generator(uint32_t input_baseTime) {
 297              		.loc 1 154 47 is_stmt 1 view -0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301              		.loc 1 154 47 is_stmt 0 view .LVU70
ARM GAS  /tmp/ccKrIQuL.s 			page 9


 302 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 303              	.LCFI1:
 304              		.cfi_def_cfa_offset 24
 305              		.cfi_offset 4, -24
 306              		.cfi_offset 5, -20
 307              		.cfi_offset 6, -16
 308              		.cfi_offset 7, -12
 309              		.cfi_offset 8, -8
 310              		.cfi_offset 14, -4
 311 0004 86B0     		sub	sp, sp, #24
 312              	.LCFI2:
 313              		.cfi_def_cfa_offset 48
 155:Src/main.c    ****     
 156:Src/main.c    ****     uint32_t culmulative_hms = 3600 * BASE_HOUR + 60 * BASE_MINUTE + BASE_SECOND;
 314              		.loc 1 156 5 is_stmt 1 view .LVU71
 315              		.loc 1 156 37 is_stmt 0 view .LVU72
 316 0006 324B     		ldr	r3, .L27
 317 0008 1C68     		ldr	r4, [r3]
 318              		.loc 1 156 54 view .LVU73
 319 000a 324B     		ldr	r3, .L27+4
 320 000c 1B68     		ldr	r3, [r3]
 321 000e C3EB0313 		rsb	r3, r3, r3, lsl #4
 322 0012 9B00     		lsls	r3, r3, #2
 323              		.loc 1 156 49 view .LVU74
 324 0014 4FF46160 		mov	r0, #3600
 325              	.LVL21:
 326              		.loc 1 156 49 view .LVU75
 327 0018 00FB0433 		mla	r3, r0, r4, r3
 328              		.loc 1 156 68 view .LVU76
 329 001c 2E4A     		ldr	r2, .L27+8
 330 001e 1468     		ldr	r4, [r2]
 331              		.loc 1 156 14 view .LVU77
 332 0020 1C44     		add	r4, r4, r3
 333              	.LVL22:
 157:Src/main.c    ****     uint32_t currentTime = culmulative_hms + (HAL_GetTick() + elapsed) / 1000;
 334              		.loc 1 157 5 is_stmt 1 view .LVU78
 335              		.loc 1 157 47 is_stmt 0 view .LVU79
 336 0022 FFF7FEFF 		bl	HAL_GetTick
 337              	.LVL23:
 338              		.loc 1 157 61 view .LVU80
 339 0026 2D4B     		ldr	r3, .L27+12
 340 0028 1B68     		ldr	r3, [r3]
 341 002a 1844     		add	r0, r0, r3
 342              		.loc 1 157 72 view .LVU81
 343 002c 2C4B     		ldr	r3, .L27+16
 344 002e A3FB0030 		umull	r3, r0, r3, r0
 345              		.loc 1 157 14 view .LVU82
 346 0032 04EB9010 		add	r0, r4, r0, lsr #6
 347              	.LVL24:
 158:Src/main.c    ****     uint8_t hour = (currentTime / 3600) % 24;
 348              		.loc 1 158 5 is_stmt 1 view .LVU83
 349              		.loc 1 158 33 is_stmt 0 view .LVU84
 350 0036 2B4B     		ldr	r3, .L27+20
 351 0038 A3FB0023 		umull	r2, r3, r3, r0
 352 003c DB0A     		lsrs	r3, r3, #11
 353              		.loc 1 158 41 view .LVU85
 354 003e 2A4D     		ldr	r5, .L27+24
ARM GAS  /tmp/ccKrIQuL.s 			page 10


 355 0040 A5FB0325 		umull	r2, r5, r5, r3
 356 0044 2D09     		lsrs	r5, r5, #4
 357 0046 05EB4505 		add	r5, r5, r5, lsl #1
 358 004a A3EBC505 		sub	r5, r3, r5, lsl #3
 359              	.LVL25:
 159:Src/main.c    ****     uint8_t minute = (currentTime / 60) % 60;
 360              		.loc 1 159 5 is_stmt 1 view .LVU86
 361              		.loc 1 159 35 is_stmt 0 view .LVU87
 362 004e 274C     		ldr	r4, .L27+28
 363              	.LVL26:
 364              		.loc 1 159 35 view .LVU88
 365 0050 A4FB0023 		umull	r2, r3, r4, r0
 366 0054 5B09     		lsrs	r3, r3, #5
 367              		.loc 1 159 41 view .LVU89
 368 0056 A4FB0324 		umull	r2, r4, r4, r3
 369 005a 6409     		lsrs	r4, r4, #5
 370 005c C4EB0414 		rsb	r4, r4, r4, lsl #4
 371 0060 A3EB8404 		sub	r4, r3, r4, lsl #2
 372              	.LVL27:
 160:Src/main.c    ****     uint8_t second = currentTime % 60;
 373              		.loc 1 160 5 is_stmt 1 view .LVU90
 374              		.loc 1 160 34 is_stmt 0 view .LVU91
 375 0064 C3EB0313 		rsb	r3, r3, r3, lsl #4
 376 0068 A0EB8306 		sub	r6, r0, r3, lsl #2
 377              	.LVL28:
 161:Src/main.c    **** 
 162:Src/main.c    ****     memset(gprmc_data, 0, sizeof(gprmc_data));
 378              		.loc 1 162 5 is_stmt 1 view .LVU92
 379 006c 204F     		ldr	r7, .L27+32
 380 006e 4FF06408 		mov	r8, #100
 381 0072 4246     		mov	r2, r8
 382 0074 0021     		movs	r1, #0
 383 0076 3846     		mov	r0, r7
 384              	.LVL29:
 385              		.loc 1 162 5 is_stmt 0 view .LVU93
 386 0078 FFF7FEFF 		bl	memset
 387              	.LVL30:
 163:Src/main.c    **** 
 164:Src/main.c    ****     // sprintf(gprmc_data, "$GPRMC,020008.00,A,2237.8840,N,11009.2400,E,0.00,0.00,120203,,,A*");
 165:Src/main.c    ****     sprintf(gprmc_data, "$GPRMC,%02d%02d%02d.00,A,%s,%s,0.00,0.00,%02d%02d%02d,,,A*",
 388              		.loc 1 165 5 is_stmt 1 view .LVU94
 389 007c 1D4B     		ldr	r3, .L27+36
 390 007e 1B68     		ldr	r3, [r3]
 391 0080 1D4A     		ldr	r2, .L27+40
 392 0082 A2FB0312 		umull	r1, r2, r2, r3
 393 0086 5209     		lsrs	r2, r2, #5
 394 0088 08FB1232 		mls	r2, r8, r2, r3
 395 008c 0592     		str	r2, [sp, #20]
 396 008e 1B4B     		ldr	r3, .L27+44
 397 0090 1B68     		ldr	r3, [r3]
 398 0092 0493     		str	r3, [sp, #16]
 399 0094 1A4B     		ldr	r3, .L27+48
 400 0096 1B68     		ldr	r3, [r3]
 401 0098 0393     		str	r3, [sp, #12]
 402 009a 1A4B     		ldr	r3, .L27+52
 403 009c 0293     		str	r3, [sp, #8]
 404 009e 1A4B     		ldr	r3, .L27+56
ARM GAS  /tmp/ccKrIQuL.s 			page 11


 405 00a0 0193     		str	r3, [sp, #4]
 406 00a2 F6B2     		uxtb	r6, r6
 407              		.loc 1 165 5 is_stmt 0 view .LVU95
 408 00a4 0096     		str	r6, [sp]
 409 00a6 E3B2     		uxtb	r3, r4
 410 00a8 EAB2     		uxtb	r2, r5
 411 00aa 1849     		ldr	r1, .L27+60
 412 00ac 3846     		mov	r0, r7
 413 00ae FFF7FEFF 		bl	sprintf
 414              	.LVL31:
 166:Src/main.c    ****             hour, minute, second, LATITUDE, LONGITUDE, BASE_DAY, BASE_MONTH, (BASE_YEAR % 100));
 167:Src/main.c    ****     
 168:Src/main.c    **** 
 169:Src/main.c    ****     // check sum
 170:Src/main.c    ****     uint8_t checksum = nmea_checksum(gprmc_data);
 415              		.loc 1 170 5 is_stmt 1 view .LVU96
 416              		.loc 1 170 24 is_stmt 0 view .LVU97
 417 00b2 3846     		mov	r0, r7
 418 00b4 FFF7FEFF 		bl	nmea_checksum
 419              	.LVL32:
 420 00b8 0446     		mov	r4, r0
 421              	.LVL33:
 171:Src/main.c    ****     
 172:Src/main.c    ****     int length = strlen(gprmc_data);
 422              		.loc 1 172 5 is_stmt 1 view .LVU98
 423              		.loc 1 172 18 is_stmt 0 view .LVU99
 424 00ba 3846     		mov	r0, r7
 425 00bc FFF7FEFF 		bl	strlen
 426              	.LVL34:
 173:Src/main.c    ****     sprintf(gprmc_data + length, "%02X\r\n", checksum);
 427              		.loc 1 173 5 is_stmt 1 view .LVU100
 428 00c0 2246     		mov	r2, r4
 429 00c2 1349     		ldr	r1, .L27+64
 430 00c4 3844     		add	r0, r0, r7
 431              	.LVL35:
 432              		.loc 1 173 5 is_stmt 0 view .LVU101
 433 00c6 FFF7FEFF 		bl	sprintf
 434              	.LVL36:
 174:Src/main.c    **** 
 175:Src/main.c    **** }
 435              		.loc 1 175 1 view .LVU102
 436 00ca 06B0     		add	sp, sp, #24
 437              	.LCFI3:
 438              		.cfi_def_cfa_offset 24
 439              		@ sp needed
 440 00cc BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 441              	.LVL37:
 442              	.L28:
 443              		.loc 1 175 1 view .LVU103
 444              		.align	2
 445              	.L27:
 446 00d0 00000000 		.word	.LANCHOR0
 447 00d4 00000000 		.word	.LANCHOR1
 448 00d8 00000000 		.word	.LANCHOR2
 449 00dc 00000000 		.word	.LANCHOR3
 450 00e0 D34D6210 		.word	274877907
 451 00e4 C5B3A291 		.word	-1851608123
ARM GAS  /tmp/ccKrIQuL.s 			page 12


 452 00e8 ABAAAAAA 		.word	-1431655765
 453 00ec 89888888 		.word	-2004318071
 454 00f0 00000000 		.word	gprmc_data
 455 00f4 00000000 		.word	.LANCHOR4
 456 00f8 1F85EB51 		.word	1374389535
 457 00fc 00000000 		.word	.LANCHOR5
 458 0100 00000000 		.word	.LANCHOR6
 459 0104 00000000 		.word	.LANCHOR7
 460 0108 00000000 		.word	.LANCHOR8
 461 010c 00000000 		.word	.LC0
 462 0110 3C000000 		.word	.LC1
 463              		.cfi_endproc
 464              	.LFE72:
 466              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 467              		.align	1
 468              		.global	TIM2_IRQHandler
 469              		.syntax unified
 470              		.thumb
 471              		.thumb_func
 472              		.fpu softvfp
 474              	TIM2_IRQHandler:
 475              	.LFB73:
 176:Src/main.c    **** 
 177:Src/main.c    **** 
 178:Src/main.c    **** 
 179:Src/main.c    **** 
 180:Src/main.c    **** volatile uint8_t enable_synchrone = 1;
 181:Src/main.c    **** 
 182:Src/main.c    **** void TIM2_IRQHandler(void)
 183:Src/main.c    **** {
 476              		.loc 1 183 1 is_stmt 1 view -0
 477              		.cfi_startproc
 478              		@ args = 0, pretend = 0, frame = 0
 479              		@ frame_needed = 0, uses_anonymous_args = 0
 480 0000 08B5     		push	{r3, lr}
 481              	.LCFI4:
 482              		.cfi_def_cfa_offset 8
 483              		.cfi_offset 3, -8
 484              		.cfi_offset 14, -4
 184:Src/main.c    ****     if(__HAL_TIM_GET_FLAG(&htim2, TIM_FLAG_TRIGGER) != RESET) {
 485              		.loc 1 184 5 view .LVU105
 486              		.loc 1 184 8 is_stmt 0 view .LVU106
 487 0002 124B     		ldr	r3, .L34
 488 0004 1B68     		ldr	r3, [r3]
 489 0006 1A69     		ldr	r2, [r3, #16]
 490              		.loc 1 184 7 view .LVU107
 491 0008 12F0400F 		tst	r2, #64
 492 000c 08D0     		beq	.L30
 185:Src/main.c    ****         __HAL_TIM_CLEAR_IT(&htim2, TIM_IT_TRIGGER);
 493              		.loc 1 185 9 is_stmt 1 view .LVU108
 494 000e 6FF04002 		mvn	r2, #64
 495 0012 1A61     		str	r2, [r3, #16]
 186:Src/main.c    **** 
 187:Src/main.c    ****         enable_synchrone = !enable_synchrone;
 496              		.loc 1 187 9 view .LVU109
 497              		.loc 1 187 28 is_stmt 0 view .LVU110
 498 0014 0E49     		ldr	r1, .L34+4
ARM GAS  /tmp/ccKrIQuL.s 			page 13


 499 0016 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 500 0018 B2FA82F2 		clz	r2, r2
 501 001c 5209     		lsrs	r2, r2, #5
 502              		.loc 1 187 26 view .LVU111
 503 001e 0A70     		strb	r2, [r1]
 504              	.L30:
 188:Src/main.c    **** 
 189:Src/main.c    ****     }
 190:Src/main.c    **** 
 191:Src/main.c    ****     if (__HAL_TIM_GET_FLAG(&htim2, TIM_FLAG_UPDATE) != RESET) {
 505              		.loc 1 191 5 is_stmt 1 view .LVU112
 506              		.loc 1 191 9 is_stmt 0 view .LVU113
 507 0020 1A69     		ldr	r2, [r3, #16]
 508              		.loc 1 191 8 view .LVU114
 509 0022 12F0010F 		tst	r2, #1
 510 0026 05D0     		beq	.L29
 192:Src/main.c    ****         __HAL_TIM_CLEAR_IT(&htim2, TIM_IT_UPDATE);
 511              		.loc 1 192 9 is_stmt 1 view .LVU115
 512 0028 6FF00102 		mvn	r2, #1
 513 002c 1A61     		str	r2, [r3, #16]
 193:Src/main.c    **** 
 194:Src/main.c    ****         if(!enable_synchrone)
 514              		.loc 1 194 9 view .LVU116
 515              		.loc 1 194 12 is_stmt 0 view .LVU117
 516 002e 084B     		ldr	r3, .L34+4
 517 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 518              		.loc 1 194 11 view .LVU118
 519 0032 03B1     		cbz	r3, .L33
 520              	.L29:
 195:Src/main.c    ****         {
 196:Src/main.c    ****             HAL_GPIO_WritePin(GPIOC, GPIO_PIN_5, RESET); 
 197:Src/main.c    ****             HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2, SET); 
 198:Src/main.c    ****         } 
 199:Src/main.c    ****     }
 200:Src/main.c    **** }
 521              		.loc 1 200 1 view .LVU119
 522 0034 08BD     		pop	{r3, pc}
 523              	.L33:
 196:Src/main.c    ****             HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2, SET); 
 524              		.loc 1 196 13 is_stmt 1 view .LVU120
 525 0036 0022     		movs	r2, #0
 526 0038 2021     		movs	r1, #32
 527 003a 0648     		ldr	r0, .L34+8
 528 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
 529              	.LVL38:
 197:Src/main.c    ****         } 
 530              		.loc 1 197 13 view .LVU121
 531 0040 0122     		movs	r2, #1
 532 0042 0421     		movs	r1, #4
 533 0044 0448     		ldr	r0, .L34+12
 534 0046 FFF7FEFF 		bl	HAL_GPIO_WritePin
 535              	.LVL39:
 536              		.loc 1 200 1 is_stmt 0 view .LVU122
 537 004a F3E7     		b	.L29
 538              	.L35:
 539              		.align	2
 540              	.L34:
ARM GAS  /tmp/ccKrIQuL.s 			page 14


 541 004c 00000000 		.word	htim2
 542 0050 00000000 		.word	.LANCHOR9
 543 0054 00100140 		.word	1073811456
 544 0058 000C0140 		.word	1073810432
 545              		.cfi_endproc
 546              	.LFE73:
 548              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 549              		.align	1
 550              		.global	HAL_TIM_PeriodElapsedCallback
 551              		.syntax unified
 552              		.thumb
 553              		.thumb_func
 554              		.fpu softvfp
 556              	HAL_TIM_PeriodElapsedCallback:
 557              	.LVL40:
 558              	.LFB74:
 201:Src/main.c    **** 
 202:Src/main.c    **** 
 203:Src/main.c    **** 
 204:Src/main.c    **** 
 205:Src/main.c    **** volatile uint8_t trigger_led_flag = 0;
 206:Src/main.c    **** int trigger_led_count = 0;
 207:Src/main.c    **** volatile uint8_t pps_flag = 0;
 208:Src/main.c    **** int pps_count = 0;
 209:Src/main.c    **** volatile uint8_t gprmc_led_flag = 0;
 210:Src/main.c    **** int gprmc_led_count = 0;
 211:Src/main.c    **** 
 212:Src/main.c    **** volatile uint8_t uart_transmit_flag = 0;
 213:Src/main.c    **** 
 214:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 215:Src/main.c    **** {
 559              		.loc 1 215 1 is_stmt 1 view -0
 560              		.cfi_startproc
 561              		@ args = 0, pretend = 0, frame = 0
 562              		@ frame_needed = 0, uses_anonymous_args = 0
 563              		.loc 1 215 1 is_stmt 0 view .LVU124
 564 0000 08B5     		push	{r3, lr}
 565              	.LCFI5:
 566              		.cfi_def_cfa_offset 8
 567              		.cfi_offset 3, -8
 568              		.cfi_offset 14, -4
 216:Src/main.c    ****     if (htim->Instance == TIM3) {
 569              		.loc 1 216 5 is_stmt 1 view .LVU125
 570              		.loc 1 216 13 is_stmt 0 view .LVU126
 571 0002 0268     		ldr	r2, [r0]
 572              		.loc 1 216 8 view .LVU127
 573 0004 134B     		ldr	r3, .L43
 574 0006 9A42     		cmp	r2, r3
 575 0008 00D0     		beq	.L41
 576              	.LVL41:
 577              	.L36:
 217:Src/main.c    ****       
 218:Src/main.c    ****         if (trigger_led_flag) {
 219:Src/main.c    **** 
 220:Src/main.c    ****             trigger_led_count ++;
 221:Src/main.c    ****             
 222:Src/main.c    ****         }
ARM GAS  /tmp/ccKrIQuL.s 			page 15


 223:Src/main.c    ****         if (pps_flag) {
 224:Src/main.c    **** 
 225:Src/main.c    ****             pps_count ++;
 226:Src/main.c    **** 
 227:Src/main.c    ****             if (pps_count >= 2)
 228:Src/main.c    ****             {
 229:Src/main.c    ****                 pps_flag = 0;
 230:Src/main.c    ****                 pps_count = 0;
 231:Src/main.c    ****                 HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_RESET); // PPS LOW
 232:Src/main.c    ****             }
 233:Src/main.c    ****             
 234:Src/main.c    ****         }
 235:Src/main.c    ****         if (gprmc_led_flag) {
 236:Src/main.c    **** 
 237:Src/main.c    ****             gprmc_led_count ++;
 238:Src/main.c    ****             
 239:Src/main.c    ****         }
 240:Src/main.c    ****     }
 241:Src/main.c    **** 
 242:Src/main.c    **** }
 578              		.loc 1 242 1 view .LVU128
 579 000a 08BD     		pop	{r3, pc}
 580              	.LVL42:
 581              	.L41:
 218:Src/main.c    **** 
 582              		.loc 1 218 9 is_stmt 1 view .LVU129
 218:Src/main.c    **** 
 583              		.loc 1 218 13 is_stmt 0 view .LVU130
 584 000c 124B     		ldr	r3, .L43+4
 585 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 218:Src/main.c    **** 
 586              		.loc 1 218 12 view .LVU131
 587 0010 1BB1     		cbz	r3, .L38
 220:Src/main.c    ****             
 588              		.loc 1 220 13 is_stmt 1 view .LVU132
 220:Src/main.c    ****             
 589              		.loc 1 220 31 is_stmt 0 view .LVU133
 590 0012 124A     		ldr	r2, .L43+8
 591 0014 1368     		ldr	r3, [r2]
 592 0016 0133     		adds	r3, r3, #1
 593 0018 1360     		str	r3, [r2]
 594              	.L38:
 223:Src/main.c    **** 
 595              		.loc 1 223 9 is_stmt 1 view .LVU134
 223:Src/main.c    **** 
 596              		.loc 1 223 13 is_stmt 0 view .LVU135
 597 001a 114B     		ldr	r3, .L43+12
 598 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 223:Src/main.c    **** 
 599              		.loc 1 223 12 view .LVU136
 600 001e 2BB1     		cbz	r3, .L39
 225:Src/main.c    **** 
 601              		.loc 1 225 13 is_stmt 1 view .LVU137
 225:Src/main.c    **** 
 602              		.loc 1 225 23 is_stmt 0 view .LVU138
 603 0020 104A     		ldr	r2, .L43+16
 604 0022 1368     		ldr	r3, [r2]
ARM GAS  /tmp/ccKrIQuL.s 			page 16


 605 0024 0133     		adds	r3, r3, #1
 606 0026 1360     		str	r3, [r2]
 227:Src/main.c    ****             {
 607              		.loc 1 227 13 is_stmt 1 view .LVU139
 227:Src/main.c    ****             {
 608              		.loc 1 227 16 is_stmt 0 view .LVU140
 609 0028 012B     		cmp	r3, #1
 610 002a 08DC     		bgt	.L42
 611              	.LVL43:
 612              	.L39:
 235:Src/main.c    **** 
 613              		.loc 1 235 9 is_stmt 1 view .LVU141
 235:Src/main.c    **** 
 614              		.loc 1 235 13 is_stmt 0 view .LVU142
 615 002c 0E4B     		ldr	r3, .L43+20
 616 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 235:Src/main.c    **** 
 617              		.loc 1 235 12 view .LVU143
 618 0030 002B     		cmp	r3, #0
 619 0032 EAD0     		beq	.L36
 237:Src/main.c    ****             
 620              		.loc 1 237 13 is_stmt 1 view .LVU144
 237:Src/main.c    ****             
 621              		.loc 1 237 29 is_stmt 0 view .LVU145
 622 0034 0D4A     		ldr	r2, .L43+24
 623 0036 1368     		ldr	r3, [r2]
 624 0038 0133     		adds	r3, r3, #1
 625 003a 1360     		str	r3, [r2]
 626              		.loc 1 242 1 view .LVU146
 627 003c E5E7     		b	.L36
 628              	.LVL44:
 629              	.L42:
 229:Src/main.c    ****                 pps_count = 0;
 630              		.loc 1 229 17 is_stmt 1 view .LVU147
 229:Src/main.c    ****                 pps_count = 0;
 631              		.loc 1 229 26 is_stmt 0 view .LVU148
 632 003e 0022     		movs	r2, #0
 633 0040 074B     		ldr	r3, .L43+12
 634 0042 1A70     		strb	r2, [r3]
 230:Src/main.c    ****                 HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_RESET); // PPS LOW
 635              		.loc 1 230 17 is_stmt 1 view .LVU149
 230:Src/main.c    ****                 HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_RESET); // PPS LOW
 636              		.loc 1 230 27 is_stmt 0 view .LVU150
 637 0044 074B     		ldr	r3, .L43+16
 638 0046 1A60     		str	r2, [r3]
 231:Src/main.c    ****             }
 639              		.loc 1 231 17 is_stmt 1 view .LVU151
 640 0048 0821     		movs	r1, #8
 641 004a 0948     		ldr	r0, .L43+28
 642              	.LVL45:
 231:Src/main.c    ****             }
 643              		.loc 1 231 17 is_stmt 0 view .LVU152
 644 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
 645              	.LVL46:
 646 0050 ECE7     		b	.L39
 647              	.L44:
 648 0052 00BF     		.align	2
ARM GAS  /tmp/ccKrIQuL.s 			page 17


 649              	.L43:
 650 0054 00040040 		.word	1073742848
 651 0058 00000000 		.word	.LANCHOR10
 652 005c 00000000 		.word	.LANCHOR11
 653 0060 00000000 		.word	.LANCHOR12
 654 0064 00000000 		.word	.LANCHOR13
 655 0068 00000000 		.word	.LANCHOR14
 656 006c 00000000 		.word	.LANCHOR15
 657 0070 000C0140 		.word	1073810432
 658              		.cfi_endproc
 659              	.LFE74:
 661              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 662              		.align	1
 663              		.global	HAL_UART_TxCpltCallback
 664              		.syntax unified
 665              		.thumb
 666              		.thumb_func
 667              		.fpu softvfp
 669              	HAL_UART_TxCpltCallback:
 670              	.LVL47:
 671              	.LFB76:
 243:Src/main.c    **** 
 244:Src/main.c    **** uint32_t pps_offset = 397;
 245:Src/main.c    **** uint32_t for_delay = 0;
 246:Src/main.c    **** // uint32_t pps_offset = 390;
 247:Src/main.c    **** // uint32_t for_delay = 35;
 248:Src/main.c    **** // uint32_t pps_offset = 0;
 249:Src/main.c    **** // uint32_t for_delay = 0;
 250:Src/main.c    **** void TIM4_IRQHandler(void) {
 251:Src/main.c    ****     if (__HAL_TIM_GET_FLAG(&htim4, TIM_FLAG_UPDATE) != RESET) {
 252:Src/main.c    ****         __HAL_TIM_CLEAR_IT(&htim4, TIM_IT_UPDATE);
 253:Src/main.c    ****         
 254:Src/main.c    ****         static uint32_t count_10hz = 0, count_1hz = 0;
 255:Src/main.c    ****         
 256:Src/main.c    ****         if (++count_10hz >= 500) {
 257:Src/main.c    ****             count_10hz = 0;
 258:Src/main.c    ****             trigger_flag = 1;
 259:Src/main.c    ****         }
 260:Src/main.c    ****         
 261:Src/main.c    ****         if (++count_1hz >= 5000) {
 262:Src/main.c    ****             count_1hz = 0;
 263:Src/main.c    ****             send_gps_flag = 1;
 264:Src/main.c    **** 
 265:Src/main.c    ****             if(pps_flag) {
 266:Src/main.c    ****               Error_Handler();
 267:Src/main.c    ****             }
 268:Src/main.c    ****             DWT_Delay(pps_offset);
 269:Src/main.c    ****             for(int i = 0; i < for_delay; i ++);
 270:Src/main.c    ****             HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_SET); // PPS HIGH
 271:Src/main.c    ****             pps_flag = 1;  // Set flag to turn off PPS in ISR after 100 ms
 272:Src/main.c    ****         }
 273:Src/main.c    **** 
 274:Src/main.c    ****     }
 275:Src/main.c    **** }
 276:Src/main.c    **** 
 277:Src/main.c    **** 
 278:Src/main.c    **** void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
ARM GAS  /tmp/ccKrIQuL.s 			page 18


 279:Src/main.c    **** {
 672              		.loc 1 279 1 is_stmt 1 view -0
 673              		.cfi_startproc
 674              		@ args = 0, pretend = 0, frame = 0
 675              		@ frame_needed = 0, uses_anonymous_args = 0
 676              		@ link register save eliminated.
 280:Src/main.c    ****     if (huart->Instance == USART1 || huart->Instance == USART3)
 677              		.loc 1 280 5 view .LVU154
 678              		.loc 1 280 14 is_stmt 0 view .LVU155
 679 0000 0368     		ldr	r3, [r0]
 680              		.loc 1 280 8 view .LVU156
 681 0002 054A     		ldr	r2, .L48
 682 0004 9342     		cmp	r3, r2
 683 0006 03D0     		beq	.L46
 684              		.loc 1 280 35 discriminator 1 view .LVU157
 685 0008 A2F57042 		sub	r2, r2, #61440
 686 000c 9342     		cmp	r3, r2
 687 000e 02D1     		bne	.L45
 688              	.L46:
 281:Src/main.c    ****     {
 282:Src/main.c    ****         gprmc_led_flag = 0;
 689              		.loc 1 282 9 is_stmt 1 view .LVU158
 690              		.loc 1 282 24 is_stmt 0 view .LVU159
 691 0010 024B     		ldr	r3, .L48+4
 692 0012 0022     		movs	r2, #0
 693 0014 1A70     		strb	r2, [r3]
 694              	.L45:
 283:Src/main.c    ****     }
 284:Src/main.c    **** }
 695              		.loc 1 284 1 view .LVU160
 696 0016 7047     		bx	lr
 697              	.L49:
 698              		.align	2
 699              	.L48:
 700 0018 00380140 		.word	1073821696
 701 001c 00000000 		.word	.LANCHOR14
 702              		.cfi_endproc
 703              	.LFE76:
 705              		.section	.rodata.ProcessReceivedData.str1.4,"aMS",%progbits,1
 706              		.align	2
 707              	.LC2:
 708 0000 53657420 		.ascii	"Set pps_offset = %ld\012\000"
 708      7070735F 
 708      6F666673 
 708      6574203D 
 708      20256C64 
 709 0016 0000     		.align	2
 710              	.LC4:
 711 0018 24475052 		.ascii	"$GPRMC\000"
 711      4D4300
 712 001f 00       		.align	2
 713              	.LC5:
 714 0020 2C00     		.ascii	",\000"
 715 0022 0000     		.align	2
 716              	.LC3:
 717 0024 4661696C 		.ascii	"Fail to set pps_offset! Invalid input as number.\012"
 717      20746F20 
ARM GAS  /tmp/ccKrIQuL.s 			page 19


 717      73657420 
 717      7070735F 
 717      6F666673 
 718 0055 00       		.ascii	"\000"
 719 0056 0000     		.align	2
 720              	.LC6:
 721 0058 4661696C 		.ascii	"Fail to set GPRMC data! Invalid GPRMC data!\000"
 721      20746F20 
 721      73657420 
 721      4750524D 
 721      43206461 
 722              		.section	.text.ProcessReceivedData,"ax",%progbits
 723              		.align	1
 724              		.global	ProcessReceivedData
 725              		.syntax unified
 726              		.thumb
 727              		.thumb_func
 728              		.fpu softvfp
 730              	ProcessReceivedData:
 731              	.LVL48:
 732              	.LFB77:
 285:Src/main.c    **** 
 286:Src/main.c    **** 
 287:Src/main.c    **** 
 288:Src/main.c    **** void ProcessReceivedData(uint8_t data) {
 733              		.loc 1 288 40 is_stmt 1 view -0
 734              		.cfi_startproc
 735              		@ args = 0, pretend = 0, frame = 104
 736              		@ frame_needed = 0, uses_anonymous_args = 0
 289:Src/main.c    ****     static char buffer[1024];
 737              		.loc 1 289 5 view .LVU162
 290:Src/main.c    ****     static int index = 0;
 738              		.loc 1 290 5 view .LVU163
 291:Src/main.c    **** 
 292:Src/main.c    ****     // 接收到换行符，处理数据
 293:Src/main.c    ****     if (data == '\n' || data == '\0') {
 739              		.loc 1 293 5 view .LVU164
 740              		.loc 1 293 8 is_stmt 0 view .LVU165
 741 0000 0A28     		cmp	r0, #10
 742 0002 02D0     		beq	.L51
 743              		.loc 1 293 22 discriminator 1 view .LVU166
 744 0004 0028     		cmp	r0, #0
 745 0006 40F0E680 		bne	.L52
 746              	.L51:
 288:Src/main.c    ****     static char buffer[1024];
 747              		.loc 1 288 40 view .LVU167
 748 000a 70B5     		push	{r4, r5, r6, lr}
 749              	.LCFI6:
 750              		.cfi_def_cfa_offset 16
 751              		.cfi_offset 4, -16
 752              		.cfi_offset 5, -12
 753              		.cfi_offset 6, -8
 754              		.cfi_offset 14, -4
 755 000c 9AB0     		sub	sp, sp, #104
 756              	.LCFI7:
 757              		.cfi_def_cfa_offset 120
 294:Src/main.c    ****         buffer[index] = '\0'; 
ARM GAS  /tmp/ccKrIQuL.s 			page 20


 758              		.loc 1 294 9 is_stmt 1 view .LVU168
 759              		.loc 1 294 15 is_stmt 0 view .LVU169
 760 000e 784B     		ldr	r3, .L78
 761 0010 1A68     		ldr	r2, [r3]
 762              		.loc 1 294 23 view .LVU170
 763 0012 784B     		ldr	r3, .L78+4
 764 0014 0021     		movs	r1, #0
 765 0016 9954     		strb	r1, [r3, r2]
 295:Src/main.c    ****         
 296:Src/main.c    ****         // 如果第一个字符是 #
 297:Src/main.c    ****         if (buffer[0] == '#') {
 766              		.loc 1 297 9 is_stmt 1 view .LVU171
 767              		.loc 1 297 19 is_stmt 0 view .LVU172
 768 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 769              		.loc 1 297 12 view .LVU173
 770 001a 232B     		cmp	r3, #35
 771 001c 0CD0     		beq	.L74
 298:Src/main.c    ****             char *ptr;
 299:Src/main.c    ****             long num = strtol(buffer + 1, &ptr, 10);  // 尝试将字符串转换为长整型数字
 300:Src/main.c    ****             if (*ptr == '\0') {  // 检查转换后的剩余部分是否为空
 301:Src/main.c    ****                 pps_offset = (uint32_t)num;
 302:Src/main.c    **** 
 303:Src/main.c    ****                 char output_log[100];
 304:Src/main.c    ****                 sprintf(output_log, "Set pps_offset = %ld\n", pps_offset);
 305:Src/main.c    ****                 HAL_UART_Transmit(&huart1, (uint8_t *)output_log, strlen(output_log), 1000);
 306:Src/main.c    ****             } else {
 307:Src/main.c    **** 
 308:Src/main.c    ****                 char output_log[] = "Fail to set pps_offset! Invalid input as number.\n";
 309:Src/main.c    ****                 HAL_UART_Transmit(&huart1, (uint8_t *)output_log, strlen(output_log), 1000);
 310:Src/main.c    ****                 return;
 311:Src/main.c    ****             }
 312:Src/main.c    ****         }
 313:Src/main.c    ****         // 如果第一个字符是 $
 314:Src/main.c    ****         else if (buffer[0] == '$') {
 772              		.loc 1 314 14 is_stmt 1 view .LVU174
 773              		.loc 1 314 17 is_stmt 0 view .LVU175
 774 001e 242B     		cmp	r3, #36
 775 0020 39D0     		beq	.L75
 776              	.LVL49:
 777              	.L55:
 315:Src/main.c    ****             if (strncmp(buffer, "$GPRMC", 6) == 0) {
 316:Src/main.c    ****                 int commaCount = 0;
 317:Src/main.c    ****                 for (int i = 0; buffer[i]; i++) {
 318:Src/main.c    ****                     if (buffer[i] == ',') commaCount++;
 319:Src/main.c    ****                 }
 320:Src/main.c    ****                 // 检查逗号数量是否符合最低要求
 321:Src/main.c    ****                 if (commaCount >= 11) { // GPRMC 应该至少有 12 个字段，即至少 11 个逗
 322:Src/main.c    ****                     // 解析 GPRMC 数据
 323:Src/main.c    ****                     char *token = strtok(buffer, ",");
 324:Src/main.c    ****                     int tokenIndex = 0;
 325:Src/main.c    ****                     while (token != NULL) {
 326:Src/main.c    ****                         token = strtok(NULL, ",");
 327:Src/main.c    ****                         tokenIndex++;
 328:Src/main.c    **** 
 329:Src/main.c    ****                         // 根据 GPRMC 的格式选择数据
 330:Src/main.c    ****                         switch (tokenIndex) {
 331:Src/main.c    ****                             case 1: // 时间
ARM GAS  /tmp/ccKrIQuL.s 			page 21


 332:Src/main.c    ****                                 BASE_HOUR = atoi(token) / 10000;
 333:Src/main.c    ****                                 BASE_MINUTE = (atoi(token) % 10000) / 100;
 334:Src/main.c    ****                                 BASE_SECOND = atoi(token) % 100;
 335:Src/main.c    ****                                 break;
 336:Src/main.c    ****                             case 3: // 纬度
 337:Src/main.c    ****                                 strncpy(LATITUDE, token, sizeof(LATITUDE));
 338:Src/main.c    ****                                 break;
 339:Src/main.c    ****                             case 4: // 纬度方向
 340:Src/main.c    ****                                 strncat(LATITUDE, token, sizeof(LATITUDE) - strlen(LATITUDE) - 1);
 341:Src/main.c    ****                                 break;
 342:Src/main.c    ****                             case 5: // 经度
 343:Src/main.c    ****                                 strncpy(LONGITUDE, token, sizeof(LONGITUDE));
 344:Src/main.c    ****                                 break;
 345:Src/main.c    ****                             case 6: // 经度方向
 346:Src/main.c    ****                                 strncat(LONGITUDE, token, sizeof(LONGITUDE) - strlen(LONGITUDE) - 1
 347:Src/main.c    ****                                 break;
 348:Src/main.c    ****                         }
 349:Src/main.c    ****                     }
 350:Src/main.c    ****                     elapsed = baseTick - HAL_GetTick();
 351:Src/main.c    **** 
 352:Src/main.c    ****                 } else {
 353:Src/main.c    ****                     char output_log[] = "Fail to set GPRMC data! Invalid GPRMC data!";
 354:Src/main.c    ****                     HAL_UART_Transmit(&huart1, (uint8_t *)output_log, strlen(output_log), 1000);
 355:Src/main.c    ****                     return;
 356:Src/main.c    ****                 }
 357:Src/main.c    ****             }
 358:Src/main.c    ****         }
 359:Src/main.c    **** 
 360:Src/main.c    ****         memset(buffer, 0, sizeof(buffer)); // 显式清空缓冲区
 778              		.loc 1 360 9 is_stmt 1 view .LVU176
 779 0022 4FF48062 		mov	r2, #1024
 780 0026 0021     		movs	r1, #0
 781 0028 7248     		ldr	r0, .L78+4
 782 002a FFF7FEFF 		bl	memset
 783              	.LVL50:
 361:Src/main.c    ****         index = 0; // 重置缓冲区索引
 784              		.loc 1 361 9 view .LVU177
 785              		.loc 1 361 15 is_stmt 0 view .LVU178
 786 002e 704B     		ldr	r3, .L78
 787 0030 0022     		movs	r2, #0
 788 0032 1A60     		str	r2, [r3]
 789              	.L50:
 362:Src/main.c    **** 
 363:Src/main.c    ****     } else {
 364:Src/main.c    ****         // 持续接收数据
 365:Src/main.c    ****         if (index < (sizeof(buffer) - 1)) {
 366:Src/main.c    ****             buffer[index++] = data;
 367:Src/main.c    ****         }
 368:Src/main.c    ****     }
 369:Src/main.c    **** }
 790              		.loc 1 369 1 view .LVU179
 791 0034 1AB0     		add	sp, sp, #104
 792              	.LCFI8:
 793              		.cfi_remember_state
 794              		.cfi_def_cfa_offset 16
 795              		@ sp needed
 796 0036 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/ccKrIQuL.s 			page 22


 797              	.LVL51:
 798              	.L74:
 799              	.LCFI9:
 800              		.cfi_restore_state
 801              	.LBB4:
 298:Src/main.c    ****             long num = strtol(buffer + 1, &ptr, 10);  // 尝试将字符串转换为长整型数字
 802              		.loc 1 298 13 is_stmt 1 view .LVU180
 299:Src/main.c    ****             if (*ptr == '\0') {  // 检查转换后的剩余部分是否为空
 803              		.loc 1 299 13 view .LVU181
 299:Src/main.c    ****             if (*ptr == '\0') {  // 检查转换后的剩余部分是否为空
 804              		.loc 1 299 24 is_stmt 0 view .LVU182
 805 0038 0A22     		movs	r2, #10
 806 003a 6946     		mov	r1, sp
 807 003c 6E48     		ldr	r0, .L78+8
 808              	.LVL52:
 299:Src/main.c    ****             if (*ptr == '\0') {  // 检查转换后的剩余部分是否为空
 809              		.loc 1 299 24 view .LVU183
 810 003e FFF7FEFF 		bl	strtol
 811              	.LVL53:
 812 0042 0246     		mov	r2, r0
 813              	.LVL54:
 300:Src/main.c    ****                 pps_offset = (uint32_t)num;
 814              		.loc 1 300 13 is_stmt 1 view .LVU184
 300:Src/main.c    ****                 pps_offset = (uint32_t)num;
 815              		.loc 1 300 17 is_stmt 0 view .LVU185
 816 0044 009B     		ldr	r3, [sp]
 817 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 300:Src/main.c    ****                 pps_offset = (uint32_t)num;
 818              		.loc 1 300 16 view .LVU186
 819 0048 83B9     		cbnz	r3, .L54
 820              	.LBB5:
 301:Src/main.c    **** 
 821              		.loc 1 301 17 is_stmt 1 view .LVU187
 301:Src/main.c    **** 
 822              		.loc 1 301 28 is_stmt 0 view .LVU188
 823 004a 6C4B     		ldr	r3, .L78+12
 824 004c 1860     		str	r0, [r3]
 303:Src/main.c    ****                 sprintf(output_log, "Set pps_offset = %ld\n", pps_offset);
 825              		.loc 1 303 17 is_stmt 1 view .LVU189
 304:Src/main.c    ****                 HAL_UART_Transmit(&huart1, (uint8_t *)output_log, strlen(output_log), 1000);
 826              		.loc 1 304 17 view .LVU190
 827 004e 6C49     		ldr	r1, .L78+16
 828 0050 01A8     		add	r0, sp, #4
 829              	.LVL55:
 304:Src/main.c    ****                 HAL_UART_Transmit(&huart1, (uint8_t *)output_log, strlen(output_log), 1000);
 830              		.loc 1 304 17 is_stmt 0 view .LVU191
 831 0052 FFF7FEFF 		bl	sprintf
 832              	.LVL56:
 305:Src/main.c    ****             } else {
 833              		.loc 1 305 17 is_stmt 1 view .LVU192
 305:Src/main.c    ****             } else {
 834              		.loc 1 305 67 is_stmt 0 view .LVU193
 835 0056 01A8     		add	r0, sp, #4
 836 0058 FFF7FEFF 		bl	strlen
 837              	.LVL57:
 305:Src/main.c    ****             } else {
 838              		.loc 1 305 17 view .LVU194
ARM GAS  /tmp/ccKrIQuL.s 			page 23


 839 005c 4FF47A73 		mov	r3, #1000
 840 0060 82B2     		uxth	r2, r0
 841 0062 01A9     		add	r1, sp, #4
 842 0064 6748     		ldr	r0, .L78+20
 843 0066 FFF7FEFF 		bl	HAL_UART_Transmit
 844              	.LVL58:
 845              	.LBE5:
 846 006a DAE7     		b	.L55
 847              	.LVL59:
 848              	.L54:
 849              	.LBB6:
 308:Src/main.c    ****                 HAL_UART_Transmit(&huart1, (uint8_t *)output_log, strlen(output_log), 1000);
 850              		.loc 1 308 17 is_stmt 1 view .LVU195
 308:Src/main.c    ****                 HAL_UART_Transmit(&huart1, (uint8_t *)output_log, strlen(output_log), 1000);
 851              		.loc 1 308 22 is_stmt 0 view .LVU196
 852 006c 01AC     		add	r4, sp, #4
 853 006e 664D     		ldr	r5, .L78+24
 854 0070 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 855              	.LVL60:
 308:Src/main.c    ****                 HAL_UART_Transmit(&huart1, (uint8_t *)output_log, strlen(output_log), 1000);
 856              		.loc 1 308 22 view .LVU197
 857 0072 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 858 0074 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 859 0076 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 860 0078 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 861 007a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 862 007c 2B68     		ldr	r3, [r5]
 863 007e 2380     		strh	r3, [r4]	@ movhi
 309:Src/main.c    ****                 return;
 864              		.loc 1 309 17 is_stmt 1 view .LVU198
 309:Src/main.c    ****                 return;
 865              		.loc 1 309 67 is_stmt 0 view .LVU199
 866 0080 01A8     		add	r0, sp, #4
 867 0082 FFF7FEFF 		bl	strlen
 868              	.LVL61:
 309:Src/main.c    ****                 return;
 869              		.loc 1 309 17 view .LVU200
 870 0086 4FF47A73 		mov	r3, #1000
 871 008a 82B2     		uxth	r2, r0
 872 008c 01A9     		add	r1, sp, #4
 873 008e 5D48     		ldr	r0, .L78+20
 874 0090 FFF7FEFF 		bl	HAL_UART_Transmit
 875              	.LVL62:
 310:Src/main.c    ****             }
 876              		.loc 1 310 17 is_stmt 1 view .LVU201
 877 0094 CEE7     		b	.L50
 878              	.LVL63:
 879              	.L75:
 310:Src/main.c    ****             }
 880              		.loc 1 310 17 is_stmt 0 view .LVU202
 881              	.LBE6:
 882              	.LBE4:
 315:Src/main.c    ****                 int commaCount = 0;
 883              		.loc 1 315 13 is_stmt 1 view .LVU203
 315:Src/main.c    ****                 int commaCount = 0;
 884              		.loc 1 315 17 is_stmt 0 view .LVU204
 885 0096 0622     		movs	r2, #6
ARM GAS  /tmp/ccKrIQuL.s 			page 24


 886 0098 5C49     		ldr	r1, .L78+28
 887 009a 5648     		ldr	r0, .L78+4
 888              	.LVL64:
 315:Src/main.c    ****                 int commaCount = 0;
 889              		.loc 1 315 17 view .LVU205
 890 009c FFF7FEFF 		bl	strncmp
 891              	.LVL65:
 315:Src/main.c    ****                 int commaCount = 0;
 892              		.loc 1 315 16 view .LVU206
 893 00a0 0546     		mov	r5, r0
 894 00a2 0028     		cmp	r0, #0
 895 00a4 BDD1     		bne	.L55
 896              	.LBB7:
 897              	.LBB8:
 317:Src/main.c    ****                     if (buffer[i] == ',') commaCount++;
 898              		.loc 1 317 26 view .LVU207
 899 00a6 0346     		mov	r3, r0
 900              	.LBE8:
 316:Src/main.c    ****                 for (int i = 0; buffer[i]; i++) {
 901              		.loc 1 316 21 view .LVU208
 902 00a8 0146     		mov	r1, r0
 903 00aa 00E0     		b	.L57
 904              	.LVL66:
 905              	.L58:
 906              	.LBB9:
 317:Src/main.c    ****                     if (buffer[i] == ',') commaCount++;
 907              		.loc 1 317 44 is_stmt 1 discriminator 2 view .LVU209
 317:Src/main.c    ****                     if (buffer[i] == ',') commaCount++;
 908              		.loc 1 317 45 is_stmt 0 discriminator 2 view .LVU210
 909 00ac 0133     		adds	r3, r3, #1
 910              	.LVL67:
 911              	.L57:
 317:Src/main.c    ****                     if (buffer[i] == ',') commaCount++;
 912              		.loc 1 317 33 is_stmt 1 discriminator 1 view .LVU211
 317:Src/main.c    ****                     if (buffer[i] == ',') commaCount++;
 913              		.loc 1 317 39 is_stmt 0 discriminator 1 view .LVU212
 914 00ae 514A     		ldr	r2, .L78+4
 915 00b0 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 317:Src/main.c    ****                     if (buffer[i] == ',') commaCount++;
 916              		.loc 1 317 17 discriminator 1 view .LVU213
 917 00b2 1AB1     		cbz	r2, .L76
 318:Src/main.c    ****                 }
 918              		.loc 1 318 21 is_stmt 1 view .LVU214
 318:Src/main.c    ****                 }
 919              		.loc 1 318 24 is_stmt 0 view .LVU215
 920 00b4 2C2A     		cmp	r2, #44
 921 00b6 F9D1     		bne	.L58
 318:Src/main.c    ****                 }
 922              		.loc 1 318 43 is_stmt 1 discriminator 1 view .LVU216
 318:Src/main.c    ****                 }
 923              		.loc 1 318 53 is_stmt 0 discriminator 1 view .LVU217
 924 00b8 0131     		adds	r1, r1, #1
 925              	.LVL68:
 318:Src/main.c    ****                 }
 926              		.loc 1 318 53 discriminator 1 view .LVU218
 927 00ba F7E7     		b	.L58
 928              	.L76:
ARM GAS  /tmp/ccKrIQuL.s 			page 25


 318:Src/main.c    ****                 }
 929              		.loc 1 318 53 discriminator 1 view .LVU219
 930              	.LBE9:
 321:Src/main.c    ****                     // 解析 GPRMC 数据
 931              		.loc 1 321 17 is_stmt 1 view .LVU220
 321:Src/main.c    ****                     // 解析 GPRMC 数据
 932              		.loc 1 321 20 is_stmt 0 view .LVU221
 933 00bc 0A29     		cmp	r1, #10
 934 00be 75DD     		ble	.L60
 935              	.LBB10:
 323:Src/main.c    ****                     int tokenIndex = 0;
 936              		.loc 1 323 21 is_stmt 1 view .LVU222
 323:Src/main.c    ****                     int tokenIndex = 0;
 937              		.loc 1 323 35 is_stmt 0 view .LVU223
 938 00c0 5349     		ldr	r1, .L78+32
 939              	.LVL69:
 323:Src/main.c    ****                     int tokenIndex = 0;
 940              		.loc 1 323 35 view .LVU224
 941 00c2 4C48     		ldr	r0, .L78+4
 942 00c4 FFF7FEFF 		bl	strtok
 943              	.LVL70:
 323:Src/main.c    ****                     int tokenIndex = 0;
 944              		.loc 1 323 35 view .LVU225
 945 00c8 0446     		mov	r4, r0
 946              	.LVL71:
 324:Src/main.c    ****                     while (token != NULL) {
 947              		.loc 1 324 21 is_stmt 1 view .LVU226
 325:Src/main.c    ****                         token = strtok(NULL, ",");
 948              		.loc 1 325 21 view .LVU227
 325:Src/main.c    ****                         token = strtok(NULL, ",");
 949              		.loc 1 325 27 is_stmt 0 view .LVU228
 950 00ca 2AE0     		b	.L61
 951              	.LVL72:
 952              	.L68:
 332:Src/main.c    ****                                 BASE_MINUTE = (atoi(token) % 10000) / 100;
 953              		.loc 1 332 33 is_stmt 1 view .LVU229
 332:Src/main.c    ****                                 BASE_MINUTE = (atoi(token) % 10000) / 100;
 954              		.loc 1 332 45 is_stmt 0 view .LVU230
 955 00cc FFF7FEFF 		bl	atoi
 956              	.LVL73:
 332:Src/main.c    ****                                 BASE_MINUTE = (atoi(token) % 10000) / 100;
 957              		.loc 1 332 57 view .LVU231
 958 00d0 504E     		ldr	r6, .L78+36
 959 00d2 86FB0023 		smull	r2, r3, r6, r0
 960 00d6 C017     		asrs	r0, r0, #31
 961 00d8 C0EB2330 		rsb	r0, r0, r3, asr #12
 332:Src/main.c    ****                                 BASE_MINUTE = (atoi(token) % 10000) / 100;
 962              		.loc 1 332 43 view .LVU232
 963 00dc 4E4B     		ldr	r3, .L78+40
 964 00de 1860     		str	r0, [r3]
 333:Src/main.c    ****                                 BASE_SECOND = atoi(token) % 100;
 965              		.loc 1 333 33 is_stmt 1 view .LVU233
 333:Src/main.c    ****                                 BASE_SECOND = atoi(token) % 100;
 966              		.loc 1 333 48 is_stmt 0 view .LVU234
 967 00e0 2046     		mov	r0, r4
 968 00e2 FFF7FEFF 		bl	atoi
 969              	.LVL74:
ARM GAS  /tmp/ccKrIQuL.s 			page 26


 333:Src/main.c    ****                                 BASE_SECOND = atoi(token) % 100;
 970              		.loc 1 333 60 view .LVU235
 971 00e6 86FB0036 		smull	r3, r6, r6, r0
 972 00ea C317     		asrs	r3, r0, #31
 973 00ec C3EB2633 		rsb	r3, r3, r6, asr #12
 974 00f0 42F21072 		movw	r2, #10000
 975 00f4 02FB1303 		mls	r3, r2, r3, r0
 333:Src/main.c    ****                                 BASE_SECOND = atoi(token) % 100;
 976              		.loc 1 333 69 view .LVU236
 977 00f8 484E     		ldr	r6, .L78+44
 978 00fa 86FB0312 		smull	r1, r2, r6, r3
 979 00fe DB17     		asrs	r3, r3, #31
 980 0100 C3EB6213 		rsb	r3, r3, r2, asr #5
 333:Src/main.c    ****                                 BASE_SECOND = atoi(token) % 100;
 981              		.loc 1 333 45 view .LVU237
 982 0104 464A     		ldr	r2, .L78+48
 983 0106 1360     		str	r3, [r2]
 334:Src/main.c    ****                                 break;
 984              		.loc 1 334 33 is_stmt 1 view .LVU238
 334:Src/main.c    ****                                 break;
 985              		.loc 1 334 47 is_stmt 0 view .LVU239
 986 0108 2046     		mov	r0, r4
 987 010a FFF7FEFF 		bl	atoi
 988              	.LVL75:
 334:Src/main.c    ****                                 break;
 989              		.loc 1 334 59 view .LVU240
 990 010e 86FB0036 		smull	r3, r6, r6, r0
 991 0112 C317     		asrs	r3, r0, #31
 992 0114 C3EB6613 		rsb	r3, r3, r6, asr #5
 993 0118 6422     		movs	r2, #100
 994 011a 02FB1303 		mls	r3, r2, r3, r0
 334:Src/main.c    ****                                 break;
 995              		.loc 1 334 45 view .LVU241
 996 011e 414A     		ldr	r2, .L78+52
 997 0120 1360     		str	r3, [r2]
 335:Src/main.c    ****                             case 3: // 纬度
 998              		.loc 1 335 33 is_stmt 1 view .LVU242
 999              	.LVL76:
 1000              	.L61:
 325:Src/main.c    ****                         token = strtok(NULL, ",");
 1001              		.loc 1 325 27 view .LVU243
 1002 0122 002C     		cmp	r4, #0
 1003 0124 3AD0     		beq	.L77
 326:Src/main.c    ****                         tokenIndex++;
 1004              		.loc 1 326 25 view .LVU244
 326:Src/main.c    ****                         tokenIndex++;
 1005              		.loc 1 326 33 is_stmt 0 view .LVU245
 1006 0126 3A49     		ldr	r1, .L78+32
 1007 0128 0020     		movs	r0, #0
 1008 012a FFF7FEFF 		bl	strtok
 1009              	.LVL77:
 1010 012e 0446     		mov	r4, r0
 1011              	.LVL78:
 327:Src/main.c    **** 
 1012              		.loc 1 327 25 is_stmt 1 view .LVU246
 327:Src/main.c    **** 
 1013              		.loc 1 327 35 is_stmt 0 view .LVU247
ARM GAS  /tmp/ccKrIQuL.s 			page 27


 1014 0130 0135     		adds	r5, r5, #1
 1015              	.LVL79:
 330:Src/main.c    ****                             case 1: // 时间
 1016              		.loc 1 330 25 is_stmt 1 view .LVU248
 1017 0132 6B1E     		subs	r3, r5, #1
 1018 0134 052B     		cmp	r3, #5
 1019 0136 F4D8     		bhi	.L61
 1020 0138 01A2     		adr	r2, .L64
 1021 013a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1022 013e 00BF     		.p2align 2
 1023              	.L64:
 1024 0140 CD000000 		.word	.L68+1
 1025 0144 23010000 		.word	.L61+1
 1026 0148 59010000 		.word	.L67+1
 1027 014c 65010000 		.word	.L66+1
 1028 0150 7B010000 		.word	.L65+1
 1029 0154 87010000 		.word	.L63+1
 1030              		.p2align 1
 1031              	.L67:
 337:Src/main.c    ****                                 break;
 1032              		.loc 1 337 33 view .LVU249
 1033 0158 1422     		movs	r2, #20
 1034 015a 0146     		mov	r1, r0
 1035 015c 3248     		ldr	r0, .L78+56
 1036              	.LVL80:
 337:Src/main.c    ****                                 break;
 1037              		.loc 1 337 33 is_stmt 0 view .LVU250
 1038 015e FFF7FEFF 		bl	strncpy
 1039              	.LVL81:
 338:Src/main.c    ****                             case 4: // 纬度方向
 1040              		.loc 1 338 33 is_stmt 1 view .LVU251
 1041 0162 DEE7     		b	.L61
 1042              	.LVL82:
 1043              	.L66:
 340:Src/main.c    ****                                 break;
 1044              		.loc 1 340 33 view .LVU252
 340:Src/main.c    ****                                 break;
 1045              		.loc 1 340 77 is_stmt 0 view .LVU253
 1046 0164 304E     		ldr	r6, .L78+56
 1047 0166 3046     		mov	r0, r6
 1048              	.LVL83:
 340:Src/main.c    ****                                 break;
 1049              		.loc 1 340 77 view .LVU254
 1050 0168 FFF7FEFF 		bl	strlen
 1051              	.LVL84:
 340:Src/main.c    ****                                 break;
 1052              		.loc 1 340 33 view .LVU255
 1053 016c C0F11302 		rsb	r2, r0, #19
 1054 0170 2146     		mov	r1, r4
 1055 0172 3046     		mov	r0, r6
 1056 0174 FFF7FEFF 		bl	strncat
 1057              	.LVL85:
 341:Src/main.c    ****                             case 5: // 经度
 1058              		.loc 1 341 33 is_stmt 1 view .LVU256
 1059 0178 D3E7     		b	.L61
 1060              	.LVL86:
 1061              	.L65:
ARM GAS  /tmp/ccKrIQuL.s 			page 28


 343:Src/main.c    ****                                 break;
 1062              		.loc 1 343 33 view .LVU257
 1063 017a 1422     		movs	r2, #20
 1064 017c 0146     		mov	r1, r0
 1065 017e 2B48     		ldr	r0, .L78+60
 1066              	.LVL87:
 343:Src/main.c    ****                                 break;
 1067              		.loc 1 343 33 is_stmt 0 view .LVU258
 1068 0180 FFF7FEFF 		bl	strncpy
 1069              	.LVL88:
 344:Src/main.c    ****                             case 6: // 经度方向
 1070              		.loc 1 344 33 is_stmt 1 view .LVU259
 1071 0184 CDE7     		b	.L61
 1072              	.LVL89:
 1073              	.L63:
 346:Src/main.c    ****                                 break;
 1074              		.loc 1 346 33 view .LVU260
 346:Src/main.c    ****                                 break;
 1075              		.loc 1 346 79 is_stmt 0 view .LVU261
 1076 0186 294E     		ldr	r6, .L78+60
 1077 0188 3046     		mov	r0, r6
 1078              	.LVL90:
 346:Src/main.c    ****                                 break;
 1079              		.loc 1 346 79 view .LVU262
 1080 018a FFF7FEFF 		bl	strlen
 1081              	.LVL91:
 346:Src/main.c    ****                                 break;
 1082              		.loc 1 346 33 view .LVU263
 1083 018e C0F11302 		rsb	r2, r0, #19
 1084 0192 2146     		mov	r1, r4
 1085 0194 3046     		mov	r0, r6
 1086 0196 FFF7FEFF 		bl	strncat
 1087              	.LVL92:
 347:Src/main.c    ****                         }
 1088              		.loc 1 347 33 is_stmt 1 view .LVU264
 1089 019a C2E7     		b	.L61
 1090              	.L77:
 350:Src/main.c    **** 
 1091              		.loc 1 350 21 view .LVU265
 350:Src/main.c    **** 
 1092              		.loc 1 350 40 is_stmt 0 view .LVU266
 1093 019c 244B     		ldr	r3, .L78+64
 1094 019e 1C68     		ldr	r4, [r3]
 1095              	.LVL93:
 350:Src/main.c    **** 
 1096              		.loc 1 350 42 view .LVU267
 1097 01a0 FFF7FEFF 		bl	HAL_GetTick
 1098              	.LVL94:
 350:Src/main.c    **** 
 1099              		.loc 1 350 40 view .LVU268
 1100 01a4 241A     		subs	r4, r4, r0
 350:Src/main.c    **** 
 1101              		.loc 1 350 29 view .LVU269
 1102 01a6 234B     		ldr	r3, .L78+68
 1103 01a8 1C60     		str	r4, [r3]
 1104              	.LBE10:
 1105 01aa 3AE7     		b	.L55
ARM GAS  /tmp/ccKrIQuL.s 			page 29


 1106              	.LVL95:
 1107              	.L60:
 1108              	.LBB11:
 353:Src/main.c    ****                     HAL_UART_Transmit(&huart1, (uint8_t *)output_log, strlen(output_log), 1000);
 1109              		.loc 1 353 21 is_stmt 1 view .LVU270
 353:Src/main.c    ****                     HAL_UART_Transmit(&huart1, (uint8_t *)output_log, strlen(output_log), 1000);
 1110              		.loc 1 353 26 is_stmt 0 view .LVU271
 1111 01ac 01AC     		add	r4, sp, #4
 1112 01ae 224D     		ldr	r5, .L78+72
 1113 01b0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1114              	.LVL96:
 353:Src/main.c    ****                     HAL_UART_Transmit(&huart1, (uint8_t *)output_log, strlen(output_log), 1000);
 1115              		.loc 1 353 26 view .LVU272
 1116 01b2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1117 01b4 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1118 01b6 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1119 01b8 95E80700 		ldm	r5, {r0, r1, r2}
 1120 01bc 84E80700 		stm	r4, {r0, r1, r2}
 354:Src/main.c    ****                     return;
 1121              		.loc 1 354 21 is_stmt 1 view .LVU273
 354:Src/main.c    ****                     return;
 1122              		.loc 1 354 71 is_stmt 0 view .LVU274
 1123 01c0 01A8     		add	r0, sp, #4
 1124 01c2 FFF7FEFF 		bl	strlen
 1125              	.LVL97:
 354:Src/main.c    ****                     return;
 1126              		.loc 1 354 21 view .LVU275
 1127 01c6 4FF47A73 		mov	r3, #1000
 1128 01ca 82B2     		uxth	r2, r0
 1129 01cc 01A9     		add	r1, sp, #4
 1130 01ce 0D48     		ldr	r0, .L78+20
 1131 01d0 FFF7FEFF 		bl	HAL_UART_Transmit
 1132              	.LVL98:
 355:Src/main.c    ****                 }
 1133              		.loc 1 355 21 is_stmt 1 view .LVU276
 1134 01d4 2EE7     		b	.L50
 1135              	.LVL99:
 1136              	.L52:
 1137              	.LCFI10:
 1138              		.cfi_def_cfa_offset 0
 1139              		.cfi_restore 4
 1140              		.cfi_restore 5
 1141              		.cfi_restore 6
 1142              		.cfi_restore 14
 355:Src/main.c    ****                 }
 1143              		.loc 1 355 21 is_stmt 0 view .LVU277
 1144              	.LBE11:
 1145              	.LBE7:
 365:Src/main.c    ****             buffer[index++] = data;
 1146              		.loc 1 365 9 is_stmt 1 view .LVU278
 365:Src/main.c    ****             buffer[index++] = data;
 1147              		.loc 1 365 19 is_stmt 0 view .LVU279
 1148 01d6 064B     		ldr	r3, .L78
 1149 01d8 1B68     		ldr	r3, [r3]
 365:Src/main.c    ****             buffer[index++] = data;
 1150              		.loc 1 365 12 view .LVU280
 1151 01da 40F2FE32 		movw	r2, #1022
ARM GAS  /tmp/ccKrIQuL.s 			page 30


 1152 01de 9342     		cmp	r3, r2
 1153 01e0 05D8     		bhi	.L72
 366:Src/main.c    ****         }
 1154              		.loc 1 366 13 is_stmt 1 view .LVU281
 366:Src/main.c    ****         }
 1155              		.loc 1 366 25 is_stmt 0 view .LVU282
 1156 01e2 591C     		adds	r1, r3, #1
 1157 01e4 024A     		ldr	r2, .L78
 1158 01e6 1160     		str	r1, [r2]
 366:Src/main.c    ****         }
 1159              		.loc 1 366 29 view .LVU283
 1160 01e8 024A     		ldr	r2, .L78+4
 1161 01ea D054     		strb	r0, [r2, r3]
 1162 01ec 7047     		bx	lr
 1163              	.L72:
 366:Src/main.c    ****         }
 1164              		.loc 1 366 29 view .LVU284
 1165 01ee 7047     		bx	lr
 1166              	.L79:
 1167              		.align	2
 1168              	.L78:
 1169 01f0 00000000 		.word	.LANCHOR16
 1170 01f4 00000000 		.word	.LANCHOR17
 1171 01f8 01000000 		.word	.LANCHOR17+1
 1172 01fc 00000000 		.word	.LANCHOR18
 1173 0200 00000000 		.word	.LC2
 1174 0204 00000000 		.word	huart1
 1175 0208 24000000 		.word	.LC3
 1176 020c 18000000 		.word	.LC4
 1177 0210 20000000 		.word	.LC5
 1178 0214 AD8BDB68 		.word	1759218605
 1179 0218 00000000 		.word	.LANCHOR0
 1180 021c 1F85EB51 		.word	1374389535
 1181 0220 00000000 		.word	.LANCHOR1
 1182 0224 00000000 		.word	.LANCHOR2
 1183 0228 00000000 		.word	.LANCHOR8
 1184 022c 00000000 		.word	.LANCHOR7
 1185 0230 00000000 		.word	.LANCHOR19
 1186 0234 00000000 		.word	.LANCHOR3
 1187 0238 58000000 		.word	.LC6
 1188              		.cfi_endproc
 1189              	.LFE77:
 1191              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1192              		.align	1
 1193              		.global	HAL_UART_RxCpltCallback
 1194              		.syntax unified
 1195              		.thumb
 1196              		.thumb_func
 1197              		.fpu softvfp
 1199              	HAL_UART_RxCpltCallback:
 1200              	.LVL100:
 1201              	.LFB78:
 370:Src/main.c    **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 371:Src/main.c    **** {
 1202              		.loc 1 371 1 is_stmt 1 view -0
 1203              		.cfi_startproc
 1204              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccKrIQuL.s 			page 31


 1205              		@ frame_needed = 0, uses_anonymous_args = 0
 1206              		.loc 1 371 1 is_stmt 0 view .LVU286
 1207 0000 38B5     		push	{r3, r4, r5, lr}
 1208              	.LCFI11:
 1209              		.cfi_def_cfa_offset 16
 1210              		.cfi_offset 3, -16
 1211              		.cfi_offset 4, -12
 1212              		.cfi_offset 5, -8
 1213              		.cfi_offset 14, -4
 372:Src/main.c    ****     if (huart->Instance == USART1) 
 1214              		.loc 1 372 5 is_stmt 1 view .LVU287
 1215              		.loc 1 372 14 is_stmt 0 view .LVU288
 1216 0002 0268     		ldr	r2, [r0]
 1217              		.loc 1 372 8 view .LVU289
 1218 0004 074B     		ldr	r3, .L84
 1219 0006 9A42     		cmp	r2, r3
 1220 0008 00D0     		beq	.L83
 1221              	.LVL101:
 1222              	.L80:
 373:Src/main.c    ****     {
 374:Src/main.c    ****         ProcessReceivedData(uart_rx_buffer); 
 375:Src/main.c    ****         HAL_UART_Receive_IT(huart, &uart_rx_buffer, 1);
 376:Src/main.c    ****     }
 377:Src/main.c    **** }
 1223              		.loc 1 377 1 view .LVU290
 1224 000a 38BD     		pop	{r3, r4, r5, pc}
 1225              	.LVL102:
 1226              	.L83:
 1227              		.loc 1 377 1 view .LVU291
 1228 000c 0446     		mov	r4, r0
 374:Src/main.c    ****         HAL_UART_Receive_IT(huart, &uart_rx_buffer, 1);
 1229              		.loc 1 374 9 is_stmt 1 view .LVU292
 1230 000e 064D     		ldr	r5, .L84+4
 1231 0010 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 1232              	.LVL103:
 374:Src/main.c    ****         HAL_UART_Receive_IT(huart, &uart_rx_buffer, 1);
 1233              		.loc 1 374 9 is_stmt 0 view .LVU293
 1234 0012 FFF7FEFF 		bl	ProcessReceivedData
 1235              	.LVL104:
 375:Src/main.c    ****     }
 1236              		.loc 1 375 9 is_stmt 1 view .LVU294
 1237 0016 0122     		movs	r2, #1
 1238 0018 2946     		mov	r1, r5
 1239 001a 2046     		mov	r0, r4
 1240 001c FFF7FEFF 		bl	HAL_UART_Receive_IT
 1241              	.LVL105:
 1242              		.loc 1 377 1 is_stmt 0 view .LVU295
 1243 0020 F3E7     		b	.L80
 1244              	.L85:
 1245 0022 00BF     		.align	2
 1246              	.L84:
 1247 0024 00380140 		.word	1073821696
 1248 0028 00000000 		.word	uart_rx_buffer
 1249              		.cfi_endproc
 1250              	.LFE78:
 1252              		.section	.text.Error_Handler,"ax",%progbits
 1253              		.align	1
ARM GAS  /tmp/ccKrIQuL.s 			page 32


 1254              		.global	Error_Handler
 1255              		.syntax unified
 1256              		.thumb
 1257              		.thumb_func
 1258              		.fpu softvfp
 1260              	Error_Handler:
 1261              	.LFB81:
 378:Src/main.c    **** 
 379:Src/main.c    **** 
 380:Src/main.c    **** 
 381:Src/main.c    **** 
 382:Src/main.c    **** /* USER CODE END 0 */
 383:Src/main.c    **** 
 384:Src/main.c    **** /**
 385:Src/main.c    ****   * @brief  The application entry point.
 386:Src/main.c    ****   * @retval int
 387:Src/main.c    ****   */
 388:Src/main.c    **** int main(void)
 389:Src/main.c    **** {
 390:Src/main.c    **** 
 391:Src/main.c    ****   /* USER CODE BEGIN 1 */
 392:Src/main.c    **** 
 393:Src/main.c    ****   /* USER CODE END 1 */
 394:Src/main.c    **** 
 395:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 396:Src/main.c    **** 
 397:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 398:Src/main.c    ****   HAL_Init();
 399:Src/main.c    **** 
 400:Src/main.c    ****   /* USER CODE BEGIN Init */
 401:Src/main.c    **** 
 402:Src/main.c    ****   /* USER CODE END Init */
 403:Src/main.c    **** 
 404:Src/main.c    ****   /* Configure the system clock */
 405:Src/main.c    ****   SystemClock_Config();
 406:Src/main.c    **** 
 407:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 408:Src/main.c    ****   DWT_Init();
 409:Src/main.c    ****   /* USER CODE END SysInit */
 410:Src/main.c    **** 
 411:Src/main.c    ****   /* Initialize all configured peripherals */
 412:Src/main.c    ****   MX_GPIO_Init();
 413:Src/main.c    ****   MX_DMA_Init();
 414:Src/main.c    ****   MX_TIM2_Init();
 415:Src/main.c    ****   MX_USART1_UART_Init();
 416:Src/main.c    ****   MX_USART3_UART_Init();
 417:Src/main.c    ****   MX_TIM3_Init();
 418:Src/main.c    ****   MX_TIM4_Init();
 419:Src/main.c    ****   /* USER CODE BEGIN 2 */
 420:Src/main.c    ****   
 421:Src/main.c    **** 
 422:Src/main.c    **** 
 423:Src/main.c    ****   if (HAL_TIM_Base_Start_IT(&htim3) != HAL_OK) {
 424:Src/main.c    ****     Error_Handler();
 425:Src/main.c    ****   }
 426:Src/main.c    ****   HAL_NVIC_SetPriority(TIM3_IRQn, 1, 1);
 427:Src/main.c    ****   HAL_NVIC_EnableIRQ(TIM3_IRQn);
ARM GAS  /tmp/ccKrIQuL.s 			page 33


 428:Src/main.c    **** 
 429:Src/main.c    ****   if (HAL_TIM_Base_Start_IT(&htim4) != HAL_OK) {
 430:Src/main.c    ****     Error_Handler();
 431:Src/main.c    ****   }
 432:Src/main.c    ****   HAL_NVIC_SetPriority(TIM4_IRQn, 0, 0);
 433:Src/main.c    ****   HAL_NVIC_EnableIRQ(TIM4_IRQn);
 434:Src/main.c    ****   baseTick = HAL_GetTick();
 435:Src/main.c    **** 
 436:Src/main.c    ****   if (HAL_TIM_Base_Start_IT(&htim2) != HAL_OK) {
 437:Src/main.c    ****     Error_Handler();  
 438:Src/main.c    ****   }
 439:Src/main.c    ****   HAL_NVIC_SetPriority(TIM2_IRQn, 2, 2);
 440:Src/main.c    ****   HAL_NVIC_EnableIRQ(TIM2_IRQn);
 441:Src/main.c    **** 
 442:Src/main.c    ****   // if (HAL_TIM_Base_Start_IT(&htim5) != HAL_OK) {
 443:Src/main.c    ****   //   Error_Handler();
 444:Src/main.c    ****   // }
 445:Src/main.c    ****   // HAL_NVIC_SetPriority(TIM5_IRQn, 0, 1);
 446:Src/main.c    ****   //   HAL_NVIC_EnableIRQ(TIM5_IRQn);
 447:Src/main.c    ****   
 448:Src/main.c    **** 
 449:Src/main.c    ****   if (HAL_UART_Receive_IT(&huart1, &uart_rx_buffer, 1) != HAL_OK) {
 450:Src/main.c    ****       Error_Handler(); 
 451:Src/main.c    ****   }
 452:Src/main.c    **** 
 453:Src/main.c    **** 
 454:Src/main.c    ****   while (1) {
 455:Src/main.c    **** 
 456:Src/main.c    ****       while(enable_synchrone) {
 457:Src/main.c    **** 
 458:Src/main.c    ****           if (trigger_led_flag && trigger_led_count >= 5)
 459:Src/main.c    ****           {
 460:Src/main.c    ****               trigger_led_flag = 0;
 461:Src/main.c    ****               trigger_led_count = 0;
 462:Src/main.c    ****               HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2, GPIO_PIN_SET); // Trigger LED OFF
 463:Src/main.c    ****           }
 464:Src/main.c    ****           
 465:Src/main.c    ****           if (!gprmc_led_flag && gprmc_led_count >= 5)
 466:Src/main.c    ****           {
 467:Src/main.c    ****               gprmc_led_count = 0;
 468:Src/main.c    ****               HAL_GPIO_WritePin(GPIOC, GPIO_PIN_5, GPIO_PIN_SET); // LED GPRMC Sending OFF
 469:Src/main.c    ****           }
 470:Src/main.c    ****         
 471:Src/main.c    **** 
 472:Src/main.c    ****           if (trigger_flag) {
 473:Src/main.c    **** 
 474:Src/main.c    ****               trigger_flag = 0;
 475:Src/main.c    **** 
 476:Src/main.c    ****               // 点亮PB2表示触发信号已发送
 477:Src/main.c    ****               HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2, GPIO_PIN_RESET); // Trigger LED
 478:Src/main.c    ****               trigger_led_flag = 1;
 479:Src/main.c    **** 
 480:Src/main.c    ****               HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_4); // Toggle Trigger signal
 481:Src/main.c    ****               
 482:Src/main.c    ****           }
 483:Src/main.c    **** 
 484:Src/main.c    ****           if (send_gps_flag) {
ARM GAS  /tmp/ccKrIQuL.s 			page 34


 485:Src/main.c    **** 
 486:Src/main.c    **** 
 487:Src/main.c    ****               send_gps_flag = 0;
 488:Src/main.c    **** 
 489:Src/main.c    ****               HAL_GPIO_WritePin(GPIOC, GPIO_PIN_5, GPIO_PIN_RESET); // LED GPRMC Sending ON
 490:Src/main.c    ****               gprmc_led_flag = 1;
 491:Src/main.c    **** 
 492:Src/main.c    ****               GPRMC_Generator(baseTime);
 493:Src/main.c    ****               HAL_UART_Transmit(&huart1, (uint8_t *)gprmc_data, strlen(gprmc_data), 6);
 494:Src/main.c    ****               // HAL_UART_Transmit_DMA(&huart1, (uint8_t *)gprmc_data, strlen(gprmc_data));
 495:Src/main.c    ****               // HAL_UART_Transmit(&huart3, (uint8_t *)gprmc_data, strlen(gprmc_data), 70);
 496:Src/main.c    ****               HAL_UART_Transmit_DMA(&huart3, (uint8_t *)gprmc_data, strlen(gprmc_data));
 497:Src/main.c    ****               
 498:Src/main.c    ****               
 499:Src/main.c    ****               
 500:Src/main.c    ****           }
 501:Src/main.c    ****       }
 502:Src/main.c    ****   }
 503:Src/main.c    **** 
 504:Src/main.c    ****   /* USER CODE END 2 */
 505:Src/main.c    **** 
 506:Src/main.c    ****   /* Infinite loop */
 507:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 508:Src/main.c    ****   while (1)
 509:Src/main.c    ****   {
 510:Src/main.c    ****     /* USER CODE END WHILE */
 511:Src/main.c    **** 
 512:Src/main.c    ****     /* USER CODE BEGIN 3 */
 513:Src/main.c    ****   }
 514:Src/main.c    ****   /* USER CODE END 3 */
 515:Src/main.c    **** }
 516:Src/main.c    **** 
 517:Src/main.c    **** /**
 518:Src/main.c    ****   * @brief System Clock Configuration
 519:Src/main.c    ****   * @retval None
 520:Src/main.c    ****   */
 521:Src/main.c    **** void SystemClock_Config(void)
 522:Src/main.c    **** {
 523:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 524:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 525:Src/main.c    **** 
 526:Src/main.c    ****   /** Initializes the RCC Oscillators according to the specified parameters
 527:Src/main.c    ****   * in the RCC_OscInitTypeDef structure.
 528:Src/main.c    ****   */
 529:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 530:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 531:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 532:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 533:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 534:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 535:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 536:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 537:Src/main.c    ****   {
 538:Src/main.c    ****     Error_Handler();
 539:Src/main.c    ****   }
 540:Src/main.c    **** 
 541:Src/main.c    ****   /** Initializes the CPU, AHB and APB buses clocks
ARM GAS  /tmp/ccKrIQuL.s 			page 35


 542:Src/main.c    ****   */
 543:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 544:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 545:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 546:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 547:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 548:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 549:Src/main.c    **** 
 550:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 551:Src/main.c    ****   {
 552:Src/main.c    ****     Error_Handler();
 553:Src/main.c    ****   }
 554:Src/main.c    **** }
 555:Src/main.c    **** 
 556:Src/main.c    **** /* USER CODE BEGIN 4 */
 557:Src/main.c    **** 
 558:Src/main.c    **** /* USER CODE END 4 */
 559:Src/main.c    **** 
 560:Src/main.c    **** /**
 561:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 562:Src/main.c    ****   * @retval None
 563:Src/main.c    ****   */
 564:Src/main.c    **** void Error_Handler(void)
 565:Src/main.c    **** {
 1262              		.loc 1 565 1 is_stmt 1 view -0
 1263              		.cfi_startproc
 1264              		@ Volatile: function does not return.
 1265              		@ args = 0, pretend = 0, frame = 0
 1266              		@ frame_needed = 0, uses_anonymous_args = 0
 1267 0000 08B5     		push	{r3, lr}
 1268              	.LCFI12:
 1269              		.cfi_def_cfa_offset 8
 1270              		.cfi_offset 3, -8
 1271              		.cfi_offset 14, -4
 566:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 567:Src/main.c    ****   Error_Handler_Custom();
 1272              		.loc 1 567 3 view .LVU297
 1273 0002 FFF7FEFF 		bl	Error_Handler_Custom
 1274              	.LVL106:
 1275              		.cfi_endproc
 1276              	.LFE81:
 1278              		.section	.text.TIM4_IRQHandler,"ax",%progbits
 1279              		.align	1
 1280              		.global	TIM4_IRQHandler
 1281              		.syntax unified
 1282              		.thumb
 1283              		.thumb_func
 1284              		.fpu softvfp
 1286              	TIM4_IRQHandler:
 1287              	.LFB75:
 250:Src/main.c    ****     if (__HAL_TIM_GET_FLAG(&htim4, TIM_FLAG_UPDATE) != RESET) {
 1288              		.loc 1 250 28 view -0
 1289              		.cfi_startproc
 1290              		@ args = 0, pretend = 0, frame = 0
 1291              		@ frame_needed = 0, uses_anonymous_args = 0
 1292 0000 08B5     		push	{r3, lr}
 1293              	.LCFI13:
ARM GAS  /tmp/ccKrIQuL.s 			page 36


 1294              		.cfi_def_cfa_offset 8
 1295              		.cfi_offset 3, -8
 1296              		.cfi_offset 14, -4
 251:Src/main.c    ****         __HAL_TIM_CLEAR_IT(&htim4, TIM_IT_UPDATE);
 1297              		.loc 1 251 5 view .LVU299
 251:Src/main.c    ****         __HAL_TIM_CLEAR_IT(&htim4, TIM_IT_UPDATE);
 1298              		.loc 1 251 9 is_stmt 0 view .LVU300
 1299 0002 1E4B     		ldr	r3, .L96
 1300 0004 1B68     		ldr	r3, [r3]
 1301 0006 1A69     		ldr	r2, [r3, #16]
 251:Src/main.c    ****         __HAL_TIM_CLEAR_IT(&htim4, TIM_IT_UPDATE);
 1302              		.loc 1 251 8 view .LVU301
 1303 0008 12F0010F 		tst	r2, #1
 1304 000c 35D0     		beq	.L88
 1305              	.LBB12:
 252:Src/main.c    ****         
 1306              		.loc 1 252 9 is_stmt 1 view .LVU302
 1307 000e 6FF00102 		mvn	r2, #1
 1308 0012 1A61     		str	r2, [r3, #16]
 254:Src/main.c    ****         
 1309              		.loc 1 254 9 view .LVU303
 256:Src/main.c    ****             count_10hz = 0;
 1310              		.loc 1 256 9 view .LVU304
 256:Src/main.c    ****             count_10hz = 0;
 1311              		.loc 1 256 13 is_stmt 0 view .LVU305
 1312 0014 1A4A     		ldr	r2, .L96+4
 1313 0016 1368     		ldr	r3, [r2]
 1314 0018 0133     		adds	r3, r3, #1
 256:Src/main.c    ****             count_10hz = 0;
 1315              		.loc 1 256 12 view .LVU306
 1316 001a 1360     		str	r3, [r2]
 1317 001c B3F5FA7F 		cmp	r3, #500
 1318 0020 05D3     		bcc	.L90
 257:Src/main.c    ****             trigger_flag = 1;
 1319              		.loc 1 257 13 is_stmt 1 view .LVU307
 257:Src/main.c    ****             trigger_flag = 1;
 1320              		.loc 1 257 24 is_stmt 0 view .LVU308
 1321 0022 1346     		mov	r3, r2
 1322 0024 0022     		movs	r2, #0
 1323 0026 1A60     		str	r2, [r3]
 258:Src/main.c    ****         }
 1324              		.loc 1 258 13 is_stmt 1 view .LVU309
 258:Src/main.c    ****         }
 1325              		.loc 1 258 26 is_stmt 0 view .LVU310
 1326 0028 164B     		ldr	r3, .L96+8
 1327 002a 0122     		movs	r2, #1
 1328 002c 1A70     		strb	r2, [r3]
 1329              	.L90:
 261:Src/main.c    ****             count_1hz = 0;
 1330              		.loc 1 261 9 is_stmt 1 view .LVU311
 261:Src/main.c    ****             count_1hz = 0;
 1331              		.loc 1 261 13 is_stmt 0 view .LVU312
 1332 002e 164A     		ldr	r2, .L96+12
 1333 0030 1368     		ldr	r3, [r2]
 1334 0032 0133     		adds	r3, r3, #1
 261:Src/main.c    ****             count_1hz = 0;
 1335              		.loc 1 261 12 view .LVU313
ARM GAS  /tmp/ccKrIQuL.s 			page 37


 1336 0034 1360     		str	r3, [r2]
 1337 0036 41F28732 		movw	r2, #4999
 1338 003a 9342     		cmp	r3, r2
 1339 003c 1DD9     		bls	.L88
 262:Src/main.c    ****             send_gps_flag = 1;
 1340              		.loc 1 262 13 is_stmt 1 view .LVU314
 262:Src/main.c    ****             send_gps_flag = 1;
 1341              		.loc 1 262 23 is_stmt 0 view .LVU315
 1342 003e 124B     		ldr	r3, .L96+12
 1343 0040 0022     		movs	r2, #0
 1344 0042 1A60     		str	r2, [r3]
 263:Src/main.c    **** 
 1345              		.loc 1 263 13 is_stmt 1 view .LVU316
 263:Src/main.c    **** 
 1346              		.loc 1 263 27 is_stmt 0 view .LVU317
 1347 0044 114B     		ldr	r3, .L96+16
 1348 0046 0122     		movs	r2, #1
 1349 0048 1A70     		strb	r2, [r3]
 265:Src/main.c    ****               Error_Handler();
 1350              		.loc 1 265 13 is_stmt 1 view .LVU318
 265:Src/main.c    ****               Error_Handler();
 1351              		.loc 1 265 16 is_stmt 0 view .LVU319
 1352 004a 114B     		ldr	r3, .L96+20
 1353 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 265:Src/main.c    ****               Error_Handler();
 1354              		.loc 1 265 15 view .LVU320
 1355 004e 2BB9     		cbnz	r3, .L95
 268:Src/main.c    ****             for(int i = 0; i < for_delay; i ++);
 1356              		.loc 1 268 13 is_stmt 1 view .LVU321
 1357 0050 104B     		ldr	r3, .L96+24
 1358 0052 1868     		ldr	r0, [r3]
 1359 0054 FFF7FEFF 		bl	DWT_Delay
 1360              	.LVL107:
 269:Src/main.c    ****             HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_SET); // PPS HIGH
 1361              		.loc 1 269 13 view .LVU322
 1362              	.LBB13:
 269:Src/main.c    ****             HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_SET); // PPS HIGH
 1363              		.loc 1 269 17 view .LVU323
 269:Src/main.c    ****             HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_SET); // PPS HIGH
 1364              		.loc 1 269 21 is_stmt 0 view .LVU324
 1365 0058 0023     		movs	r3, #0
 269:Src/main.c    ****             HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_SET); // PPS HIGH
 1366              		.loc 1 269 13 view .LVU325
 1367 005a 02E0     		b	.L92
 1368              	.LVL108:
 1369              	.L95:
 269:Src/main.c    ****             HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_SET); // PPS HIGH
 1370              		.loc 1 269 13 view .LVU326
 1371              	.LBE13:
 266:Src/main.c    ****             }
 1372              		.loc 1 266 15 is_stmt 1 view .LVU327
 1373 005c FFF7FEFF 		bl	Error_Handler
 1374              	.LVL109:
 1375              	.L93:
 1376              	.LBB14:
 269:Src/main.c    ****             HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_SET); // PPS HIGH
 1377              		.loc 1 269 48 discriminator 3 view .LVU328
ARM GAS  /tmp/ccKrIQuL.s 			page 38


 269:Src/main.c    ****             HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_SET); // PPS HIGH
 1378              		.loc 1 269 43 discriminator 3 view .LVU329
 269:Src/main.c    ****             HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_SET); // PPS HIGH
 1379              		.loc 1 269 45 is_stmt 0 discriminator 3 view .LVU330
 1380 0060 0133     		adds	r3, r3, #1
 1381              	.LVL110:
 1382              	.L92:
 269:Src/main.c    ****             HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_SET); // PPS HIGH
 1383              		.loc 1 269 28 is_stmt 1 discriminator 1 view .LVU331
 269:Src/main.c    ****             HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_SET); // PPS HIGH
 1384              		.loc 1 269 30 is_stmt 0 discriminator 1 view .LVU332
 1385 0062 0D4A     		ldr	r2, .L96+28
 1386 0064 1268     		ldr	r2, [r2]
 269:Src/main.c    ****             HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_SET); // PPS HIGH
 1387              		.loc 1 269 13 discriminator 1 view .LVU333
 1388 0066 9342     		cmp	r3, r2
 1389 0068 FAD3     		bcc	.L93
 1390              	.LBE14:
 270:Src/main.c    ****             pps_flag = 1;  // Set flag to turn off PPS in ISR after 100 ms
 1391              		.loc 1 270 13 is_stmt 1 view .LVU334
 1392 006a 0122     		movs	r2, #1
 1393 006c 0821     		movs	r1, #8
 1394 006e 0B48     		ldr	r0, .L96+32
 1395 0070 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1396              	.LVL111:
 271:Src/main.c    ****         }
 1397              		.loc 1 271 13 view .LVU335
 271:Src/main.c    ****         }
 1398              		.loc 1 271 22 is_stmt 0 view .LVU336
 1399 0074 064B     		ldr	r3, .L96+20
 1400 0076 0122     		movs	r2, #1
 1401 0078 1A70     		strb	r2, [r3]
 1402              	.L88:
 271:Src/main.c    ****         }
 1403              		.loc 1 271 22 view .LVU337
 1404              	.LBE12:
 275:Src/main.c    **** 
 1405              		.loc 1 275 1 view .LVU338
 1406 007a 08BD     		pop	{r3, pc}
 1407              	.L97:
 1408              		.align	2
 1409              	.L96:
 1410 007c 00000000 		.word	htim4
 1411 0080 00000000 		.word	.LANCHOR20
 1412 0084 00000000 		.word	.LANCHOR21
 1413 0088 00000000 		.word	.LANCHOR22
 1414 008c 00000000 		.word	.LANCHOR23
 1415 0090 00000000 		.word	.LANCHOR12
 1416 0094 00000000 		.word	.LANCHOR18
 1417 0098 00000000 		.word	.LANCHOR24
 1418 009c 000C0140 		.word	1073810432
 1419              		.cfi_endproc
 1420              	.LFE75:
 1422              		.section	.text.SystemClock_Config,"ax",%progbits
 1423              		.align	1
 1424              		.global	SystemClock_Config
 1425              		.syntax unified
ARM GAS  /tmp/ccKrIQuL.s 			page 39


 1426              		.thumb
 1427              		.thumb_func
 1428              		.fpu softvfp
 1430              	SystemClock_Config:
 1431              	.LFB80:
 522:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1432              		.loc 1 522 1 is_stmt 1 view -0
 1433              		.cfi_startproc
 1434              		@ args = 0, pretend = 0, frame = 64
 1435              		@ frame_needed = 0, uses_anonymous_args = 0
 1436 0000 00B5     		push	{lr}
 1437              	.LCFI14:
 1438              		.cfi_def_cfa_offset 4
 1439              		.cfi_offset 14, -4
 1440 0002 91B0     		sub	sp, sp, #68
 1441              	.LCFI15:
 1442              		.cfi_def_cfa_offset 72
 523:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1443              		.loc 1 523 3 view .LVU340
 523:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1444              		.loc 1 523 22 is_stmt 0 view .LVU341
 1445 0004 0023     		movs	r3, #0
 1446 0006 0993     		str	r3, [sp, #36]
 1447 0008 0B93     		str	r3, [sp, #44]
 1448 000a 0C93     		str	r3, [sp, #48]
 524:Src/main.c    **** 
 1449              		.loc 1 524 3 is_stmt 1 view .LVU342
 524:Src/main.c    **** 
 1450              		.loc 1 524 22 is_stmt 0 view .LVU343
 1451 000c 0193     		str	r3, [sp, #4]
 1452 000e 0293     		str	r3, [sp, #8]
 1453 0010 0393     		str	r3, [sp, #12]
 1454 0012 0493     		str	r3, [sp, #16]
 1455 0014 0593     		str	r3, [sp, #20]
 529:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1456              		.loc 1 529 3 is_stmt 1 view .LVU344
 529:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1457              		.loc 1 529 36 is_stmt 0 view .LVU345
 1458 0016 0121     		movs	r1, #1
 1459 0018 0691     		str	r1, [sp, #24]
 530:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 1460              		.loc 1 530 3 is_stmt 1 view .LVU346
 530:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 1461              		.loc 1 530 30 is_stmt 0 view .LVU347
 1462 001a 4FF48032 		mov	r2, #65536
 1463 001e 0792     		str	r2, [sp, #28]
 531:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1464              		.loc 1 531 3 is_stmt 1 view .LVU348
 531:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1465              		.loc 1 531 36 is_stmt 0 view .LVU349
 1466 0020 0893     		str	r3, [sp, #32]
 532:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1467              		.loc 1 532 3 is_stmt 1 view .LVU350
 532:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1468              		.loc 1 532 30 is_stmt 0 view .LVU351
 1469 0022 0A91     		str	r1, [sp, #40]
 533:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
ARM GAS  /tmp/ccKrIQuL.s 			page 40


 1470              		.loc 1 533 3 is_stmt 1 view .LVU352
 533:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1471              		.loc 1 533 34 is_stmt 0 view .LVU353
 1472 0024 0223     		movs	r3, #2
 1473 0026 0D93     		str	r3, [sp, #52]
 534:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 1474              		.loc 1 534 3 is_stmt 1 view .LVU354
 534:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 1475              		.loc 1 534 35 is_stmt 0 view .LVU355
 1476 0028 0E92     		str	r2, [sp, #56]
 535:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1477              		.loc 1 535 3 is_stmt 1 view .LVU356
 535:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1478              		.loc 1 535 32 is_stmt 0 view .LVU357
 1479 002a 4FF4E013 		mov	r3, #1835008
 1480 002e 0F93     		str	r3, [sp, #60]
 536:Src/main.c    ****   {
 1481              		.loc 1 536 3 is_stmt 1 view .LVU358
 536:Src/main.c    ****   {
 1482              		.loc 1 536 7 is_stmt 0 view .LVU359
 1483 0030 06A8     		add	r0, sp, #24
 1484 0032 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1485              	.LVL112:
 536:Src/main.c    ****   {
 1486              		.loc 1 536 6 view .LVU360
 1487 0036 80B9     		cbnz	r0, .L102
 543:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1488              		.loc 1 543 3 is_stmt 1 view .LVU361
 543:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1489              		.loc 1 543 31 is_stmt 0 view .LVU362
 1490 0038 0F23     		movs	r3, #15
 1491 003a 0193     		str	r3, [sp, #4]
 545:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1492              		.loc 1 545 3 is_stmt 1 view .LVU363
 545:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1493              		.loc 1 545 34 is_stmt 0 view .LVU364
 1494 003c 0221     		movs	r1, #2
 1495 003e 0291     		str	r1, [sp, #8]
 546:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1496              		.loc 1 546 3 is_stmt 1 view .LVU365
 546:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1497              		.loc 1 546 35 is_stmt 0 view .LVU366
 1498 0040 0023     		movs	r3, #0
 1499 0042 0393     		str	r3, [sp, #12]
 547:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1500              		.loc 1 547 3 is_stmt 1 view .LVU367
 547:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1501              		.loc 1 547 36 is_stmt 0 view .LVU368
 1502 0044 4FF48062 		mov	r2, #1024
 1503 0048 0492     		str	r2, [sp, #16]
 548:Src/main.c    **** 
 1504              		.loc 1 548 3 is_stmt 1 view .LVU369
 548:Src/main.c    **** 
 1505              		.loc 1 548 36 is_stmt 0 view .LVU370
 1506 004a 0593     		str	r3, [sp, #20]
 550:Src/main.c    ****   {
 1507              		.loc 1 550 3 is_stmt 1 view .LVU371
ARM GAS  /tmp/ccKrIQuL.s 			page 41


 550:Src/main.c    ****   {
 1508              		.loc 1 550 7 is_stmt 0 view .LVU372
 1509 004c 01A8     		add	r0, sp, #4
 1510 004e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1511              	.LVL113:
 550:Src/main.c    ****   {
 1512              		.loc 1 550 6 view .LVU373
 1513 0052 20B9     		cbnz	r0, .L103
 554:Src/main.c    **** 
 1514              		.loc 1 554 1 view .LVU374
 1515 0054 11B0     		add	sp, sp, #68
 1516              	.LCFI16:
 1517              		.cfi_remember_state
 1518              		.cfi_def_cfa_offset 4
 1519              		@ sp needed
 1520 0056 5DF804FB 		ldr	pc, [sp], #4
 1521              	.L102:
 1522              	.LCFI17:
 1523              		.cfi_restore_state
 538:Src/main.c    ****   }
 1524              		.loc 1 538 5 is_stmt 1 view .LVU375
 1525 005a FFF7FEFF 		bl	Error_Handler
 1526              	.LVL114:
 1527              	.L103:
 552:Src/main.c    ****   }
 1528              		.loc 1 552 5 view .LVU376
 1529 005e FFF7FEFF 		bl	Error_Handler
 1530              	.LVL115:
 1531              		.cfi_endproc
 1532              	.LFE80:
 1534              		.section	.text.main,"ax",%progbits
 1535              		.align	1
 1536              		.global	main
 1537              		.syntax unified
 1538              		.thumb
 1539              		.thumb_func
 1540              		.fpu softvfp
 1542              	main:
 1543              	.LFB79:
 389:Src/main.c    **** 
 1544              		.loc 1 389 1 view -0
 1545              		.cfi_startproc
 1546              		@ Volatile: function does not return.
 1547              		@ args = 0, pretend = 0, frame = 0
 1548              		@ frame_needed = 0, uses_anonymous_args = 0
 1549 0000 08B5     		push	{r3, lr}
 1550              	.LCFI18:
 1551              		.cfi_def_cfa_offset 8
 1552              		.cfi_offset 3, -8
 1553              		.cfi_offset 14, -4
 398:Src/main.c    **** 
 1554              		.loc 1 398 3 view .LVU378
 1555 0002 FFF7FEFF 		bl	HAL_Init
 1556              	.LVL116:
 405:Src/main.c    **** 
 1557              		.loc 1 405 3 view .LVU379
 1558 0006 FFF7FEFF 		bl	SystemClock_Config
ARM GAS  /tmp/ccKrIQuL.s 			page 42


 1559              	.LVL117:
 408:Src/main.c    ****   /* USER CODE END SysInit */
 1560              		.loc 1 408 3 view .LVU380
 1561 000a FFF7FEFF 		bl	DWT_Init
 1562              	.LVL118:
 412:Src/main.c    ****   MX_DMA_Init();
 1563              		.loc 1 412 3 view .LVU381
 1564 000e FFF7FEFF 		bl	MX_GPIO_Init
 1565              	.LVL119:
 413:Src/main.c    ****   MX_TIM2_Init();
 1566              		.loc 1 413 3 view .LVU382
 1567 0012 FFF7FEFF 		bl	MX_DMA_Init
 1568              	.LVL120:
 414:Src/main.c    ****   MX_USART1_UART_Init();
 1569              		.loc 1 414 3 view .LVU383
 1570 0016 FFF7FEFF 		bl	MX_TIM2_Init
 1571              	.LVL121:
 415:Src/main.c    ****   MX_USART3_UART_Init();
 1572              		.loc 1 415 3 view .LVU384
 1573 001a FFF7FEFF 		bl	MX_USART1_UART_Init
 1574              	.LVL122:
 416:Src/main.c    ****   MX_TIM3_Init();
 1575              		.loc 1 416 3 view .LVU385
 1576 001e FFF7FEFF 		bl	MX_USART3_UART_Init
 1577              	.LVL123:
 417:Src/main.c    ****   MX_TIM4_Init();
 1578              		.loc 1 417 3 view .LVU386
 1579 0022 FFF7FEFF 		bl	MX_TIM3_Init
 1580              	.LVL124:
 418:Src/main.c    ****   /* USER CODE BEGIN 2 */
 1581              		.loc 1 418 3 view .LVU387
 1582 0026 FFF7FEFF 		bl	MX_TIM4_Init
 1583              	.LVL125:
 423:Src/main.c    ****     Error_Handler();
 1584              		.loc 1 423 3 view .LVU388
 423:Src/main.c    ****     Error_Handler();
 1585              		.loc 1 423 7 is_stmt 0 view .LVU389
 1586 002a 4948     		ldr	r0, .L119
 1587 002c FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1588              	.LVL126:
 423:Src/main.c    ****     Error_Handler();
 1589              		.loc 1 423 6 view .LVU390
 1590 0030 08B1     		cbz	r0, .L105
 424:Src/main.c    ****   }
 1591              		.loc 1 424 5 is_stmt 1 view .LVU391
 1592 0032 FFF7FEFF 		bl	Error_Handler
 1593              	.LVL127:
 1594              	.L105:
 426:Src/main.c    ****   HAL_NVIC_EnableIRQ(TIM3_IRQn);
 1595              		.loc 1 426 3 view .LVU392
 1596 0036 0122     		movs	r2, #1
 1597 0038 1146     		mov	r1, r2
 1598 003a 1D20     		movs	r0, #29
 1599 003c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 1600              	.LVL128:
 427:Src/main.c    **** 
 1601              		.loc 1 427 3 view .LVU393
ARM GAS  /tmp/ccKrIQuL.s 			page 43


 1602 0040 1D20     		movs	r0, #29
 1603 0042 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 1604              	.LVL129:
 429:Src/main.c    ****     Error_Handler();
 1605              		.loc 1 429 3 view .LVU394
 429:Src/main.c    ****     Error_Handler();
 1606              		.loc 1 429 7 is_stmt 0 view .LVU395
 1607 0046 4348     		ldr	r0, .L119+4
 1608 0048 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1609              	.LVL130:
 429:Src/main.c    ****     Error_Handler();
 1610              		.loc 1 429 6 view .LVU396
 1611 004c 08B1     		cbz	r0, .L106
 430:Src/main.c    ****   }
 1612              		.loc 1 430 5 is_stmt 1 view .LVU397
 1613 004e FFF7FEFF 		bl	Error_Handler
 1614              	.LVL131:
 1615              	.L106:
 432:Src/main.c    ****   HAL_NVIC_EnableIRQ(TIM4_IRQn);
 1616              		.loc 1 432 3 view .LVU398
 1617 0052 0022     		movs	r2, #0
 1618 0054 1146     		mov	r1, r2
 1619 0056 1E20     		movs	r0, #30
 1620 0058 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 1621              	.LVL132:
 433:Src/main.c    ****   baseTick = HAL_GetTick();
 1622              		.loc 1 433 3 view .LVU399
 1623 005c 1E20     		movs	r0, #30
 1624 005e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 1625              	.LVL133:
 434:Src/main.c    **** 
 1626              		.loc 1 434 3 view .LVU400
 434:Src/main.c    **** 
 1627              		.loc 1 434 14 is_stmt 0 view .LVU401
 1628 0062 FFF7FEFF 		bl	HAL_GetTick
 1629              	.LVL134:
 434:Src/main.c    **** 
 1630              		.loc 1 434 12 view .LVU402
 1631 0066 3C4B     		ldr	r3, .L119+8
 1632 0068 1860     		str	r0, [r3]
 436:Src/main.c    ****     Error_Handler();  
 1633              		.loc 1 436 3 is_stmt 1 view .LVU403
 436:Src/main.c    ****     Error_Handler();  
 1634              		.loc 1 436 7 is_stmt 0 view .LVU404
 1635 006a 3C48     		ldr	r0, .L119+12
 1636 006c FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1637              	.LVL135:
 436:Src/main.c    ****     Error_Handler();  
 1638              		.loc 1 436 6 view .LVU405
 1639 0070 08B1     		cbz	r0, .L107
 437:Src/main.c    ****   }
 1640              		.loc 1 437 5 is_stmt 1 view .LVU406
 1641 0072 FFF7FEFF 		bl	Error_Handler
 1642              	.LVL136:
 1643              	.L107:
 439:Src/main.c    ****   HAL_NVIC_EnableIRQ(TIM2_IRQn);
 1644              		.loc 1 439 3 view .LVU407
ARM GAS  /tmp/ccKrIQuL.s 			page 44


 1645 0076 0222     		movs	r2, #2
 1646 0078 1146     		mov	r1, r2
 1647 007a 1C20     		movs	r0, #28
 1648 007c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 1649              	.LVL137:
 440:Src/main.c    **** 
 1650              		.loc 1 440 3 view .LVU408
 1651 0080 1C20     		movs	r0, #28
 1652 0082 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 1653              	.LVL138:
 449:Src/main.c    ****       Error_Handler(); 
 1654              		.loc 1 449 3 view .LVU409
 449:Src/main.c    ****       Error_Handler(); 
 1655              		.loc 1 449 7 is_stmt 0 view .LVU410
 1656 0086 0122     		movs	r2, #1
 1657 0088 3549     		ldr	r1, .L119+16
 1658 008a 3648     		ldr	r0, .L119+20
 1659 008c FFF7FEFF 		bl	HAL_UART_Receive_IT
 1660              	.LVL139:
 449:Src/main.c    ****       Error_Handler(); 
 1661              		.loc 1 449 6 view .LVU411
 1662 0090 90B1     		cbz	r0, .L114
 450:Src/main.c    ****   }
 1663              		.loc 1 450 7 is_stmt 1 view .LVU412
 1664 0092 FFF7FEFF 		bl	Error_Handler
 1665              	.LVL140:
 1666              	.L118:
 460:Src/main.c    ****               trigger_led_count = 0;
 1667              		.loc 1 460 15 view .LVU413
 460:Src/main.c    ****               trigger_led_count = 0;
 1668              		.loc 1 460 32 is_stmt 0 view .LVU414
 1669 0096 0023     		movs	r3, #0
 1670 0098 334A     		ldr	r2, .L119+24
 1671 009a 1370     		strb	r3, [r2]
 461:Src/main.c    ****               HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2, GPIO_PIN_SET); // Trigger LED OFF
 1672              		.loc 1 461 15 is_stmt 1 view .LVU415
 461:Src/main.c    ****               HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2, GPIO_PIN_SET); // Trigger LED OFF
 1673              		.loc 1 461 33 is_stmt 0 view .LVU416
 1674 009c 334A     		ldr	r2, .L119+28
 1675 009e 1360     		str	r3, [r2]
 462:Src/main.c    ****           }
 1676              		.loc 1 462 15 is_stmt 1 view .LVU417
 1677 00a0 0122     		movs	r2, #1
 1678 00a2 0421     		movs	r1, #4
 1679 00a4 3248     		ldr	r0, .L119+32
 1680 00a6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1681              	.LVL141:
 1682 00aa 10E0     		b	.L109
 1683              	.L110:
 472:Src/main.c    **** 
 1684              		.loc 1 472 11 view .LVU418
 472:Src/main.c    **** 
 1685              		.loc 1 472 15 is_stmt 0 view .LVU419
 1686 00ac 314B     		ldr	r3, .L119+36
 1687 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 472:Src/main.c    **** 
 1688              		.loc 1 472 14 view .LVU420
ARM GAS  /tmp/ccKrIQuL.s 			page 45


 1689 00b0 F3B9     		cbnz	r3, .L116
 1690              	.L111:
 484:Src/main.c    **** 
 1691              		.loc 1 484 11 is_stmt 1 view .LVU421
 484:Src/main.c    **** 
 1692              		.loc 1 484 15 is_stmt 0 view .LVU422
 1693 00b2 314B     		ldr	r3, .L119+40
 1694 00b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 484:Src/main.c    **** 
 1695              		.loc 1 484 14 view .LVU423
 1696 00b6 53BB     		cbnz	r3, .L117
 1697              	.L114:
 456:Src/main.c    **** 
 1698              		.loc 1 456 12 is_stmt 1 view .LVU424
 456:Src/main.c    **** 
 1699              		.loc 1 456 13 is_stmt 0 view .LVU425
 1700 00b8 304B     		ldr	r3, .L119+44
 1701 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 456:Src/main.c    **** 
 1702              		.loc 1 456 12 view .LVU426
 1703 00bc 002B     		cmp	r3, #0
 1704 00be FBD0     		beq	.L114
 458:Src/main.c    ****           {
 1705              		.loc 1 458 11 is_stmt 1 view .LVU427
 458:Src/main.c    ****           {
 1706              		.loc 1 458 15 is_stmt 0 view .LVU428
 1707 00c0 294B     		ldr	r3, .L119+24
 1708 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 458:Src/main.c    ****           {
 1709              		.loc 1 458 14 view .LVU429
 1710 00c4 1BB1     		cbz	r3, .L109
 458:Src/main.c    ****           {
 1711              		.loc 1 458 53 discriminator 1 view .LVU430
 1712 00c6 294B     		ldr	r3, .L119+28
 1713 00c8 1B68     		ldr	r3, [r3]
 458:Src/main.c    ****           {
 1714              		.loc 1 458 32 discriminator 1 view .LVU431
 1715 00ca 042B     		cmp	r3, #4
 1716 00cc E3DC     		bgt	.L118
 1717              	.L109:
 465:Src/main.c    ****           {
 1718              		.loc 1 465 11 is_stmt 1 view .LVU432
 465:Src/main.c    ****           {
 1719              		.loc 1 465 15 is_stmt 0 view .LVU433
 1720 00ce 2C4B     		ldr	r3, .L119+48
 1721 00d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 465:Src/main.c    ****           {
 1722              		.loc 1 465 14 view .LVU434
 1723 00d2 002B     		cmp	r3, #0
 1724 00d4 EAD1     		bne	.L110
 465:Src/main.c    ****           {
 1725              		.loc 1 465 50 discriminator 1 view .LVU435
 1726 00d6 2B4B     		ldr	r3, .L119+52
 1727 00d8 1B68     		ldr	r3, [r3]
 465:Src/main.c    ****           {
 1728              		.loc 1 465 31 discriminator 1 view .LVU436
 1729 00da 042B     		cmp	r3, #4
ARM GAS  /tmp/ccKrIQuL.s 			page 46


 1730 00dc E6DD     		ble	.L110
 467:Src/main.c    ****               HAL_GPIO_WritePin(GPIOC, GPIO_PIN_5, GPIO_PIN_SET); // LED GPRMC Sending OFF
 1731              		.loc 1 467 15 is_stmt 1 view .LVU437
 467:Src/main.c    ****               HAL_GPIO_WritePin(GPIOC, GPIO_PIN_5, GPIO_PIN_SET); // LED GPRMC Sending OFF
 1732              		.loc 1 467 31 is_stmt 0 view .LVU438
 1733 00de 294B     		ldr	r3, .L119+52
 1734 00e0 0022     		movs	r2, #0
 1735 00e2 1A60     		str	r2, [r3]
 468:Src/main.c    ****           }
 1736              		.loc 1 468 15 is_stmt 1 view .LVU439
 1737 00e4 0122     		movs	r2, #1
 1738 00e6 2021     		movs	r1, #32
 1739 00e8 2748     		ldr	r0, .L119+56
 1740 00ea FFF7FEFF 		bl	HAL_GPIO_WritePin
 1741              	.LVL142:
 1742 00ee DDE7     		b	.L110
 1743              	.L116:
 474:Src/main.c    **** 
 1744              		.loc 1 474 15 view .LVU440
 474:Src/main.c    **** 
 1745              		.loc 1 474 28 is_stmt 0 view .LVU441
 1746 00f0 0022     		movs	r2, #0
 1747 00f2 204B     		ldr	r3, .L119+36
 1748 00f4 1A70     		strb	r2, [r3]
 477:Src/main.c    ****               trigger_led_flag = 1;
 1749              		.loc 1 477 15 is_stmt 1 view .LVU442
 1750 00f6 0421     		movs	r1, #4
 1751 00f8 1D48     		ldr	r0, .L119+32
 1752 00fa FFF7FEFF 		bl	HAL_GPIO_WritePin
 1753              	.LVL143:
 478:Src/main.c    **** 
 1754              		.loc 1 478 15 view .LVU443
 478:Src/main.c    **** 
 1755              		.loc 1 478 32 is_stmt 0 view .LVU444
 1756 00fe 1A4B     		ldr	r3, .L119+24
 1757 0100 0122     		movs	r2, #1
 1758 0102 1A70     		strb	r2, [r3]
 480:Src/main.c    ****               
 1759              		.loc 1 480 15 is_stmt 1 view .LVU445
 1760 0104 1021     		movs	r1, #16
 1761 0106 2048     		ldr	r0, .L119+56
 1762 0108 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1763              	.LVL144:
 1764 010c D1E7     		b	.L111
 1765              	.L117:
 487:Src/main.c    **** 
 1766              		.loc 1 487 15 view .LVU446
 487:Src/main.c    **** 
 1767              		.loc 1 487 29 is_stmt 0 view .LVU447
 1768 010e 0022     		movs	r2, #0
 1769 0110 194B     		ldr	r3, .L119+40
 1770 0112 1A70     		strb	r2, [r3]
 489:Src/main.c    ****               gprmc_led_flag = 1;
 1771              		.loc 1 489 15 is_stmt 1 view .LVU448
 1772 0114 2021     		movs	r1, #32
 1773 0116 1C48     		ldr	r0, .L119+56
 1774 0118 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /tmp/ccKrIQuL.s 			page 47


 1775              	.LVL145:
 490:Src/main.c    **** 
 1776              		.loc 1 490 15 view .LVU449
 490:Src/main.c    **** 
 1777              		.loc 1 490 30 is_stmt 0 view .LVU450
 1778 011c 184B     		ldr	r3, .L119+48
 1779 011e 0122     		movs	r2, #1
 1780 0120 1A70     		strb	r2, [r3]
 492:Src/main.c    ****               HAL_UART_Transmit(&huart1, (uint8_t *)gprmc_data, strlen(gprmc_data), 6);
 1781              		.loc 1 492 15 is_stmt 1 view .LVU451
 1782 0122 1A4B     		ldr	r3, .L119+60
 1783 0124 1868     		ldr	r0, [r3]
 1784 0126 FFF7FEFF 		bl	GPRMC_Generator
 1785              	.LVL146:
 493:Src/main.c    ****               // HAL_UART_Transmit_DMA(&huart1, (uint8_t *)gprmc_data, strlen(gprmc_data));
 1786              		.loc 1 493 15 view .LVU452
 493:Src/main.c    ****               // HAL_UART_Transmit_DMA(&huart1, (uint8_t *)gprmc_data, strlen(gprmc_data));
 1787              		.loc 1 493 65 is_stmt 0 view .LVU453
 1788 012a 194C     		ldr	r4, .L119+64
 1789 012c 2046     		mov	r0, r4
 1790 012e FFF7FEFF 		bl	strlen
 1791              	.LVL147:
 493:Src/main.c    ****               // HAL_UART_Transmit_DMA(&huart1, (uint8_t *)gprmc_data, strlen(gprmc_data));
 1792              		.loc 1 493 15 view .LVU454
 1793 0132 0623     		movs	r3, #6
 1794 0134 82B2     		uxth	r2, r0
 1795 0136 2146     		mov	r1, r4
 1796 0138 0A48     		ldr	r0, .L119+20
 1797 013a FFF7FEFF 		bl	HAL_UART_Transmit
 1798              	.LVL148:
 496:Src/main.c    ****               
 1799              		.loc 1 496 15 is_stmt 1 view .LVU455
 496:Src/main.c    ****               
 1800              		.loc 1 496 69 is_stmt 0 view .LVU456
 1801 013e 2046     		mov	r0, r4
 1802 0140 FFF7FEFF 		bl	strlen
 1803              	.LVL149:
 496:Src/main.c    ****               
 1804              		.loc 1 496 15 view .LVU457
 1805 0144 82B2     		uxth	r2, r0
 1806 0146 2146     		mov	r1, r4
 1807 0148 1248     		ldr	r0, .L119+68
 1808 014a FFF7FEFF 		bl	HAL_UART_Transmit_DMA
 1809              	.LVL150:
 1810 014e B3E7     		b	.L114
 1811              	.L120:
 1812              		.align	2
 1813              	.L119:
 1814 0150 00000000 		.word	htim3
 1815 0154 00000000 		.word	htim4
 1816 0158 00000000 		.word	.LANCHOR19
 1817 015c 00000000 		.word	htim2
 1818 0160 00000000 		.word	uart_rx_buffer
 1819 0164 00000000 		.word	huart1
 1820 0168 00000000 		.word	.LANCHOR10
 1821 016c 00000000 		.word	.LANCHOR11
 1822 0170 000C0140 		.word	1073810432
ARM GAS  /tmp/ccKrIQuL.s 			page 48


 1823 0174 00000000 		.word	.LANCHOR21
 1824 0178 00000000 		.word	.LANCHOR23
 1825 017c 00000000 		.word	.LANCHOR9
 1826 0180 00000000 		.word	.LANCHOR14
 1827 0184 00000000 		.word	.LANCHOR15
 1828 0188 00100140 		.word	1073811456
 1829 018c 00000000 		.word	.LANCHOR25
 1830 0190 00000000 		.word	gprmc_data
 1831 0194 00000000 		.word	huart3
 1832              		.cfi_endproc
 1833              	.LFE79:
 1835              		.global	for_delay
 1836              		.global	pps_offset
 1837              		.global	uart_transmit_flag
 1838              		.global	gprmc_led_count
 1839              		.global	gprmc_led_flag
 1840              		.global	pps_count
 1841              		.global	pps_flag
 1842              		.global	trigger_led_count
 1843              		.global	trigger_led_flag
 1844              		.global	enable_synchrone
 1845              		.global	send_gps_flag
 1846              		.global	trigger_flag
 1847              		.comm	uart_rx_buffer,1,1
 1848              		.comm	gprmc_data,100,4
 1849              		.global	elapsed
 1850              		.global	baseTick
 1851              		.global	baseTime
 1852              		.global	LONGITUDE
 1853              		.global	LATITUDE
 1854              		.global	BASE_SECOND
 1855              		.global	BASE_MINUTE
 1856              		.global	BASE_HOUR
 1857              		.global	BASE_DAY
 1858              		.global	BASE_MONTH
 1859              		.global	BASE_YEAR
 1860              		.section	.bss.BASE_MINUTE,"aw",%nobits
 1861              		.align	2
 1862              		.set	.LANCHOR1,. + 0
 1865              	BASE_MINUTE:
 1866 0000 00000000 		.space	4
 1867              		.section	.bss.BASE_SECOND,"aw",%nobits
 1868              		.align	2
 1869              		.set	.LANCHOR2,. + 0
 1872              	BASE_SECOND:
 1873 0000 00000000 		.space	4
 1874              		.section	.bss.baseTick,"aw",%nobits
 1875              		.align	2
 1876              		.set	.LANCHOR19,. + 0
 1879              	baseTick:
 1880 0000 00000000 		.space	4
 1881              		.section	.bss.baseTime,"aw",%nobits
 1882              		.align	2
 1883              		.set	.LANCHOR25,. + 0
 1886              	baseTime:
 1887 0000 00000000 		.space	4
 1888              		.section	.bss.buffer.7967,"aw",%nobits
ARM GAS  /tmp/ccKrIQuL.s 			page 49


 1889              		.align	2
 1890              		.set	.LANCHOR17,. + 0
 1893              	buffer.7967:
 1894 0000 00000000 		.space	1024
 1894      00000000 
 1894      00000000 
 1894      00000000 
 1894      00000000 
 1895              		.section	.bss.count_10hz.7955,"aw",%nobits
 1896              		.align	2
 1897              		.set	.LANCHOR20,. + 0
 1900              	count_10hz.7955:
 1901 0000 00000000 		.space	4
 1902              		.section	.bss.count_1hz.7956,"aw",%nobits
 1903              		.align	2
 1904              		.set	.LANCHOR22,. + 0
 1907              	count_1hz.7956:
 1908 0000 00000000 		.space	4
 1909              		.section	.bss.elapsed,"aw",%nobits
 1910              		.align	2
 1911              		.set	.LANCHOR3,. + 0
 1914              	elapsed:
 1915 0000 00000000 		.space	4
 1916              		.section	.bss.for_delay,"aw",%nobits
 1917              		.align	2
 1918              		.set	.LANCHOR24,. + 0
 1921              	for_delay:
 1922 0000 00000000 		.space	4
 1923              		.section	.bss.gprmc_led_count,"aw",%nobits
 1924              		.align	2
 1925              		.set	.LANCHOR15,. + 0
 1928              	gprmc_led_count:
 1929 0000 00000000 		.space	4
 1930              		.section	.bss.gprmc_led_flag,"aw",%nobits
 1931              		.set	.LANCHOR14,. + 0
 1934              	gprmc_led_flag:
 1935 0000 00       		.space	1
 1936              		.section	.bss.index.7968,"aw",%nobits
 1937              		.align	2
 1938              		.set	.LANCHOR16,. + 0
 1941              	index.7968:
 1942 0000 00000000 		.space	4
 1943              		.section	.bss.pps_count,"aw",%nobits
 1944              		.align	2
 1945              		.set	.LANCHOR13,. + 0
 1948              	pps_count:
 1949 0000 00000000 		.space	4
 1950              		.section	.bss.pps_flag,"aw",%nobits
 1951              		.set	.LANCHOR12,. + 0
 1954              	pps_flag:
 1955 0000 00       		.space	1
 1956              		.section	.bss.send_gps_flag,"aw",%nobits
 1957              		.set	.LANCHOR23,. + 0
 1960              	send_gps_flag:
 1961 0000 00       		.space	1
 1962              		.section	.bss.trigger_flag,"aw",%nobits
 1963              		.set	.LANCHOR21,. + 0
ARM GAS  /tmp/ccKrIQuL.s 			page 50


 1966              	trigger_flag:
 1967 0000 00       		.space	1
 1968              		.section	.bss.trigger_led_count,"aw",%nobits
 1969              		.align	2
 1970              		.set	.LANCHOR11,. + 0
 1973              	trigger_led_count:
 1974 0000 00000000 		.space	4
 1975              		.section	.bss.trigger_led_flag,"aw",%nobits
 1976              		.set	.LANCHOR10,. + 0
 1979              	trigger_led_flag:
 1980 0000 00       		.space	1
 1981              		.section	.bss.uart_transmit_flag,"aw",%nobits
 1984              	uart_transmit_flag:
 1985 0000 00       		.space	1
 1986              		.section	.data.BASE_DAY,"aw"
 1987              		.align	2
 1988              		.set	.LANCHOR6,. + 0
 1991              	BASE_DAY:
 1992 0000 0C000000 		.word	12
 1993              		.section	.data.BASE_HOUR,"aw"
 1994              		.align	2
 1995              		.set	.LANCHOR0,. + 0
 1998              	BASE_HOUR:
 1999 0000 02000000 		.word	2
 2000              		.section	.data.BASE_MONTH,"aw"
 2001              		.align	2
 2002              		.set	.LANCHOR5,. + 0
 2005              	BASE_MONTH:
 2006 0000 02000000 		.word	2
 2007              		.section	.data.BASE_YEAR,"aw"
 2008              		.align	2
 2009              		.set	.LANCHOR4,. + 0
 2012              	BASE_YEAR:
 2013 0000 D3070000 		.word	2003
 2014              		.section	.data.LATITUDE,"aw"
 2015              		.align	2
 2016              		.set	.LANCHOR8,. + 0
 2019              	LATITUDE:
 2020 0000 32323337 		.ascii	"2237.8840,N\000"
 2020      2E383834 
 2020      302C4E00 
 2021 000c 00000000 		.space	8
 2021      00000000 
 2022              		.section	.data.LONGITUDE,"aw"
 2023              		.align	2
 2024              		.set	.LANCHOR7,. + 0
 2027              	LONGITUDE:
 2028 0000 31313030 		.ascii	"11009.2400,E\000"
 2028      392E3234 
 2028      30302C45 
 2028      00
 2029 000d 00000000 		.space	7
 2029      000000
 2030              		.section	.data.enable_synchrone,"aw"
 2031              		.set	.LANCHOR9,. + 0
 2034              	enable_synchrone:
 2035 0000 01       		.byte	1
ARM GAS  /tmp/ccKrIQuL.s 			page 51


 2036              		.section	.data.pps_offset,"aw"
 2037              		.align	2
 2038              		.set	.LANCHOR18,. + 0
 2041              	pps_offset:
 2042 0000 8D010000 		.word	397
 2043              		.text
 2044              	.Letext0:
 2045              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 2046              		.file 3 "Drivers/CMSIS/Include/core_cm3.h"
 2047              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 2048              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 2049              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 2050              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 2051              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 2052              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 2053              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 2054              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 2055              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 2056              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 2057              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 2058              		.file 15 "Inc/tim.h"
 2059              		.file 16 "Inc/usart.h"
 2060              		.file 17 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 2061              		.file 18 "/usr/include/newlib/sys/_types.h"
 2062              		.file 19 "/usr/include/newlib/sys/reent.h"
 2063              		.file 20 "/usr/include/newlib/sys/lock.h"
 2064              		.file 21 "/usr/include/newlib/stdlib.h"
 2065              		.file 22 "Inc/gpio.h"
 2066              		.file 23 "Inc/dma.h"
 2067              		.file 24 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 2068              		.file 25 "/usr/include/newlib/string.h"
 2069              		.file 26 "/usr/include/newlib/stdio.h"
 2070              		.file 27 "Drivers/CMSIS/Include/cmsis_gcc.h"
 2071              		.file 28 "<built-in>"
ARM GAS  /tmp/ccKrIQuL.s 			page 52


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccKrIQuL.s:16     .text.Error_Handler_Custom:0000000000000000 $t
     /tmp/ccKrIQuL.s:24     .text.Error_Handler_Custom:0000000000000000 Error_Handler_Custom
     /tmp/ccKrIQuL.s:104    .text.Error_Handler_Custom:0000000000000044 $d
     /tmp/ccKrIQuL.s:111    .text.DWT_Init:0000000000000000 $t
     /tmp/ccKrIQuL.s:118    .text.DWT_Init:0000000000000000 DWT_Init
     /tmp/ccKrIQuL.s:154    .text.DWT_Init:0000000000000024 $d
     /tmp/ccKrIQuL.s:160    .text.DWT_Delay:0000000000000000 $t
     /tmp/ccKrIQuL.s:167    .text.DWT_Delay:0000000000000000 DWT_Delay
     /tmp/ccKrIQuL.s:207    .text.DWT_Delay:0000000000000020 $d
     /tmp/ccKrIQuL.s:214    .text.nmea_checksum:0000000000000000 $t
     /tmp/ccKrIQuL.s:221    .text.nmea_checksum:0000000000000000 nmea_checksum
     /tmp/ccKrIQuL.s:279    .rodata.GPRMC_Generator.str1.4:0000000000000000 $d
     /tmp/ccKrIQuL.s:287    .text.GPRMC_Generator:0000000000000000 $t
     /tmp/ccKrIQuL.s:294    .text.GPRMC_Generator:0000000000000000 GPRMC_Generator
     /tmp/ccKrIQuL.s:446    .text.GPRMC_Generator:00000000000000d0 $d
                            *COM*:0000000000000064 gprmc_data
     /tmp/ccKrIQuL.s:467    .text.TIM2_IRQHandler:0000000000000000 $t
     /tmp/ccKrIQuL.s:474    .text.TIM2_IRQHandler:0000000000000000 TIM2_IRQHandler
     /tmp/ccKrIQuL.s:541    .text.TIM2_IRQHandler:000000000000004c $d
     /tmp/ccKrIQuL.s:549    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccKrIQuL.s:556    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccKrIQuL.s:650    .text.HAL_TIM_PeriodElapsedCallback:0000000000000054 $d
     /tmp/ccKrIQuL.s:662    .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/ccKrIQuL.s:669    .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/ccKrIQuL.s:700    .text.HAL_UART_TxCpltCallback:0000000000000018 $d
     /tmp/ccKrIQuL.s:706    .rodata.ProcessReceivedData.str1.4:0000000000000000 $d
     /tmp/ccKrIQuL.s:723    .text.ProcessReceivedData:0000000000000000 $t
     /tmp/ccKrIQuL.s:730    .text.ProcessReceivedData:0000000000000000 ProcessReceivedData
     /tmp/ccKrIQuL.s:1024   .text.ProcessReceivedData:0000000000000140 $d
     /tmp/ccKrIQuL.s:1030   .text.ProcessReceivedData:0000000000000158 $t
     /tmp/ccKrIQuL.s:1169   .text.ProcessReceivedData:00000000000001f0 $d
     /tmp/ccKrIQuL.s:1192   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccKrIQuL.s:1199   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccKrIQuL.s:1247   .text.HAL_UART_RxCpltCallback:0000000000000024 $d
                            *COM*:0000000000000001 uart_rx_buffer
     /tmp/ccKrIQuL.s:1253   .text.Error_Handler:0000000000000000 $t
     /tmp/ccKrIQuL.s:1260   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccKrIQuL.s:1279   .text.TIM4_IRQHandler:0000000000000000 $t
     /tmp/ccKrIQuL.s:1286   .text.TIM4_IRQHandler:0000000000000000 TIM4_IRQHandler
     /tmp/ccKrIQuL.s:1410   .text.TIM4_IRQHandler:000000000000007c $d
     /tmp/ccKrIQuL.s:1423   .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccKrIQuL.s:1430   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccKrIQuL.s:1535   .text.main:0000000000000000 $t
     /tmp/ccKrIQuL.s:1542   .text.main:0000000000000000 main
     /tmp/ccKrIQuL.s:1814   .text.main:0000000000000150 $d
     /tmp/ccKrIQuL.s:1921   .bss.for_delay:0000000000000000 for_delay
     /tmp/ccKrIQuL.s:2041   .data.pps_offset:0000000000000000 pps_offset
     /tmp/ccKrIQuL.s:1984   .bss.uart_transmit_flag:0000000000000000 uart_transmit_flag
     /tmp/ccKrIQuL.s:1928   .bss.gprmc_led_count:0000000000000000 gprmc_led_count
     /tmp/ccKrIQuL.s:1934   .bss.gprmc_led_flag:0000000000000000 gprmc_led_flag
     /tmp/ccKrIQuL.s:1948   .bss.pps_count:0000000000000000 pps_count
     /tmp/ccKrIQuL.s:1954   .bss.pps_flag:0000000000000000 pps_flag
     /tmp/ccKrIQuL.s:1973   .bss.trigger_led_count:0000000000000000 trigger_led_count
     /tmp/ccKrIQuL.s:1979   .bss.trigger_led_flag:0000000000000000 trigger_led_flag
     /tmp/ccKrIQuL.s:2034   .data.enable_synchrone:0000000000000000 enable_synchrone
ARM GAS  /tmp/ccKrIQuL.s 			page 53


     /tmp/ccKrIQuL.s:1960   .bss.send_gps_flag:0000000000000000 send_gps_flag
     /tmp/ccKrIQuL.s:1966   .bss.trigger_flag:0000000000000000 trigger_flag
     /tmp/ccKrIQuL.s:1914   .bss.elapsed:0000000000000000 elapsed
     /tmp/ccKrIQuL.s:1879   .bss.baseTick:0000000000000000 baseTick
     /tmp/ccKrIQuL.s:1886   .bss.baseTime:0000000000000000 baseTime
     /tmp/ccKrIQuL.s:2027   .data.LONGITUDE:0000000000000000 LONGITUDE
     /tmp/ccKrIQuL.s:2019   .data.LATITUDE:0000000000000000 LATITUDE
     /tmp/ccKrIQuL.s:1872   .bss.BASE_SECOND:0000000000000000 BASE_SECOND
     /tmp/ccKrIQuL.s:1865   .bss.BASE_MINUTE:0000000000000000 BASE_MINUTE
     /tmp/ccKrIQuL.s:1998   .data.BASE_HOUR:0000000000000000 BASE_HOUR
     /tmp/ccKrIQuL.s:1991   .data.BASE_DAY:0000000000000000 BASE_DAY
     /tmp/ccKrIQuL.s:2005   .data.BASE_MONTH:0000000000000000 BASE_MONTH
     /tmp/ccKrIQuL.s:2012   .data.BASE_YEAR:0000000000000000 BASE_YEAR
     /tmp/ccKrIQuL.s:1861   .bss.BASE_MINUTE:0000000000000000 $d
     /tmp/ccKrIQuL.s:1868   .bss.BASE_SECOND:0000000000000000 $d
     /tmp/ccKrIQuL.s:1875   .bss.baseTick:0000000000000000 $d
     /tmp/ccKrIQuL.s:1882   .bss.baseTime:0000000000000000 $d
     /tmp/ccKrIQuL.s:1889   .bss.buffer.7967:0000000000000000 $d
     /tmp/ccKrIQuL.s:1893   .bss.buffer.7967:0000000000000000 buffer.7967
     /tmp/ccKrIQuL.s:1896   .bss.count_10hz.7955:0000000000000000 $d
     /tmp/ccKrIQuL.s:1900   .bss.count_10hz.7955:0000000000000000 count_10hz.7955
     /tmp/ccKrIQuL.s:1903   .bss.count_1hz.7956:0000000000000000 $d
     /tmp/ccKrIQuL.s:1907   .bss.count_1hz.7956:0000000000000000 count_1hz.7956
     /tmp/ccKrIQuL.s:1910   .bss.elapsed:0000000000000000 $d
     /tmp/ccKrIQuL.s:1917   .bss.for_delay:0000000000000000 $d
     /tmp/ccKrIQuL.s:1924   .bss.gprmc_led_count:0000000000000000 $d
     /tmp/ccKrIQuL.s:1935   .bss.gprmc_led_flag:0000000000000000 $d
     /tmp/ccKrIQuL.s:1937   .bss.index.7968:0000000000000000 $d
     /tmp/ccKrIQuL.s:1941   .bss.index.7968:0000000000000000 index.7968
     /tmp/ccKrIQuL.s:1944   .bss.pps_count:0000000000000000 $d
     /tmp/ccKrIQuL.s:1955   .bss.pps_flag:0000000000000000 $d
     /tmp/ccKrIQuL.s:1961   .bss.send_gps_flag:0000000000000000 $d
     /tmp/ccKrIQuL.s:1967   .bss.trigger_flag:0000000000000000 $d
     /tmp/ccKrIQuL.s:1969   .bss.trigger_led_count:0000000000000000 $d
     /tmp/ccKrIQuL.s:1980   .bss.trigger_led_flag:0000000000000000 $d
     /tmp/ccKrIQuL.s:1985   .bss.uart_transmit_flag:0000000000000000 $d
     /tmp/ccKrIQuL.s:1987   .data.BASE_DAY:0000000000000000 $d
     /tmp/ccKrIQuL.s:1994   .data.BASE_HOUR:0000000000000000 $d
     /tmp/ccKrIQuL.s:2001   .data.BASE_MONTH:0000000000000000 $d
     /tmp/ccKrIQuL.s:2008   .data.BASE_YEAR:0000000000000000 $d
     /tmp/ccKrIQuL.s:2015   .data.LATITUDE:0000000000000000 $d
     /tmp/ccKrIQuL.s:2023   .data.LONGITUDE:0000000000000000 $d
     /tmp/ccKrIQuL.s:2037   .data.pps_offset:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
SystemCoreClock
HAL_GetTick
memset
sprintf
strlen
htim2
strtol
HAL_UART_Transmit
strncmp
strtok
atoi
ARM GAS  /tmp/ccKrIQuL.s 			page 54


strncpy
strncat
huart1
HAL_UART_Receive_IT
htim4
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_TIM2_Init
MX_USART1_UART_Init
MX_USART3_UART_Init
MX_TIM3_Init
MX_TIM4_Init
HAL_TIM_Base_Start_IT
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_TogglePin
HAL_UART_Transmit_DMA
htim3
huart3
