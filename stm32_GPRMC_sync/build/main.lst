ARM GAS  /tmp/ccfERZpS.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.Error_Handler_Custom,"ax",%progbits
  16              		.align	1
  17              		.global	Error_Handler_Custom
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	Error_Handler_Custom:
  25              	.LFB68:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * Copyright (c) 2024 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Src/main.c    ****   * in the root directory of this software component.
  14:Src/main.c    ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   ******************************************************************************
  17:Src/main.c    ****   */
  18:Src/main.c    **** /* USER CODE END Header */
  19:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  20:Src/main.c    **** #include "main.h"
  21:Src/main.c    **** #include "dma.h"
  22:Src/main.c    **** #include "tim.h"
  23:Src/main.c    **** #include "usart.h"
  24:Src/main.c    **** #include "gpio.h"
  25:Src/main.c    **** 
  26:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  27:Src/main.c    **** /* USER CODE BEGIN Includes */
  28:Src/main.c    **** #include <stdio.h>
  29:Src/main.c    **** #include <string.h>
  30:Src/main.c    **** #include "core_cm3.h"
  31:Src/main.c    **** /* USER CODE END Includes */
  32:Src/main.c    **** 
ARM GAS  /tmp/ccfERZpS.s 			page 2


  33:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  34:Src/main.c    **** /* USER CODE BEGIN PTD */
  35:Src/main.c    **** 
  36:Src/main.c    **** /* USER CODE END PTD */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  39:Src/main.c    **** /* USER CODE BEGIN PD */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* USER CODE END PD */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  44:Src/main.c    **** /* USER CODE BEGIN PM */
  45:Src/main.c    **** 
  46:Src/main.c    **** /* USER CODE END PM */
  47:Src/main.c    **** 
  48:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE BEGIN PV */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* USER CODE END PV */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  55:Src/main.c    **** void SystemClock_Config(void);
  56:Src/main.c    **** /* USER CODE BEGIN PFP */
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE END PFP */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  61:Src/main.c    **** /* USER CODE BEGIN 0 */
  62:Src/main.c    **** 
  63:Src/main.c    **** 
  64:Src/main.c    **** 
  65:Src/main.c    **** // 定义基准时间 2003-02-12 02:00:00
  66:Src/main.c    **** #define BASE_YEAR 2003
  67:Src/main.c    **** #define BASE_MONTH 2
  68:Src/main.c    **** #define BASE_DAY 12
  69:Src/main.c    **** #define BASE_HOUR 2
  70:Src/main.c    **** #define BASE_MINUTE 0
  71:Src/main.c    **** #define BASE_SECOND 0
  72:Src/main.c    **** 
  73:Src/main.c    **** // 定义位置
  74:Src/main.c    **** #define LATITUDE "2237.8840,N" // 22.6314°N
  75:Src/main.c    **** #define LONGITUDE "11009.2400,E" // 110.154°E
  76:Src/main.c    **** 
  77:Src/main.c    **** // 初始时间设置
  78:Src/main.c    **** uint32_t baseTime = 0; // 秒数
  79:Src/main.c    **** 
  80:Src/main.c    **** // GPS数据模拟
  81:Src/main.c    **** char gprmc_data[100];
  82:Src/main.c    **** 
  83:Src/main.c    **** 
  84:Src/main.c    **** 
  85:Src/main.c    **** // USART句柄声明
  86:Src/main.c    **** extern UART_HandleTypeDef huart3;
  87:Src/main.c    **** extern UART_HandleTypeDef huart1;
  88:Src/main.c    **** 
  89:Src/main.c    **** // 定时器句柄声明
ARM GAS  /tmp/ccfERZpS.s 			page 3


  90:Src/main.c    **** extern TIM_HandleTypeDef htim2; // 100Hz -- /100: PPS ,  /10: Trigger
  91:Src/main.c    **** extern TIM_HandleTypeDef htim3;
  92:Src/main.c    **** 
  93:Src/main.c    **** 
  94:Src/main.c    **** // 触发发送trigger的标志
  95:Src/main.c    **** volatile uint8_t trigger_flag = 0;
  96:Src/main.c    **** // 触发发送GPS数据的标志
  97:Src/main.c    **** volatile uint8_t send_gps_flag = 0;
  98:Src/main.c    **** 
  99:Src/main.c    **** 
 100:Src/main.c    **** 
 101:Src/main.c    **** void Error_Handler_Custom(void)
 102:Src/main.c    **** {
  27              		.loc 1 102 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  37              	.L2:
 103:Src/main.c    **** 
 104:Src/main.c    ****   while (1) {
  38              		.loc 1 104 3 discriminator 1 view .LVU1
 105:Src/main.c    ****     // 闪烁错误指示 LED 
 106:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_5); 
  39              		.loc 1 106 5 discriminator 1 view .LVU2
  40 0002 2021     		movs	r1, #32
  41 0004 0548     		ldr	r0, .L4
  42 0006 FFF7FEFF 		bl	HAL_GPIO_TogglePin
  43              	.LVL0:
 107:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_2); 
  44              		.loc 1 107 5 discriminator 1 view .LVU3
  45 000a 0421     		movs	r1, #4
  46 000c 0448     		ldr	r0, .L4+4
  47 000e FFF7FEFF 		bl	HAL_GPIO_TogglePin
  48              	.LVL1:
 108:Src/main.c    ****     HAL_Delay(500);
  49              		.loc 1 108 5 discriminator 1 view .LVU4
  50 0012 4FF4FA70 		mov	r0, #500
  51 0016 FFF7FEFF 		bl	HAL_Delay
  52              	.LVL2:
 104:Src/main.c    ****     // 闪烁错误指示 LED 
  53              		.loc 1 104 9 discriminator 1 view .LVU5
  54 001a F2E7     		b	.L2
  55              	.L5:
  56              		.align	2
  57              	.L4:
  58 001c 00100140 		.word	1073811456
  59 0020 000C0140 		.word	1073810432
  60              		.cfi_endproc
  61              	.LFE68:
  63              		.section	.text.DWT_Init,"ax",%progbits
  64              		.align	1
ARM GAS  /tmp/ccfERZpS.s 			page 4


  65              		.global	DWT_Init
  66              		.syntax unified
  67              		.thumb
  68              		.thumb_func
  69              		.fpu softvfp
  71              	DWT_Init:
  72              	.LFB69:
 109:Src/main.c    ****   }
 110:Src/main.c    **** }
 111:Src/main.c    **** 
 112:Src/main.c    **** 
 113:Src/main.c    **** void DWT_Init(void) {
  73              		.loc 1 113 21 view -0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		@ link register save eliminated.
 114:Src/main.c    ****     if (!(DWT->CTRL & DWT_CTRL_CYCCNTENA_Msk)) {
  78              		.loc 1 114 5 view .LVU7
  79              		.loc 1 114 14 is_stmt 0 view .LVU8
  80 0000 084B     		ldr	r3, .L8
  81 0002 1B68     		ldr	r3, [r3]
  82              		.loc 1 114 8 view .LVU9
  83 0004 13F0010F 		tst	r3, #1
  84 0008 0BD1     		bne	.L6
 115:Src/main.c    ****         CoreDebug->DEMCR |= CoreDebug_DEMCR_TRCENA_Msk; // 启用DWT和ITM单元
  85              		.loc 1 115 9 is_stmt 1 view .LVU10
  86              		.loc 1 115 26 is_stmt 0 view .LVU11
  87 000a 074A     		ldr	r2, .L8+4
  88 000c D368     		ldr	r3, [r2, #12]
  89 000e 43F08073 		orr	r3, r3, #16777216
  90 0012 D360     		str	r3, [r2, #12]
 116:Src/main.c    ****         DWT->CYCCNT = 0; // 清零计数器
  91              		.loc 1 116 9 is_stmt 1 view .LVU12
  92              		.loc 1 116 21 is_stmt 0 view .LVU13
  93 0014 034B     		ldr	r3, .L8
  94 0016 0022     		movs	r2, #0
  95 0018 5A60     		str	r2, [r3, #4]
 117:Src/main.c    ****         DWT->CTRL |= DWT_CTRL_CYCCNTENA_Msk; // 启用CYCCNT
  96              		.loc 1 117 9 is_stmt 1 view .LVU14
  97              		.loc 1 117 19 is_stmt 0 view .LVU15
  98 001a 1A68     		ldr	r2, [r3]
  99 001c 42F00102 		orr	r2, r2, #1
 100 0020 1A60     		str	r2, [r3]
 101              	.L6:
 118:Src/main.c    ****     }
 119:Src/main.c    **** }
 102              		.loc 1 119 1 view .LVU16
 103 0022 7047     		bx	lr
 104              	.L9:
 105              		.align	2
 106              	.L8:
 107 0024 001000E0 		.word	-536866816
 108 0028 F0ED00E0 		.word	-536810000
 109              		.cfi_endproc
 110              	.LFE69:
 112              		.section	.text.DWT_Delay,"ax",%progbits
ARM GAS  /tmp/ccfERZpS.s 			page 5


 113              		.align	1
 114              		.global	DWT_Delay
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 118              		.fpu softvfp
 120              	DWT_Delay:
 121              	.LVL3:
 122              	.LFB70:
 120:Src/main.c    **** void DWT_Delay(uint32_t us) {   // 微秒级延时
 123              		.loc 1 120 29 is_stmt 1 view -0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127              		@ link register save eliminated.
 121:Src/main.c    ****     uint32_t startTick = DWT->CYCCNT;
 128              		.loc 1 121 5 view .LVU18
 129              		.loc 1 121 14 is_stmt 0 view .LVU19
 130 0000 074B     		ldr	r3, .L12
 131 0002 5A68     		ldr	r2, [r3, #4]
 132              	.LVL4:
 122:Src/main.c    ****     uint32_t delayTicks = us * (SystemCoreClock / 1000000); // 转换微秒为tick数
 133              		.loc 1 122 5 is_stmt 1 view .LVU20
 134              		.loc 1 122 49 is_stmt 0 view .LVU21
 135 0004 074B     		ldr	r3, .L12+4
 136 0006 1B68     		ldr	r3, [r3]
 137 0008 0749     		ldr	r1, .L12+8
 138 000a A1FB0313 		umull	r1, r3, r1, r3
 139 000e 9B0C     		lsrs	r3, r3, #18
 140              		.loc 1 122 14 view .LVU22
 141 0010 00FB03F0 		mul	r0, r0, r3
 142              	.LVL5:
 123:Src/main.c    **** 
 124:Src/main.c    ****     while (DWT->CYCCNT - startTick < delayTicks);
 143              		.loc 1 124 5 is_stmt 1 view .LVU23
 144              	.L11:
 145              		.loc 1 124 49 discriminator 1 view .LVU24
 146              		.loc 1 124 11 discriminator 1 view .LVU25
 147              		.loc 1 124 15 is_stmt 0 discriminator 1 view .LVU26
 148 0014 024B     		ldr	r3, .L12
 149 0016 5B68     		ldr	r3, [r3, #4]
 150              		.loc 1 124 24 discriminator 1 view .LVU27
 151 0018 9B1A     		subs	r3, r3, r2
 152              		.loc 1 124 11 discriminator 1 view .LVU28
 153 001a 8342     		cmp	r3, r0
 154 001c FAD3     		bcc	.L11
 125:Src/main.c    **** }
 155              		.loc 1 125 1 view .LVU29
 156 001e 7047     		bx	lr
 157              	.L13:
 158              		.align	2
 159              	.L12:
 160 0020 001000E0 		.word	-536866816
 161 0024 00000000 		.word	SystemCoreClock
 162 0028 83DE1B43 		.word	1125899907
 163              		.cfi_endproc
 164              	.LFE70:
ARM GAS  /tmp/ccfERZpS.s 			page 6


 166              		.section	.text.nmea_checksum,"ax",%progbits
 167              		.align	1
 168              		.global	nmea_checksum
 169              		.syntax unified
 170              		.thumb
 171              		.thumb_func
 172              		.fpu softvfp
 174              	nmea_checksum:
 175              	.LVL6:
 176              	.LFB71:
 126:Src/main.c    **** 
 127:Src/main.c    **** 
 128:Src/main.c    **** // 校验和计算函数
 129:Src/main.c    **** uint8_t nmea_checksum(const char* sentence) {
 177              		.loc 1 129 45 is_stmt 1 view -0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 0
 180              		@ frame_needed = 0, uses_anonymous_args = 0
 181              		@ link register save eliminated.
 182              		.loc 1 129 45 is_stmt 0 view .LVU31
 183 0000 0246     		mov	r2, r0
 130:Src/main.c    ****     uint8_t checksum = 0;
 184              		.loc 1 130 5 is_stmt 1 view .LVU32
 185              	.LVL7:
 131:Src/main.c    ****     if (*sentence == '$') {
 186              		.loc 1 131 5 view .LVU33
 187              		.loc 1 131 9 is_stmt 0 view .LVU34
 188 0002 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 189              		.loc 1 131 8 view .LVU35
 190 0004 242B     		cmp	r3, #36
 191 0006 07D0     		beq	.L19
 192              	.LVL8:
 193              	.L15:
 129:Src/main.c    ****     uint8_t checksum = 0;
 194              		.loc 1 129 45 view .LVU36
 195 0008 0020     		movs	r0, #0
 196              	.LVL9:
 197              	.L16:
 132:Src/main.c    ****         sentence++;  // Skip '$'
 133:Src/main.c    ****     }
 134:Src/main.c    ****     
 135:Src/main.c    ****     while (*sentence && *sentence != '*') {
 198              		.loc 1 135 11 is_stmt 1 view .LVU37
 199              		.loc 1 135 12 is_stmt 0 view .LVU38
 200 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 201              		.loc 1 135 11 view .LVU39
 202 000c 33B1     		cbz	r3, .L17
 203              		.loc 1 135 22 discriminator 1 view .LVU40
 204 000e 2A2B     		cmp	r3, #42
 205 0010 04D0     		beq	.L17
 136:Src/main.c    ****         checksum ^= *sentence++;
 206              		.loc 1 136 9 is_stmt 1 view .LVU41
 207              		.loc 1 136 30 is_stmt 0 view .LVU42
 208 0012 0132     		adds	r2, r2, #1
 209              	.LVL10:
 210              		.loc 1 136 18 view .LVU43
 211 0014 5840     		eors	r0, r0, r3
ARM GAS  /tmp/ccfERZpS.s 			page 7


 212              	.LVL11:
 213              		.loc 1 136 18 view .LVU44
 214 0016 F8E7     		b	.L16
 215              	.LVL12:
 216              	.L19:
 132:Src/main.c    ****         sentence++;  // Skip '$'
 217              		.loc 1 132 9 is_stmt 1 view .LVU45
 132:Src/main.c    ****         sentence++;  // Skip '$'
 218              		.loc 1 132 17 is_stmt 0 view .LVU46
 219 0018 0132     		adds	r2, r2, #1
 220              	.LVL13:
 132:Src/main.c    ****         sentence++;  // Skip '$'
 221              		.loc 1 132 17 view .LVU47
 222 001a F5E7     		b	.L15
 223              	.LVL14:
 224              	.L17:
 137:Src/main.c    ****     }
 138:Src/main.c    ****     return checksum;
 225              		.loc 1 138 5 is_stmt 1 view .LVU48
 139:Src/main.c    **** }
 226              		.loc 1 139 1 is_stmt 0 view .LVU49
 227 001c 7047     		bx	lr
 228              		.cfi_endproc
 229              	.LFE71:
 231              		.section	.rodata.GPRMC_Generator.str1.4,"aMS",%progbits,1
 232              		.align	2
 233              	.LC0:
 234 0000 24475052 		.ascii	"$GPRMC,%02d%02d%02d.00,A,%s,%s,0.00,0.00,%02d%02d%0"
 234      4D432C25 
 234      30326425 
 234      30326425 
 234      3032642E 
 235 0033 32642C2C 		.ascii	"2d,,,A*\000"
 235      2C412A00 
 236 003b 00       		.align	2
 237              	.LC1:
 238 003c 31313030 		.ascii	"11009.2400,E\000"
 238      392E3234 
 238      30302C45 
 238      00
 239 0049 000000   		.align	2
 240              	.LC2:
 241 004c 32323337 		.ascii	"2237.8840,N\000"
 241      2E383834 
 241      302C4E00 
 242              		.align	2
 243              	.LC3:
 244 0058 25303258 		.ascii	"%02X\015\012\000"
 244      0D0A00
 245              		.section	.text.GPRMC_Generator,"ax",%progbits
 246              		.align	1
 247              		.global	GPRMC_Generator
 248              		.syntax unified
 249              		.thumb
 250              		.thumb_func
 251              		.fpu softvfp
 253              	GPRMC_Generator:
ARM GAS  /tmp/ccfERZpS.s 			page 8


 254              	.LVL15:
 255              	.LFB72:
 140:Src/main.c    **** 
 141:Src/main.c    **** 
 142:Src/main.c    **** 
 143:Src/main.c    **** // GPRMC Generator
 144:Src/main.c    **** void GPRMC_Generator(uint32_t input_baseTime) {
 256              		.loc 1 144 47 is_stmt 1 view -0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260              		.loc 1 144 47 is_stmt 0 view .LVU51
 261 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 262              	.LCFI1:
 263              		.cfi_def_cfa_offset 20
 264              		.cfi_offset 4, -20
 265              		.cfi_offset 5, -16
 266              		.cfi_offset 6, -12
 267              		.cfi_offset 7, -8
 268              		.cfi_offset 14, -4
 269 0002 87B0     		sub	sp, sp, #28
 270              	.LCFI2:
 271              		.cfi_def_cfa_offset 48
 145:Src/main.c    ****     
 146:Src/main.c    ****     uint32_t culmulative_hms = 3600 * BASE_HOUR + 60 * BASE_MINUTE + BASE_SECOND;
 272              		.loc 1 146 5 is_stmt 1 view .LVU52
 273              	.LVL16:
 147:Src/main.c    ****     uint32_t currentTime = culmulative_hms + HAL_GetTick() / 1000;
 274              		.loc 1 147 5 view .LVU53
 275              		.loc 1 147 46 is_stmt 0 view .LVU54
 276 0004 FFF7FEFF 		bl	HAL_GetTick
 277              	.LVL17:
 278              		.loc 1 147 60 view .LVU55
 279 0008 2349     		ldr	r1, .L22
 280 000a A1FB0031 		umull	r3, r1, r1, r0
 281 000e 8909     		lsrs	r1, r1, #6
 282              		.loc 1 147 14 view .LVU56
 283 0010 01F5E151 		add	r1, r1, #7200
 284              	.LVL18:
 148:Src/main.c    ****     uint8_t hour = (currentTime / 3600) % 24;
 285              		.loc 1 148 5 is_stmt 1 view .LVU57
 286              		.loc 1 148 33 is_stmt 0 view .LVU58
 287 0014 214B     		ldr	r3, .L22+4
 288 0016 A3FB0123 		umull	r2, r3, r3, r1
 289 001a DB0A     		lsrs	r3, r3, #11
 290              		.loc 1 148 41 view .LVU59
 291 001c 204D     		ldr	r5, .L22+8
 292 001e A5FB0325 		umull	r2, r5, r5, r3
 293 0022 2D09     		lsrs	r5, r5, #4
 294 0024 05EB4505 		add	r5, r5, r5, lsl #1
 295 0028 A3EBC505 		sub	r5, r3, r5, lsl #3
 296              	.LVL19:
 149:Src/main.c    ****     uint8_t minute = (currentTime / 60) % 60;
 297              		.loc 1 149 5 is_stmt 1 view .LVU60
 298              		.loc 1 149 35 is_stmt 0 view .LVU61
 299 002c 1D4B     		ldr	r3, .L22+12
 300 002e A3FB0124 		umull	r2, r4, r3, r1
ARM GAS  /tmp/ccfERZpS.s 			page 9


 301 0032 6409     		lsrs	r4, r4, #5
 302              		.loc 1 149 41 view .LVU62
 303 0034 A3FB0423 		umull	r2, r3, r3, r4
 304 0038 5E09     		lsrs	r6, r3, #5
 305 003a C6EB0613 		rsb	r3, r6, r6, lsl #4
 306 003e A4EB8306 		sub	r6, r4, r3, lsl #2
 307              	.LVL20:
 150:Src/main.c    ****     uint8_t second = currentTime % 60;
 308              		.loc 1 150 5 is_stmt 1 view .LVU63
 309              		.loc 1 150 34 is_stmt 0 view .LVU64
 310 0042 C4EB0414 		rsb	r4, r4, r4, lsl #4
 311 0046 A1EB8404 		sub	r4, r1, r4, lsl #2
 312              	.LVL21:
 151:Src/main.c    **** 
 152:Src/main.c    ****     memset(gprmc_data, 0, sizeof(gprmc_data));
 313              		.loc 1 152 5 is_stmt 1 view .LVU65
 314 004a 174F     		ldr	r7, .L22+16
 315 004c 6422     		movs	r2, #100
 316 004e 0021     		movs	r1, #0
 317              	.LVL22:
 318              		.loc 1 152 5 is_stmt 0 view .LVU66
 319 0050 3846     		mov	r0, r7
 320              	.LVL23:
 321              		.loc 1 152 5 view .LVU67
 322 0052 FFF7FEFF 		bl	memset
 323              	.LVL24:
 153:Src/main.c    **** 
 154:Src/main.c    ****     // sprintf(gprmc_data, "$GPRMC,020008.00,A,2237.8840,N,11009.2400,E,0.00,0.00,120203,,,A*");
 155:Src/main.c    ****     sprintf(gprmc_data, "$GPRMC,%02d%02d%02d.00,A,%s,%s,0.00,0.00,%02d%02d%02d,,,A*",
 324              		.loc 1 155 5 is_stmt 1 view .LVU68
 325 0056 0323     		movs	r3, #3
 326 0058 0593     		str	r3, [sp, #20]
 327 005a 0223     		movs	r3, #2
 328 005c 0493     		str	r3, [sp, #16]
 329 005e 0C23     		movs	r3, #12
 330 0060 0393     		str	r3, [sp, #12]
 331 0062 124B     		ldr	r3, .L22+20
 332 0064 0293     		str	r3, [sp, #8]
 333 0066 124B     		ldr	r3, .L22+24
 334 0068 0193     		str	r3, [sp, #4]
 335 006a E4B2     		uxtb	r4, r4
 336              		.loc 1 155 5 is_stmt 0 view .LVU69
 337 006c 0094     		str	r4, [sp]
 338 006e F3B2     		uxtb	r3, r6
 339 0070 EAB2     		uxtb	r2, r5
 340 0072 1049     		ldr	r1, .L22+28
 341 0074 3846     		mov	r0, r7
 342 0076 FFF7FEFF 		bl	sprintf
 343              	.LVL25:
 156:Src/main.c    ****             hour, minute, second, LATITUDE, LONGITUDE, BASE_DAY, BASE_MONTH, (BASE_YEAR % 100));
 157:Src/main.c    ****     
 158:Src/main.c    **** 
 159:Src/main.c    ****     // check sum
 160:Src/main.c    ****     uint8_t checksum = nmea_checksum(gprmc_data);
 344              		.loc 1 160 5 is_stmt 1 view .LVU70
 345              		.loc 1 160 24 is_stmt 0 view .LVU71
 346 007a 3846     		mov	r0, r7
ARM GAS  /tmp/ccfERZpS.s 			page 10


 347 007c FFF7FEFF 		bl	nmea_checksum
 348              	.LVL26:
 349 0080 0446     		mov	r4, r0
 350              	.LVL27:
 161:Src/main.c    ****     
 162:Src/main.c    ****     int length = strlen(gprmc_data);
 351              		.loc 1 162 5 is_stmt 1 view .LVU72
 352              		.loc 1 162 18 is_stmt 0 view .LVU73
 353 0082 3846     		mov	r0, r7
 354 0084 FFF7FEFF 		bl	strlen
 355              	.LVL28:
 163:Src/main.c    ****     sprintf(gprmc_data + length, "%02X\r\n", checksum);
 356              		.loc 1 163 5 is_stmt 1 view .LVU74
 357 0088 2246     		mov	r2, r4
 358 008a 0B49     		ldr	r1, .L22+32
 359 008c 3844     		add	r0, r0, r7
 360              	.LVL29:
 361              		.loc 1 163 5 is_stmt 0 view .LVU75
 362 008e FFF7FEFF 		bl	sprintf
 363              	.LVL30:
 164:Src/main.c    **** 
 165:Src/main.c    **** }
 364              		.loc 1 165 1 view .LVU76
 365 0092 07B0     		add	sp, sp, #28
 366              	.LCFI3:
 367              		.cfi_def_cfa_offset 20
 368              		@ sp needed
 369 0094 F0BD     		pop	{r4, r5, r6, r7, pc}
 370              	.LVL31:
 371              	.L23:
 372              		.loc 1 165 1 view .LVU77
 373 0096 00BF     		.align	2
 374              	.L22:
 375 0098 D34D6210 		.word	274877907
 376 009c C5B3A291 		.word	-1851608123
 377 00a0 ABAAAAAA 		.word	-1431655765
 378 00a4 89888888 		.word	-2004318071
 379 00a8 00000000 		.word	gprmc_data
 380 00ac 3C000000 		.word	.LC1
 381 00b0 4C000000 		.word	.LC2
 382 00b4 00000000 		.word	.LC0
 383 00b8 58000000 		.word	.LC3
 384              		.cfi_endproc
 385              	.LFE72:
 387              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 388              		.align	1
 389              		.global	HAL_TIM_PeriodElapsedCallback
 390              		.syntax unified
 391              		.thumb
 392              		.thumb_func
 393              		.fpu softvfp
 395              	HAL_TIM_PeriodElapsedCallback:
 396              	.LVL32:
 397              	.LFB73:
 166:Src/main.c    **** 
 167:Src/main.c    **** 
 168:Src/main.c    **** 
ARM GAS  /tmp/ccfERZpS.s 			page 11


 169:Src/main.c    **** 
 170:Src/main.c    **** volatile uint8_t trigger_led_flag = 0;
 171:Src/main.c    **** int trigger_led_count = 0;
 172:Src/main.c    **** volatile uint8_t pps_flag = 0;
 173:Src/main.c    **** int pps_count = 0;
 174:Src/main.c    **** volatile uint8_t gprmc_led_flag = 0;
 175:Src/main.c    **** int gprmc_led_count = 0;
 176:Src/main.c    **** 
 177:Src/main.c    **** volatile uint8_t uart_transmit_flag = 0;
 178:Src/main.c    **** 
 179:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 180:Src/main.c    **** {
 398              		.loc 1 180 1 is_stmt 1 view -0
 399              		.cfi_startproc
 400              		@ args = 0, pretend = 0, frame = 0
 401              		@ frame_needed = 0, uses_anonymous_args = 0
 402              		.loc 1 180 1 is_stmt 0 view .LVU79
 403 0000 08B5     		push	{r3, lr}
 404              	.LCFI4:
 405              		.cfi_def_cfa_offset 8
 406              		.cfi_offset 3, -8
 407              		.cfi_offset 14, -4
 181:Src/main.c    ****     if (htim->Instance == TIM3) {
 408              		.loc 1 181 5 is_stmt 1 view .LVU80
 409              		.loc 1 181 13 is_stmt 0 view .LVU81
 410 0002 0268     		ldr	r2, [r0]
 411              		.loc 1 181 8 view .LVU82
 412 0004 134B     		ldr	r3, .L31
 413 0006 9A42     		cmp	r2, r3
 414 0008 00D0     		beq	.L29
 415              	.LVL33:
 416              	.L24:
 182:Src/main.c    ****       
 183:Src/main.c    ****         if (trigger_led_flag) {
 184:Src/main.c    **** 
 185:Src/main.c    ****             trigger_led_count ++;
 186:Src/main.c    ****             
 187:Src/main.c    ****         }
 188:Src/main.c    ****         if (pps_flag) {
 189:Src/main.c    **** 
 190:Src/main.c    ****             pps_count ++;
 191:Src/main.c    **** 
 192:Src/main.c    ****             if (pps_count >= 2)
 193:Src/main.c    ****             {
 194:Src/main.c    ****                 pps_flag = 0;
 195:Src/main.c    ****                 pps_count = 0;
 196:Src/main.c    ****                 HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_RESET); // PPS LOW
 197:Src/main.c    ****             }
 198:Src/main.c    ****             
 199:Src/main.c    ****         }
 200:Src/main.c    ****         if (gprmc_led_flag) {
 201:Src/main.c    **** 
 202:Src/main.c    ****             gprmc_led_count ++;
 203:Src/main.c    ****             
 204:Src/main.c    ****         }
 205:Src/main.c    ****     }
 206:Src/main.c    **** 
ARM GAS  /tmp/ccfERZpS.s 			page 12


 207:Src/main.c    **** }
 417              		.loc 1 207 1 view .LVU83
 418 000a 08BD     		pop	{r3, pc}
 419              	.LVL34:
 420              	.L29:
 183:Src/main.c    **** 
 421              		.loc 1 183 9 is_stmt 1 view .LVU84
 183:Src/main.c    **** 
 422              		.loc 1 183 13 is_stmt 0 view .LVU85
 423 000c 124B     		ldr	r3, .L31+4
 424 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 183:Src/main.c    **** 
 425              		.loc 1 183 12 view .LVU86
 426 0010 1BB1     		cbz	r3, .L26
 185:Src/main.c    ****             
 427              		.loc 1 185 13 is_stmt 1 view .LVU87
 185:Src/main.c    ****             
 428              		.loc 1 185 31 is_stmt 0 view .LVU88
 429 0012 124A     		ldr	r2, .L31+8
 430 0014 1368     		ldr	r3, [r2]
 431 0016 0133     		adds	r3, r3, #1
 432 0018 1360     		str	r3, [r2]
 433              	.L26:
 188:Src/main.c    **** 
 434              		.loc 1 188 9 is_stmt 1 view .LVU89
 188:Src/main.c    **** 
 435              		.loc 1 188 13 is_stmt 0 view .LVU90
 436 001a 114B     		ldr	r3, .L31+12
 437 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 188:Src/main.c    **** 
 438              		.loc 1 188 12 view .LVU91
 439 001e 2BB1     		cbz	r3, .L27
 190:Src/main.c    **** 
 440              		.loc 1 190 13 is_stmt 1 view .LVU92
 190:Src/main.c    **** 
 441              		.loc 1 190 23 is_stmt 0 view .LVU93
 442 0020 104A     		ldr	r2, .L31+16
 443 0022 1368     		ldr	r3, [r2]
 444 0024 0133     		adds	r3, r3, #1
 445 0026 1360     		str	r3, [r2]
 192:Src/main.c    ****             {
 446              		.loc 1 192 13 is_stmt 1 view .LVU94
 192:Src/main.c    ****             {
 447              		.loc 1 192 16 is_stmt 0 view .LVU95
 448 0028 012B     		cmp	r3, #1
 449 002a 08DC     		bgt	.L30
 450              	.LVL35:
 451              	.L27:
 200:Src/main.c    **** 
 452              		.loc 1 200 9 is_stmt 1 view .LVU96
 200:Src/main.c    **** 
 453              		.loc 1 200 13 is_stmt 0 view .LVU97
 454 002c 0E4B     		ldr	r3, .L31+20
 455 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 200:Src/main.c    **** 
 456              		.loc 1 200 12 view .LVU98
 457 0030 002B     		cmp	r3, #0
ARM GAS  /tmp/ccfERZpS.s 			page 13


 458 0032 EAD0     		beq	.L24
 202:Src/main.c    ****             
 459              		.loc 1 202 13 is_stmt 1 view .LVU99
 202:Src/main.c    ****             
 460              		.loc 1 202 29 is_stmt 0 view .LVU100
 461 0034 0D4A     		ldr	r2, .L31+24
 462 0036 1368     		ldr	r3, [r2]
 463 0038 0133     		adds	r3, r3, #1
 464 003a 1360     		str	r3, [r2]
 465              		.loc 1 207 1 view .LVU101
 466 003c E5E7     		b	.L24
 467              	.LVL36:
 468              	.L30:
 194:Src/main.c    ****                 pps_count = 0;
 469              		.loc 1 194 17 is_stmt 1 view .LVU102
 194:Src/main.c    ****                 pps_count = 0;
 470              		.loc 1 194 26 is_stmt 0 view .LVU103
 471 003e 0022     		movs	r2, #0
 472 0040 074B     		ldr	r3, .L31+12
 473 0042 1A70     		strb	r2, [r3]
 195:Src/main.c    ****                 HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_RESET); // PPS LOW
 474              		.loc 1 195 17 is_stmt 1 view .LVU104
 195:Src/main.c    ****                 HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_RESET); // PPS LOW
 475              		.loc 1 195 27 is_stmt 0 view .LVU105
 476 0044 074B     		ldr	r3, .L31+16
 477 0046 1A60     		str	r2, [r3]
 196:Src/main.c    ****             }
 478              		.loc 1 196 17 is_stmt 1 view .LVU106
 479 0048 0821     		movs	r1, #8
 480 004a 0948     		ldr	r0, .L31+28
 481              	.LVL37:
 196:Src/main.c    ****             }
 482              		.loc 1 196 17 is_stmt 0 view .LVU107
 483 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
 484              	.LVL38:
 485 0050 ECE7     		b	.L27
 486              	.L32:
 487 0052 00BF     		.align	2
 488              	.L31:
 489 0054 00040040 		.word	1073742848
 490 0058 00000000 		.word	.LANCHOR0
 491 005c 00000000 		.word	.LANCHOR1
 492 0060 00000000 		.word	.LANCHOR2
 493 0064 00000000 		.word	.LANCHOR3
 494 0068 00000000 		.word	.LANCHOR4
 495 006c 00000000 		.word	.LANCHOR5
 496 0070 000C0140 		.word	1073810432
 497              		.cfi_endproc
 498              	.LFE73:
 500              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 501              		.align	1
 502              		.global	HAL_UART_TxCpltCallback
 503              		.syntax unified
 504              		.thumb
 505              		.thumb_func
 506              		.fpu softvfp
 508              	HAL_UART_TxCpltCallback:
ARM GAS  /tmp/ccfERZpS.s 			page 14


 509              	.LVL39:
 510              	.LFB75:
 208:Src/main.c    **** 
 209:Src/main.c    **** uint32_t pps_offset = 397;
 210:Src/main.c    **** uint32_t for_delay = 0;
 211:Src/main.c    **** // uint32_t pps_offset = 390;
 212:Src/main.c    **** // uint32_t for_delay = 35;
 213:Src/main.c    **** // uint32_t pps_offset = 0;
 214:Src/main.c    **** // uint32_t for_delay = 0;
 215:Src/main.c    **** void TIM2_IRQHandler(void) {
 216:Src/main.c    ****     if (__HAL_TIM_GET_FLAG(&htim2, TIM_FLAG_UPDATE) != RESET) {
 217:Src/main.c    ****         __HAL_TIM_CLEAR_IT(&htim2, TIM_IT_UPDATE);
 218:Src/main.c    ****         
 219:Src/main.c    ****         static uint32_t count_10hz = 0, count_1hz = 0;
 220:Src/main.c    ****         
 221:Src/main.c    ****         if (++count_10hz >= 500) {
 222:Src/main.c    ****             count_10hz = 0;
 223:Src/main.c    ****             trigger_flag = 1;
 224:Src/main.c    ****         }
 225:Src/main.c    ****         
 226:Src/main.c    ****         if (++count_1hz >= 5000) {
 227:Src/main.c    ****             count_1hz = 0;
 228:Src/main.c    ****             send_gps_flag = 1;
 229:Src/main.c    **** 
 230:Src/main.c    ****             if(pps_flag) {
 231:Src/main.c    ****               Error_Handler();
 232:Src/main.c    ****             }
 233:Src/main.c    ****             DWT_Delay(pps_offset);
 234:Src/main.c    ****             for(int i = 0; i < for_delay; i ++);
 235:Src/main.c    ****             HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_SET); // PPS HIGH
 236:Src/main.c    ****             pps_flag = 1;  // Set flag to turn off PPS in ISR after 100 ms
 237:Src/main.c    ****         }
 238:Src/main.c    **** 
 239:Src/main.c    ****     }
 240:Src/main.c    **** }
 241:Src/main.c    **** 
 242:Src/main.c    **** void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
 243:Src/main.c    **** {
 511              		.loc 1 243 1 is_stmt 1 view -0
 512              		.cfi_startproc
 513              		@ args = 0, pretend = 0, frame = 0
 514              		@ frame_needed = 0, uses_anonymous_args = 0
 515              		@ link register save eliminated.
 244:Src/main.c    ****     if (huart->Instance == USART1 || huart->Instance == USART3)
 516              		.loc 1 244 5 view .LVU109
 517              		.loc 1 244 14 is_stmt 0 view .LVU110
 518 0000 0368     		ldr	r3, [r0]
 519              		.loc 1 244 8 view .LVU111
 520 0002 054A     		ldr	r2, .L36
 521 0004 9342     		cmp	r3, r2
 522 0006 03D0     		beq	.L34
 523              		.loc 1 244 35 discriminator 1 view .LVU112
 524 0008 A2F57042 		sub	r2, r2, #61440
 525 000c 9342     		cmp	r3, r2
 526 000e 02D1     		bne	.L33
 527              	.L34:
 245:Src/main.c    ****     {
ARM GAS  /tmp/ccfERZpS.s 			page 15


 246:Src/main.c    ****         gprmc_led_flag = 0;
 528              		.loc 1 246 9 is_stmt 1 view .LVU113
 529              		.loc 1 246 24 is_stmt 0 view .LVU114
 530 0010 024B     		ldr	r3, .L36+4
 531 0012 0022     		movs	r2, #0
 532 0014 1A70     		strb	r2, [r3]
 533              	.L33:
 247:Src/main.c    ****     }
 248:Src/main.c    **** }
 534              		.loc 1 248 1 view .LVU115
 535 0016 7047     		bx	lr
 536              	.L37:
 537              		.align	2
 538              	.L36:
 539 0018 00380140 		.word	1073821696
 540 001c 00000000 		.word	.LANCHOR4
 541              		.cfi_endproc
 542              	.LFE75:
 544              		.section	.text.Error_Handler,"ax",%progbits
 545              		.align	1
 546              		.global	Error_Handler
 547              		.syntax unified
 548              		.thumb
 549              		.thumb_func
 550              		.fpu softvfp
 552              	Error_Handler:
 553              	.LFB78:
 249:Src/main.c    **** 
 250:Src/main.c    **** 
 251:Src/main.c    **** 
 252:Src/main.c    **** /* USER CODE END 0 */
 253:Src/main.c    **** 
 254:Src/main.c    **** /**
 255:Src/main.c    ****   * @brief  The application entry point.
 256:Src/main.c    ****   * @retval int
 257:Src/main.c    ****   */
 258:Src/main.c    **** int main(void)
 259:Src/main.c    **** {
 260:Src/main.c    **** 
 261:Src/main.c    ****   /* USER CODE BEGIN 1 */
 262:Src/main.c    **** 
 263:Src/main.c    ****   /* USER CODE END 1 */
 264:Src/main.c    **** 
 265:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 266:Src/main.c    **** 
 267:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 268:Src/main.c    ****   HAL_Init();
 269:Src/main.c    **** 
 270:Src/main.c    ****   /* USER CODE BEGIN Init */
 271:Src/main.c    **** 
 272:Src/main.c    ****   /* USER CODE END Init */
 273:Src/main.c    **** 
 274:Src/main.c    ****   /* Configure the system clock */
 275:Src/main.c    ****   SystemClock_Config();
 276:Src/main.c    **** 
 277:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 278:Src/main.c    ****   DWT_Init();
ARM GAS  /tmp/ccfERZpS.s 			page 16


 279:Src/main.c    ****   /* USER CODE END SysInit */
 280:Src/main.c    **** 
 281:Src/main.c    ****   /* Initialize all configured peripherals */
 282:Src/main.c    ****   MX_GPIO_Init();
 283:Src/main.c    ****   MX_DMA_Init();
 284:Src/main.c    ****   MX_TIM2_Init();
 285:Src/main.c    ****   MX_USART1_UART_Init();
 286:Src/main.c    ****   MX_USART3_UART_Init();
 287:Src/main.c    ****   MX_TIM3_Init();
 288:Src/main.c    ****   /* USER CODE BEGIN 2 */
 289:Src/main.c    ****   
 290:Src/main.c    **** 
 291:Src/main.c    ****   if (HAL_TIM_Base_Start_IT(&htim2) != HAL_OK) {
 292:Src/main.c    ****     Error_Handler();  
 293:Src/main.c    ****   }
 294:Src/main.c    ****   HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 295:Src/main.c    ****     HAL_NVIC_EnableIRQ(TIM2_IRQn);
 296:Src/main.c    **** 
 297:Src/main.c    ****   if (HAL_TIM_Base_Start_IT(&htim3) != HAL_OK) {
 298:Src/main.c    ****     Error_Handler();
 299:Src/main.c    ****   }
 300:Src/main.c    ****   HAL_NVIC_SetPriority(TIM3_IRQn, 0, 1);
 301:Src/main.c    ****     HAL_NVIC_EnableIRQ(TIM3_IRQn);
 302:Src/main.c    **** 
 303:Src/main.c    ****   // if (HAL_TIM_Base_Start_IT(&htim5) != HAL_OK) {
 304:Src/main.c    ****   //   Error_Handler();
 305:Src/main.c    ****   // }
 306:Src/main.c    ****   // HAL_NVIC_SetPriority(TIM5_IRQn, 0, 1);
 307:Src/main.c    ****   //   HAL_NVIC_EnableIRQ(TIM5_IRQn);
 308:Src/main.c    ****   
 309:Src/main.c    ****   while (1) {
 310:Src/main.c    **** 
 311:Src/main.c    ****       if (trigger_led_flag && trigger_led_count >= 5)
 312:Src/main.c    ****       {
 313:Src/main.c    ****           trigger_led_flag = 0;
 314:Src/main.c    ****           trigger_led_count = 0;
 315:Src/main.c    ****           HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2, GPIO_PIN_SET); // Trigger LED OFF
 316:Src/main.c    ****       }
 317:Src/main.c    ****       
 318:Src/main.c    ****       if (!gprmc_led_flag && gprmc_led_count >= 5)
 319:Src/main.c    ****       {
 320:Src/main.c    ****           gprmc_led_count = 0;
 321:Src/main.c    ****           HAL_GPIO_WritePin(GPIOC, GPIO_PIN_5, GPIO_PIN_SET); // LED GPRMC Sending OFF
 322:Src/main.c    ****       }
 323:Src/main.c    ****     
 324:Src/main.c    **** 
 325:Src/main.c    ****       if (trigger_flag) {
 326:Src/main.c    **** 
 327:Src/main.c    ****           trigger_flag = 0;
 328:Src/main.c    **** 
 329:Src/main.c    ****           // 点亮PB2表示触发信号已发送
 330:Src/main.c    ****           HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2, GPIO_PIN_RESET); // Trigger LED
 331:Src/main.c    ****           trigger_led_flag = 1;
 332:Src/main.c    **** 
 333:Src/main.c    ****           HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_4); // Toggle Trigger signal
 334:Src/main.c    ****           
 335:Src/main.c    ****       }
ARM GAS  /tmp/ccfERZpS.s 			page 17


 336:Src/main.c    **** 
 337:Src/main.c    ****       if (send_gps_flag) {
 338:Src/main.c    **** 
 339:Src/main.c    **** 
 340:Src/main.c    ****           send_gps_flag = 0;
 341:Src/main.c    **** 
 342:Src/main.c    ****           HAL_GPIO_WritePin(GPIOC, GPIO_PIN_5, GPIO_PIN_RESET); // LED GPRMC Sending ON
 343:Src/main.c    ****           gprmc_led_flag = 1;
 344:Src/main.c    **** 
 345:Src/main.c    ****           GPRMC_Generator(baseTime);
 346:Src/main.c    ****           HAL_UART_Transmit(&huart1, (uint8_t *)gprmc_data, strlen(gprmc_data), 6);
 347:Src/main.c    ****           // HAL_UART_Transmit_DMA(&huart1, (uint8_t *)gprmc_data, strlen(gprmc_data));
 348:Src/main.c    ****           // HAL_UART_Transmit(&huart3, (uint8_t *)gprmc_data, strlen(gprmc_data), 70);
 349:Src/main.c    ****           HAL_UART_Transmit_DMA(&huart3, (uint8_t *)gprmc_data, strlen(gprmc_data));
 350:Src/main.c    ****           
 351:Src/main.c    ****           
 352:Src/main.c    ****           
 353:Src/main.c    ****       }
 354:Src/main.c    ****   }
 355:Src/main.c    **** 
 356:Src/main.c    ****   /* USER CODE END 2 */
 357:Src/main.c    **** 
 358:Src/main.c    ****   /* Infinite loop */
 359:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 360:Src/main.c    ****   while (1)
 361:Src/main.c    ****   {
 362:Src/main.c    ****     /* USER CODE END WHILE */
 363:Src/main.c    **** 
 364:Src/main.c    ****     /* USER CODE BEGIN 3 */
 365:Src/main.c    ****   }
 366:Src/main.c    ****   /* USER CODE END 3 */
 367:Src/main.c    **** }
 368:Src/main.c    **** 
 369:Src/main.c    **** /**
 370:Src/main.c    ****   * @brief System Clock Configuration
 371:Src/main.c    ****   * @retval None
 372:Src/main.c    ****   */
 373:Src/main.c    **** void SystemClock_Config(void)
 374:Src/main.c    **** {
 375:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 376:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 377:Src/main.c    **** 
 378:Src/main.c    ****   /** Initializes the RCC Oscillators according to the specified parameters
 379:Src/main.c    ****   * in the RCC_OscInitTypeDef structure.
 380:Src/main.c    ****   */
 381:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 382:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 383:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 384:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 385:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 386:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 387:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 388:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 389:Src/main.c    ****   {
 390:Src/main.c    ****     Error_Handler();
 391:Src/main.c    ****   }
 392:Src/main.c    **** 
ARM GAS  /tmp/ccfERZpS.s 			page 18


 393:Src/main.c    ****   /** Initializes the CPU, AHB and APB buses clocks
 394:Src/main.c    ****   */
 395:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 396:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 397:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 398:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 399:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 400:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 401:Src/main.c    **** 
 402:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 403:Src/main.c    ****   {
 404:Src/main.c    ****     Error_Handler();
 405:Src/main.c    ****   }
 406:Src/main.c    **** }
 407:Src/main.c    **** 
 408:Src/main.c    **** /* USER CODE BEGIN 4 */
 409:Src/main.c    **** 
 410:Src/main.c    **** /* USER CODE END 4 */
 411:Src/main.c    **** 
 412:Src/main.c    **** /**
 413:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 414:Src/main.c    ****   * @retval None
 415:Src/main.c    ****   */
 416:Src/main.c    **** void Error_Handler(void)
 417:Src/main.c    **** {
 554              		.loc 1 417 1 is_stmt 1 view -0
 555              		.cfi_startproc
 556              		@ Volatile: function does not return.
 557              		@ args = 0, pretend = 0, frame = 0
 558              		@ frame_needed = 0, uses_anonymous_args = 0
 559 0000 08B5     		push	{r3, lr}
 560              	.LCFI5:
 561              		.cfi_def_cfa_offset 8
 562              		.cfi_offset 3, -8
 563              		.cfi_offset 14, -4
 418:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 419:Src/main.c    ****   Error_Handler_Custom();
 564              		.loc 1 419 3 view .LVU117
 565 0002 FFF7FEFF 		bl	Error_Handler_Custom
 566              	.LVL40:
 567              		.cfi_endproc
 568              	.LFE78:
 570              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 571              		.align	1
 572              		.global	TIM2_IRQHandler
 573              		.syntax unified
 574              		.thumb
 575              		.thumb_func
 576              		.fpu softvfp
 578              	TIM2_IRQHandler:
 579              	.LFB74:
 215:Src/main.c    ****     if (__HAL_TIM_GET_FLAG(&htim2, TIM_FLAG_UPDATE) != RESET) {
 580              		.loc 1 215 28 view -0
 581              		.cfi_startproc
 582              		@ args = 0, pretend = 0, frame = 0
 583              		@ frame_needed = 0, uses_anonymous_args = 0
 584 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccfERZpS.s 			page 19


 585              	.LCFI6:
 586              		.cfi_def_cfa_offset 8
 587              		.cfi_offset 3, -8
 588              		.cfi_offset 14, -4
 216:Src/main.c    ****         __HAL_TIM_CLEAR_IT(&htim2, TIM_IT_UPDATE);
 589              		.loc 1 216 5 view .LVU119
 216:Src/main.c    ****         __HAL_TIM_CLEAR_IT(&htim2, TIM_IT_UPDATE);
 590              		.loc 1 216 9 is_stmt 0 view .LVU120
 591 0002 1E4B     		ldr	r3, .L48
 592 0004 1B68     		ldr	r3, [r3]
 593 0006 1A69     		ldr	r2, [r3, #16]
 216:Src/main.c    ****         __HAL_TIM_CLEAR_IT(&htim2, TIM_IT_UPDATE);
 594              		.loc 1 216 8 view .LVU121
 595 0008 12F0010F 		tst	r2, #1
 596 000c 35D0     		beq	.L40
 597              	.LBB2:
 217:Src/main.c    ****         
 598              		.loc 1 217 9 is_stmt 1 view .LVU122
 599 000e 6FF00102 		mvn	r2, #1
 600 0012 1A61     		str	r2, [r3, #16]
 219:Src/main.c    ****         
 601              		.loc 1 219 9 view .LVU123
 221:Src/main.c    ****             count_10hz = 0;
 602              		.loc 1 221 9 view .LVU124
 221:Src/main.c    ****             count_10hz = 0;
 603              		.loc 1 221 13 is_stmt 0 view .LVU125
 604 0014 1A4A     		ldr	r2, .L48+4
 605 0016 1368     		ldr	r3, [r2]
 606 0018 0133     		adds	r3, r3, #1
 221:Src/main.c    ****             count_10hz = 0;
 607              		.loc 1 221 12 view .LVU126
 608 001a 1360     		str	r3, [r2]
 609 001c B3F5FA7F 		cmp	r3, #500
 610 0020 05D3     		bcc	.L42
 222:Src/main.c    ****             trigger_flag = 1;
 611              		.loc 1 222 13 is_stmt 1 view .LVU127
 222:Src/main.c    ****             trigger_flag = 1;
 612              		.loc 1 222 24 is_stmt 0 view .LVU128
 613 0022 1346     		mov	r3, r2
 614 0024 0022     		movs	r2, #0
 615 0026 1A60     		str	r2, [r3]
 223:Src/main.c    ****         }
 616              		.loc 1 223 13 is_stmt 1 view .LVU129
 223:Src/main.c    ****         }
 617              		.loc 1 223 26 is_stmt 0 view .LVU130
 618 0028 164B     		ldr	r3, .L48+8
 619 002a 0122     		movs	r2, #1
 620 002c 1A70     		strb	r2, [r3]
 621              	.L42:
 226:Src/main.c    ****             count_1hz = 0;
 622              		.loc 1 226 9 is_stmt 1 view .LVU131
 226:Src/main.c    ****             count_1hz = 0;
 623              		.loc 1 226 13 is_stmt 0 view .LVU132
 624 002e 164A     		ldr	r2, .L48+12
 625 0030 1368     		ldr	r3, [r2]
 626 0032 0133     		adds	r3, r3, #1
 226:Src/main.c    ****             count_1hz = 0;
ARM GAS  /tmp/ccfERZpS.s 			page 20


 627              		.loc 1 226 12 view .LVU133
 628 0034 1360     		str	r3, [r2]
 629 0036 41F28732 		movw	r2, #4999
 630 003a 9342     		cmp	r3, r2
 631 003c 1DD9     		bls	.L40
 227:Src/main.c    ****             send_gps_flag = 1;
 632              		.loc 1 227 13 is_stmt 1 view .LVU134
 227:Src/main.c    ****             send_gps_flag = 1;
 633              		.loc 1 227 23 is_stmt 0 view .LVU135
 634 003e 124B     		ldr	r3, .L48+12
 635 0040 0022     		movs	r2, #0
 636 0042 1A60     		str	r2, [r3]
 228:Src/main.c    **** 
 637              		.loc 1 228 13 is_stmt 1 view .LVU136
 228:Src/main.c    **** 
 638              		.loc 1 228 27 is_stmt 0 view .LVU137
 639 0044 114B     		ldr	r3, .L48+16
 640 0046 0122     		movs	r2, #1
 641 0048 1A70     		strb	r2, [r3]
 230:Src/main.c    ****               Error_Handler();
 642              		.loc 1 230 13 is_stmt 1 view .LVU138
 230:Src/main.c    ****               Error_Handler();
 643              		.loc 1 230 16 is_stmt 0 view .LVU139
 644 004a 114B     		ldr	r3, .L48+20
 645 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 230:Src/main.c    ****               Error_Handler();
 646              		.loc 1 230 15 view .LVU140
 647 004e 2BB9     		cbnz	r3, .L47
 233:Src/main.c    ****             for(int i = 0; i < for_delay; i ++);
 648              		.loc 1 233 13 is_stmt 1 view .LVU141
 649 0050 104B     		ldr	r3, .L48+24
 650 0052 1868     		ldr	r0, [r3]
 651 0054 FFF7FEFF 		bl	DWT_Delay
 652              	.LVL41:
 234:Src/main.c    ****             HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_SET); // PPS HIGH
 653              		.loc 1 234 13 view .LVU142
 654              	.LBB3:
 234:Src/main.c    ****             HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_SET); // PPS HIGH
 655              		.loc 1 234 17 view .LVU143
 234:Src/main.c    ****             HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_SET); // PPS HIGH
 656              		.loc 1 234 21 is_stmt 0 view .LVU144
 657 0058 0023     		movs	r3, #0
 234:Src/main.c    ****             HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_SET); // PPS HIGH
 658              		.loc 1 234 13 view .LVU145
 659 005a 02E0     		b	.L44
 660              	.LVL42:
 661              	.L47:
 234:Src/main.c    ****             HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_SET); // PPS HIGH
 662              		.loc 1 234 13 view .LVU146
 663              	.LBE3:
 231:Src/main.c    ****             }
 664              		.loc 1 231 15 is_stmt 1 view .LVU147
 665 005c FFF7FEFF 		bl	Error_Handler
 666              	.LVL43:
 667              	.L45:
 668              	.LBB4:
 234:Src/main.c    ****             HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_SET); // PPS HIGH
ARM GAS  /tmp/ccfERZpS.s 			page 21


 669              		.loc 1 234 48 discriminator 3 view .LVU148
 234:Src/main.c    ****             HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_SET); // PPS HIGH
 670              		.loc 1 234 43 discriminator 3 view .LVU149
 234:Src/main.c    ****             HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_SET); // PPS HIGH
 671              		.loc 1 234 45 is_stmt 0 discriminator 3 view .LVU150
 672 0060 0133     		adds	r3, r3, #1
 673              	.LVL44:
 674              	.L44:
 234:Src/main.c    ****             HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_SET); // PPS HIGH
 675              		.loc 1 234 28 is_stmt 1 discriminator 1 view .LVU151
 234:Src/main.c    ****             HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_SET); // PPS HIGH
 676              		.loc 1 234 30 is_stmt 0 discriminator 1 view .LVU152
 677 0062 0D4A     		ldr	r2, .L48+28
 678 0064 1268     		ldr	r2, [r2]
 234:Src/main.c    ****             HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, GPIO_PIN_SET); // PPS HIGH
 679              		.loc 1 234 13 discriminator 1 view .LVU153
 680 0066 9342     		cmp	r3, r2
 681 0068 FAD3     		bcc	.L45
 682              	.LBE4:
 235:Src/main.c    ****             pps_flag = 1;  // Set flag to turn off PPS in ISR after 100 ms
 683              		.loc 1 235 13 is_stmt 1 view .LVU154
 684 006a 0122     		movs	r2, #1
 685 006c 0821     		movs	r1, #8
 686 006e 0B48     		ldr	r0, .L48+32
 687 0070 FFF7FEFF 		bl	HAL_GPIO_WritePin
 688              	.LVL45:
 236:Src/main.c    ****         }
 689              		.loc 1 236 13 view .LVU155
 236:Src/main.c    ****         }
 690              		.loc 1 236 22 is_stmt 0 view .LVU156
 691 0074 064B     		ldr	r3, .L48+20
 692 0076 0122     		movs	r2, #1
 693 0078 1A70     		strb	r2, [r3]
 694              	.L40:
 236:Src/main.c    ****         }
 695              		.loc 1 236 22 view .LVU157
 696              	.LBE2:
 240:Src/main.c    **** 
 697              		.loc 1 240 1 view .LVU158
 698 007a 08BD     		pop	{r3, pc}
 699              	.L49:
 700              		.align	2
 701              	.L48:
 702 007c 00000000 		.word	htim2
 703 0080 00000000 		.word	.LANCHOR6
 704 0084 00000000 		.word	.LANCHOR7
 705 0088 00000000 		.word	.LANCHOR8
 706 008c 00000000 		.word	.LANCHOR9
 707 0090 00000000 		.word	.LANCHOR2
 708 0094 00000000 		.word	.LANCHOR10
 709 0098 00000000 		.word	.LANCHOR11
 710 009c 000C0140 		.word	1073810432
 711              		.cfi_endproc
 712              	.LFE74:
 714              		.section	.text.SystemClock_Config,"ax",%progbits
 715              		.align	1
 716              		.global	SystemClock_Config
ARM GAS  /tmp/ccfERZpS.s 			page 22


 717              		.syntax unified
 718              		.thumb
 719              		.thumb_func
 720              		.fpu softvfp
 722              	SystemClock_Config:
 723              	.LFB77:
 374:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 724              		.loc 1 374 1 is_stmt 1 view -0
 725              		.cfi_startproc
 726              		@ args = 0, pretend = 0, frame = 64
 727              		@ frame_needed = 0, uses_anonymous_args = 0
 728 0000 00B5     		push	{lr}
 729              	.LCFI7:
 730              		.cfi_def_cfa_offset 4
 731              		.cfi_offset 14, -4
 732 0002 91B0     		sub	sp, sp, #68
 733              	.LCFI8:
 734              		.cfi_def_cfa_offset 72
 375:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 735              		.loc 1 375 3 view .LVU160
 375:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 736              		.loc 1 375 22 is_stmt 0 view .LVU161
 737 0004 0023     		movs	r3, #0
 738 0006 0993     		str	r3, [sp, #36]
 739 0008 0B93     		str	r3, [sp, #44]
 740 000a 0C93     		str	r3, [sp, #48]
 376:Src/main.c    **** 
 741              		.loc 1 376 3 is_stmt 1 view .LVU162
 376:Src/main.c    **** 
 742              		.loc 1 376 22 is_stmt 0 view .LVU163
 743 000c 0193     		str	r3, [sp, #4]
 744 000e 0293     		str	r3, [sp, #8]
 745 0010 0393     		str	r3, [sp, #12]
 746 0012 0493     		str	r3, [sp, #16]
 747 0014 0593     		str	r3, [sp, #20]
 381:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 748              		.loc 1 381 3 is_stmt 1 view .LVU164
 381:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 749              		.loc 1 381 36 is_stmt 0 view .LVU165
 750 0016 0121     		movs	r1, #1
 751 0018 0691     		str	r1, [sp, #24]
 382:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 752              		.loc 1 382 3 is_stmt 1 view .LVU166
 382:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 753              		.loc 1 382 30 is_stmt 0 view .LVU167
 754 001a 4FF48032 		mov	r2, #65536
 755 001e 0792     		str	r2, [sp, #28]
 383:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 756              		.loc 1 383 3 is_stmt 1 view .LVU168
 383:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 757              		.loc 1 383 36 is_stmt 0 view .LVU169
 758 0020 0893     		str	r3, [sp, #32]
 384:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 759              		.loc 1 384 3 is_stmt 1 view .LVU170
 384:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 760              		.loc 1 384 30 is_stmt 0 view .LVU171
 761 0022 0A91     		str	r1, [sp, #40]
ARM GAS  /tmp/ccfERZpS.s 			page 23


 385:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 762              		.loc 1 385 3 is_stmt 1 view .LVU172
 385:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 763              		.loc 1 385 34 is_stmt 0 view .LVU173
 764 0024 0223     		movs	r3, #2
 765 0026 0D93     		str	r3, [sp, #52]
 386:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 766              		.loc 1 386 3 is_stmt 1 view .LVU174
 386:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 767              		.loc 1 386 35 is_stmt 0 view .LVU175
 768 0028 0E92     		str	r2, [sp, #56]
 387:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 769              		.loc 1 387 3 is_stmt 1 view .LVU176
 387:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 770              		.loc 1 387 32 is_stmt 0 view .LVU177
 771 002a 4FF4E013 		mov	r3, #1835008
 772 002e 0F93     		str	r3, [sp, #60]
 388:Src/main.c    ****   {
 773              		.loc 1 388 3 is_stmt 1 view .LVU178
 388:Src/main.c    ****   {
 774              		.loc 1 388 7 is_stmt 0 view .LVU179
 775 0030 06A8     		add	r0, sp, #24
 776 0032 FFF7FEFF 		bl	HAL_RCC_OscConfig
 777              	.LVL46:
 388:Src/main.c    ****   {
 778              		.loc 1 388 6 view .LVU180
 779 0036 80B9     		cbnz	r0, .L54
 395:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 780              		.loc 1 395 3 is_stmt 1 view .LVU181
 395:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 781              		.loc 1 395 31 is_stmt 0 view .LVU182
 782 0038 0F23     		movs	r3, #15
 783 003a 0193     		str	r3, [sp, #4]
 397:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 784              		.loc 1 397 3 is_stmt 1 view .LVU183
 397:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 785              		.loc 1 397 34 is_stmt 0 view .LVU184
 786 003c 0221     		movs	r1, #2
 787 003e 0291     		str	r1, [sp, #8]
 398:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 788              		.loc 1 398 3 is_stmt 1 view .LVU185
 398:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 789              		.loc 1 398 35 is_stmt 0 view .LVU186
 790 0040 0023     		movs	r3, #0
 791 0042 0393     		str	r3, [sp, #12]
 399:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 792              		.loc 1 399 3 is_stmt 1 view .LVU187
 399:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 793              		.loc 1 399 36 is_stmt 0 view .LVU188
 794 0044 4FF48062 		mov	r2, #1024
 795 0048 0492     		str	r2, [sp, #16]
 400:Src/main.c    **** 
 796              		.loc 1 400 3 is_stmt 1 view .LVU189
 400:Src/main.c    **** 
 797              		.loc 1 400 36 is_stmt 0 view .LVU190
 798 004a 0593     		str	r3, [sp, #20]
 402:Src/main.c    ****   {
ARM GAS  /tmp/ccfERZpS.s 			page 24


 799              		.loc 1 402 3 is_stmt 1 view .LVU191
 402:Src/main.c    ****   {
 800              		.loc 1 402 7 is_stmt 0 view .LVU192
 801 004c 01A8     		add	r0, sp, #4
 802 004e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 803              	.LVL47:
 402:Src/main.c    ****   {
 804              		.loc 1 402 6 view .LVU193
 805 0052 20B9     		cbnz	r0, .L55
 406:Src/main.c    **** 
 806              		.loc 1 406 1 view .LVU194
 807 0054 11B0     		add	sp, sp, #68
 808              	.LCFI9:
 809              		.cfi_remember_state
 810              		.cfi_def_cfa_offset 4
 811              		@ sp needed
 812 0056 5DF804FB 		ldr	pc, [sp], #4
 813              	.L54:
 814              	.LCFI10:
 815              		.cfi_restore_state
 390:Src/main.c    ****   }
 816              		.loc 1 390 5 is_stmt 1 view .LVU195
 817 005a FFF7FEFF 		bl	Error_Handler
 818              	.LVL48:
 819              	.L55:
 404:Src/main.c    ****   }
 820              		.loc 1 404 5 view .LVU196
 821 005e FFF7FEFF 		bl	Error_Handler
 822              	.LVL49:
 823              		.cfi_endproc
 824              	.LFE77:
 826              		.section	.text.main,"ax",%progbits
 827              		.align	1
 828              		.global	main
 829              		.syntax unified
 830              		.thumb
 831              		.thumb_func
 832              		.fpu softvfp
 834              	main:
 835              	.LFB76:
 259:Src/main.c    **** 
 836              		.loc 1 259 1 view -0
 837              		.cfi_startproc
 838              		@ Volatile: function does not return.
 839              		@ args = 0, pretend = 0, frame = 0
 840              		@ frame_needed = 0, uses_anonymous_args = 0
 841 0000 08B5     		push	{r3, lr}
 842              	.LCFI11:
 843              		.cfi_def_cfa_offset 8
 844              		.cfi_offset 3, -8
 845              		.cfi_offset 14, -4
 268:Src/main.c    **** 
 846              		.loc 1 268 3 view .LVU198
 847 0002 FFF7FEFF 		bl	HAL_Init
 848              	.LVL50:
 275:Src/main.c    **** 
 849              		.loc 1 275 3 view .LVU199
ARM GAS  /tmp/ccfERZpS.s 			page 25


 850 0006 FFF7FEFF 		bl	SystemClock_Config
 851              	.LVL51:
 278:Src/main.c    ****   /* USER CODE END SysInit */
 852              		.loc 1 278 3 view .LVU200
 853 000a FFF7FEFF 		bl	DWT_Init
 854              	.LVL52:
 282:Src/main.c    ****   MX_DMA_Init();
 855              		.loc 1 282 3 view .LVU201
 856 000e FFF7FEFF 		bl	MX_GPIO_Init
 857              	.LVL53:
 283:Src/main.c    ****   MX_TIM2_Init();
 858              		.loc 1 283 3 view .LVU202
 859 0012 FFF7FEFF 		bl	MX_DMA_Init
 860              	.LVL54:
 284:Src/main.c    ****   MX_USART1_UART_Init();
 861              		.loc 1 284 3 view .LVU203
 862 0016 FFF7FEFF 		bl	MX_TIM2_Init
 863              	.LVL55:
 285:Src/main.c    ****   MX_USART3_UART_Init();
 864              		.loc 1 285 3 view .LVU204
 865 001a FFF7FEFF 		bl	MX_USART1_UART_Init
 866              	.LVL56:
 286:Src/main.c    ****   MX_TIM3_Init();
 867              		.loc 1 286 3 view .LVU205
 868 001e FFF7FEFF 		bl	MX_USART3_UART_Init
 869              	.LVL57:
 287:Src/main.c    ****   /* USER CODE BEGIN 2 */
 870              		.loc 1 287 3 view .LVU206
 871 0022 FFF7FEFF 		bl	MX_TIM3_Init
 872              	.LVL58:
 291:Src/main.c    ****     Error_Handler();  
 873              		.loc 1 291 3 view .LVU207
 291:Src/main.c    ****     Error_Handler();  
 874              		.loc 1 291 7 is_stmt 0 view .LVU208
 875 0026 3B48     		ldr	r0, .L69
 876 0028 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 877              	.LVL59:
 291:Src/main.c    ****     Error_Handler();  
 878              		.loc 1 291 6 view .LVU209
 879 002c 08B1     		cbz	r0, .L57
 292:Src/main.c    ****   }
 880              		.loc 1 292 5 is_stmt 1 view .LVU210
 881 002e FFF7FEFF 		bl	Error_Handler
 882              	.LVL60:
 883              	.L57:
 294:Src/main.c    ****     HAL_NVIC_EnableIRQ(TIM2_IRQn);
 884              		.loc 1 294 3 view .LVU211
 885 0032 0022     		movs	r2, #0
 886 0034 1146     		mov	r1, r2
 887 0036 1C20     		movs	r0, #28
 888 0038 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 889              	.LVL61:
 295:Src/main.c    **** 
 890              		.loc 1 295 5 view .LVU212
 891 003c 1C20     		movs	r0, #28
 892 003e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 893              	.LVL62:
ARM GAS  /tmp/ccfERZpS.s 			page 26


 297:Src/main.c    ****     Error_Handler();
 894              		.loc 1 297 3 view .LVU213
 297:Src/main.c    ****     Error_Handler();
 895              		.loc 1 297 7 is_stmt 0 view .LVU214
 896 0042 3548     		ldr	r0, .L69+4
 897 0044 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 898              	.LVL63:
 297:Src/main.c    ****     Error_Handler();
 899              		.loc 1 297 6 view .LVU215
 900 0048 08B1     		cbz	r0, .L58
 298:Src/main.c    ****   }
 901              		.loc 1 298 5 is_stmt 1 view .LVU216
 902 004a FFF7FEFF 		bl	Error_Handler
 903              	.LVL64:
 904              	.L58:
 300:Src/main.c    ****     HAL_NVIC_EnableIRQ(TIM3_IRQn);
 905              		.loc 1 300 3 view .LVU217
 906 004e 0122     		movs	r2, #1
 907 0050 0021     		movs	r1, #0
 908 0052 1D20     		movs	r0, #29
 909 0054 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 910              	.LVL65:
 301:Src/main.c    **** 
 911              		.loc 1 301 5 view .LVU218
 912 0058 1D20     		movs	r0, #29
 913 005a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 914              	.LVL66:
 915 005e 18E0     		b	.L62
 916              	.L67:
 313:Src/main.c    ****           trigger_led_count = 0;
 917              		.loc 1 313 11 view .LVU219
 313:Src/main.c    ****           trigger_led_count = 0;
 918              		.loc 1 313 28 is_stmt 0 view .LVU220
 919 0060 0023     		movs	r3, #0
 920 0062 2E4A     		ldr	r2, .L69+8
 921 0064 1370     		strb	r3, [r2]
 314:Src/main.c    ****           HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2, GPIO_PIN_SET); // Trigger LED OFF
 922              		.loc 1 314 11 is_stmt 1 view .LVU221
 314:Src/main.c    ****           HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2, GPIO_PIN_SET); // Trigger LED OFF
 923              		.loc 1 314 29 is_stmt 0 view .LVU222
 924 0066 2E4A     		ldr	r2, .L69+12
 925 0068 1360     		str	r3, [r2]
 315:Src/main.c    ****       }
 926              		.loc 1 315 11 is_stmt 1 view .LVU223
 927 006a 0122     		movs	r2, #1
 928 006c 0421     		movs	r1, #4
 929 006e 2D48     		ldr	r0, .L69+16
 930 0070 FFF7FEFF 		bl	HAL_GPIO_WritePin
 931              	.LVL67:
 932 0074 14E0     		b	.L59
 933              	.L68:
 320:Src/main.c    ****           HAL_GPIO_WritePin(GPIOC, GPIO_PIN_5, GPIO_PIN_SET); // LED GPRMC Sending OFF
 934              		.loc 1 320 11 view .LVU224
 320:Src/main.c    ****           HAL_GPIO_WritePin(GPIOC, GPIO_PIN_5, GPIO_PIN_SET); // LED GPRMC Sending OFF
 935              		.loc 1 320 27 is_stmt 0 view .LVU225
 936 0076 2C4B     		ldr	r3, .L69+20
 937 0078 0022     		movs	r2, #0
ARM GAS  /tmp/ccfERZpS.s 			page 27


 938 007a 1A60     		str	r2, [r3]
 321:Src/main.c    ****       }
 939              		.loc 1 321 11 is_stmt 1 view .LVU226
 940 007c 0122     		movs	r2, #1
 941 007e 2021     		movs	r1, #32
 942 0080 2A48     		ldr	r0, .L69+24
 943 0082 FFF7FEFF 		bl	HAL_GPIO_WritePin
 944              	.LVL68:
 945              	.L60:
 325:Src/main.c    **** 
 946              		.loc 1 325 7 view .LVU227
 325:Src/main.c    **** 
 947              		.loc 1 325 11 is_stmt 0 view .LVU228
 948 0086 2A4B     		ldr	r3, .L69+28
 949 0088 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 325:Src/main.c    **** 
 950              		.loc 1 325 10 view .LVU229
 951 008a 93B9     		cbnz	r3, .L65
 952              	.L61:
 337:Src/main.c    **** 
 953              		.loc 1 337 7 is_stmt 1 view .LVU230
 337:Src/main.c    **** 
 954              		.loc 1 337 11 is_stmt 0 view .LVU231
 955 008c 294B     		ldr	r3, .L69+32
 956 008e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 337:Src/main.c    **** 
 957              		.loc 1 337 10 view .LVU232
 958 0090 F3B9     		cbnz	r3, .L66
 959              	.L62:
 309:Src/main.c    **** 
 960              		.loc 1 309 3 is_stmt 1 view .LVU233
 311:Src/main.c    ****       {
 961              		.loc 1 311 7 view .LVU234
 311:Src/main.c    ****       {
 962              		.loc 1 311 11 is_stmt 0 view .LVU235
 963 0092 224B     		ldr	r3, .L69+8
 964 0094 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 311:Src/main.c    ****       {
 965              		.loc 1 311 10 view .LVU236
 966 0096 1BB1     		cbz	r3, .L59
 311:Src/main.c    ****       {
 967              		.loc 1 311 49 discriminator 1 view .LVU237
 968 0098 214B     		ldr	r3, .L69+12
 969 009a 1B68     		ldr	r3, [r3]
 311:Src/main.c    ****       {
 970              		.loc 1 311 28 discriminator 1 view .LVU238
 971 009c 042B     		cmp	r3, #4
 972 009e DFDC     		bgt	.L67
 973              	.L59:
 318:Src/main.c    ****       {
 974              		.loc 1 318 7 is_stmt 1 view .LVU239
 318:Src/main.c    ****       {
 975              		.loc 1 318 11 is_stmt 0 view .LVU240
 976 00a0 254B     		ldr	r3, .L69+36
 977 00a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 318:Src/main.c    ****       {
 978              		.loc 1 318 10 view .LVU241
ARM GAS  /tmp/ccfERZpS.s 			page 28


 979 00a4 002B     		cmp	r3, #0
 980 00a6 EED1     		bne	.L60
 318:Src/main.c    ****       {
 981              		.loc 1 318 46 discriminator 1 view .LVU242
 982 00a8 1F4B     		ldr	r3, .L69+20
 983 00aa 1B68     		ldr	r3, [r3]
 318:Src/main.c    ****       {
 984              		.loc 1 318 27 discriminator 1 view .LVU243
 985 00ac 042B     		cmp	r3, #4
 986 00ae EADD     		ble	.L60
 987 00b0 E1E7     		b	.L68
 988              	.L65:
 327:Src/main.c    **** 
 989              		.loc 1 327 11 is_stmt 1 view .LVU244
 327:Src/main.c    **** 
 990              		.loc 1 327 24 is_stmt 0 view .LVU245
 991 00b2 0022     		movs	r2, #0
 992 00b4 1E4B     		ldr	r3, .L69+28
 993 00b6 1A70     		strb	r2, [r3]
 330:Src/main.c    ****           trigger_led_flag = 1;
 994              		.loc 1 330 11 is_stmt 1 view .LVU246
 995 00b8 0421     		movs	r1, #4
 996 00ba 1A48     		ldr	r0, .L69+16
 997 00bc FFF7FEFF 		bl	HAL_GPIO_WritePin
 998              	.LVL69:
 331:Src/main.c    **** 
 999              		.loc 1 331 11 view .LVU247
 331:Src/main.c    **** 
 1000              		.loc 1 331 28 is_stmt 0 view .LVU248
 1001 00c0 164B     		ldr	r3, .L69+8
 1002 00c2 0122     		movs	r2, #1
 1003 00c4 1A70     		strb	r2, [r3]
 333:Src/main.c    ****           
 1004              		.loc 1 333 11 is_stmt 1 view .LVU249
 1005 00c6 1021     		movs	r1, #16
 1006 00c8 1848     		ldr	r0, .L69+24
 1007 00ca FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1008              	.LVL70:
 1009 00ce DDE7     		b	.L61
 1010              	.L66:
 340:Src/main.c    **** 
 1011              		.loc 1 340 11 view .LVU250
 340:Src/main.c    **** 
 1012              		.loc 1 340 25 is_stmt 0 view .LVU251
 1013 00d0 0022     		movs	r2, #0
 1014 00d2 184B     		ldr	r3, .L69+32
 1015 00d4 1A70     		strb	r2, [r3]
 342:Src/main.c    ****           gprmc_led_flag = 1;
 1016              		.loc 1 342 11 is_stmt 1 view .LVU252
 1017 00d6 2021     		movs	r1, #32
 1018 00d8 1448     		ldr	r0, .L69+24
 1019 00da FFF7FEFF 		bl	HAL_GPIO_WritePin
 1020              	.LVL71:
 343:Src/main.c    **** 
 1021              		.loc 1 343 11 view .LVU253
 343:Src/main.c    **** 
 1022              		.loc 1 343 26 is_stmt 0 view .LVU254
ARM GAS  /tmp/ccfERZpS.s 			page 29


 1023 00de 164B     		ldr	r3, .L69+36
 1024 00e0 0122     		movs	r2, #1
 1025 00e2 1A70     		strb	r2, [r3]
 345:Src/main.c    ****           HAL_UART_Transmit(&huart1, (uint8_t *)gprmc_data, strlen(gprmc_data), 6);
 1026              		.loc 1 345 11 is_stmt 1 view .LVU255
 1027 00e4 154B     		ldr	r3, .L69+40
 1028 00e6 1868     		ldr	r0, [r3]
 1029 00e8 FFF7FEFF 		bl	GPRMC_Generator
 1030              	.LVL72:
 346:Src/main.c    ****           // HAL_UART_Transmit_DMA(&huart1, (uint8_t *)gprmc_data, strlen(gprmc_data));
 1031              		.loc 1 346 11 view .LVU256
 346:Src/main.c    ****           // HAL_UART_Transmit_DMA(&huart1, (uint8_t *)gprmc_data, strlen(gprmc_data));
 1032              		.loc 1 346 61 is_stmt 0 view .LVU257
 1033 00ec 144C     		ldr	r4, .L69+44
 1034 00ee 2046     		mov	r0, r4
 1035 00f0 FFF7FEFF 		bl	strlen
 1036              	.LVL73:
 346:Src/main.c    ****           // HAL_UART_Transmit_DMA(&huart1, (uint8_t *)gprmc_data, strlen(gprmc_data));
 1037              		.loc 1 346 11 view .LVU258
 1038 00f4 0623     		movs	r3, #6
 1039 00f6 82B2     		uxth	r2, r0
 1040 00f8 2146     		mov	r1, r4
 1041 00fa 1248     		ldr	r0, .L69+48
 1042 00fc FFF7FEFF 		bl	HAL_UART_Transmit
 1043              	.LVL74:
 349:Src/main.c    ****           
 1044              		.loc 1 349 11 is_stmt 1 view .LVU259
 349:Src/main.c    ****           
 1045              		.loc 1 349 65 is_stmt 0 view .LVU260
 1046 0100 2046     		mov	r0, r4
 1047 0102 FFF7FEFF 		bl	strlen
 1048              	.LVL75:
 349:Src/main.c    ****           
 1049              		.loc 1 349 11 view .LVU261
 1050 0106 82B2     		uxth	r2, r0
 1051 0108 2146     		mov	r1, r4
 1052 010a 0F48     		ldr	r0, .L69+52
 1053 010c FFF7FEFF 		bl	HAL_UART_Transmit_DMA
 1054              	.LVL76:
 1055 0110 BFE7     		b	.L62
 1056              	.L70:
 1057 0112 00BF     		.align	2
 1058              	.L69:
 1059 0114 00000000 		.word	htim2
 1060 0118 00000000 		.word	htim3
 1061 011c 00000000 		.word	.LANCHOR0
 1062 0120 00000000 		.word	.LANCHOR1
 1063 0124 000C0140 		.word	1073810432
 1064 0128 00000000 		.word	.LANCHOR5
 1065 012c 00100140 		.word	1073811456
 1066 0130 00000000 		.word	.LANCHOR7
 1067 0134 00000000 		.word	.LANCHOR9
 1068 0138 00000000 		.word	.LANCHOR4
 1069 013c 00000000 		.word	.LANCHOR12
 1070 0140 00000000 		.word	gprmc_data
 1071 0144 00000000 		.word	huart1
 1072 0148 00000000 		.word	huart3
ARM GAS  /tmp/ccfERZpS.s 			page 30


 1073              		.cfi_endproc
 1074              	.LFE76:
 1076              		.global	for_delay
 1077              		.global	pps_offset
 1078              		.global	uart_transmit_flag
 1079              		.global	gprmc_led_count
 1080              		.global	gprmc_led_flag
 1081              		.global	pps_count
 1082              		.global	pps_flag
 1083              		.global	trigger_led_count
 1084              		.global	trigger_led_flag
 1085              		.global	send_gps_flag
 1086              		.global	trigger_flag
 1087              		.comm	gprmc_data,100,4
 1088              		.global	baseTime
 1089              		.section	.bss.baseTime,"aw",%nobits
 1090              		.align	2
 1091              		.set	.LANCHOR12,. + 0
 1094              	baseTime:
 1095 0000 00000000 		.space	4
 1096              		.section	.bss.count_10hz.7514,"aw",%nobits
 1097              		.align	2
 1098              		.set	.LANCHOR6,. + 0
 1101              	count_10hz.7514:
 1102 0000 00000000 		.space	4
 1103              		.section	.bss.count_1hz.7515,"aw",%nobits
 1104              		.align	2
 1105              		.set	.LANCHOR8,. + 0
 1108              	count_1hz.7515:
 1109 0000 00000000 		.space	4
 1110              		.section	.bss.for_delay,"aw",%nobits
 1111              		.align	2
 1112              		.set	.LANCHOR11,. + 0
 1115              	for_delay:
 1116 0000 00000000 		.space	4
 1117              		.section	.bss.gprmc_led_count,"aw",%nobits
 1118              		.align	2
 1119              		.set	.LANCHOR5,. + 0
 1122              	gprmc_led_count:
 1123 0000 00000000 		.space	4
 1124              		.section	.bss.gprmc_led_flag,"aw",%nobits
 1125              		.set	.LANCHOR4,. + 0
 1128              	gprmc_led_flag:
 1129 0000 00       		.space	1
 1130              		.section	.bss.pps_count,"aw",%nobits
 1131              		.align	2
 1132              		.set	.LANCHOR3,. + 0
 1135              	pps_count:
 1136 0000 00000000 		.space	4
 1137              		.section	.bss.pps_flag,"aw",%nobits
 1138              		.set	.LANCHOR2,. + 0
 1141              	pps_flag:
 1142 0000 00       		.space	1
 1143              		.section	.bss.send_gps_flag,"aw",%nobits
 1144              		.set	.LANCHOR9,. + 0
 1147              	send_gps_flag:
 1148 0000 00       		.space	1
ARM GAS  /tmp/ccfERZpS.s 			page 31


 1149              		.section	.bss.trigger_flag,"aw",%nobits
 1150              		.set	.LANCHOR7,. + 0
 1153              	trigger_flag:
 1154 0000 00       		.space	1
 1155              		.section	.bss.trigger_led_count,"aw",%nobits
 1156              		.align	2
 1157              		.set	.LANCHOR1,. + 0
 1160              	trigger_led_count:
 1161 0000 00000000 		.space	4
 1162              		.section	.bss.trigger_led_flag,"aw",%nobits
 1163              		.set	.LANCHOR0,. + 0
 1166              	trigger_led_flag:
 1167 0000 00       		.space	1
 1168              		.section	.bss.uart_transmit_flag,"aw",%nobits
 1171              	uart_transmit_flag:
 1172 0000 00       		.space	1
 1173              		.section	.data.pps_offset,"aw"
 1174              		.align	2
 1175              		.set	.LANCHOR10,. + 0
 1178              	pps_offset:
 1179 0000 8D010000 		.word	397
 1180              		.text
 1181              	.Letext0:
 1182              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1183              		.file 3 "Drivers/CMSIS/Include/core_cm3.h"
 1184              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 1185              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 1186              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 1187              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1188              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1189              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1190              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1191              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1192              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1193              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 1194              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1195              		.file 15 "Inc/tim.h"
 1196              		.file 16 "Inc/usart.h"
 1197              		.file 17 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 1198              		.file 18 "/usr/include/newlib/sys/_types.h"
 1199              		.file 19 "/usr/include/newlib/sys/reent.h"
 1200              		.file 20 "/usr/include/newlib/sys/lock.h"
 1201              		.file 21 "Inc/gpio.h"
 1202              		.file 22 "Inc/dma.h"
 1203              		.file 23 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 1204              		.file 24 "/usr/include/newlib/string.h"
 1205              		.file 25 "/usr/include/newlib/stdio.h"
 1206              		.file 26 "Drivers/CMSIS/Include/cmsis_gcc.h"
 1207              		.file 27 "<built-in>"
ARM GAS  /tmp/ccfERZpS.s 			page 32


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccfERZpS.s:16     .text.Error_Handler_Custom:0000000000000000 $t
     /tmp/ccfERZpS.s:24     .text.Error_Handler_Custom:0000000000000000 Error_Handler_Custom
     /tmp/ccfERZpS.s:58     .text.Error_Handler_Custom:000000000000001c $d
     /tmp/ccfERZpS.s:64     .text.DWT_Init:0000000000000000 $t
     /tmp/ccfERZpS.s:71     .text.DWT_Init:0000000000000000 DWT_Init
     /tmp/ccfERZpS.s:107    .text.DWT_Init:0000000000000024 $d
     /tmp/ccfERZpS.s:113    .text.DWT_Delay:0000000000000000 $t
     /tmp/ccfERZpS.s:120    .text.DWT_Delay:0000000000000000 DWT_Delay
     /tmp/ccfERZpS.s:160    .text.DWT_Delay:0000000000000020 $d
     /tmp/ccfERZpS.s:167    .text.nmea_checksum:0000000000000000 $t
     /tmp/ccfERZpS.s:174    .text.nmea_checksum:0000000000000000 nmea_checksum
     /tmp/ccfERZpS.s:232    .rodata.GPRMC_Generator.str1.4:0000000000000000 $d
     /tmp/ccfERZpS.s:246    .text.GPRMC_Generator:0000000000000000 $t
     /tmp/ccfERZpS.s:253    .text.GPRMC_Generator:0000000000000000 GPRMC_Generator
     /tmp/ccfERZpS.s:375    .text.GPRMC_Generator:0000000000000098 $d
                            *COM*:0000000000000064 gprmc_data
     /tmp/ccfERZpS.s:388    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccfERZpS.s:395    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccfERZpS.s:489    .text.HAL_TIM_PeriodElapsedCallback:0000000000000054 $d
     /tmp/ccfERZpS.s:501    .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/ccfERZpS.s:508    .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/ccfERZpS.s:539    .text.HAL_UART_TxCpltCallback:0000000000000018 $d
     /tmp/ccfERZpS.s:545    .text.Error_Handler:0000000000000000 $t
     /tmp/ccfERZpS.s:552    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccfERZpS.s:571    .text.TIM2_IRQHandler:0000000000000000 $t
     /tmp/ccfERZpS.s:578    .text.TIM2_IRQHandler:0000000000000000 TIM2_IRQHandler
     /tmp/ccfERZpS.s:702    .text.TIM2_IRQHandler:000000000000007c $d
     /tmp/ccfERZpS.s:715    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccfERZpS.s:722    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccfERZpS.s:827    .text.main:0000000000000000 $t
     /tmp/ccfERZpS.s:834    .text.main:0000000000000000 main
     /tmp/ccfERZpS.s:1059   .text.main:0000000000000114 $d
     /tmp/ccfERZpS.s:1115   .bss.for_delay:0000000000000000 for_delay
     /tmp/ccfERZpS.s:1178   .data.pps_offset:0000000000000000 pps_offset
     /tmp/ccfERZpS.s:1171   .bss.uart_transmit_flag:0000000000000000 uart_transmit_flag
     /tmp/ccfERZpS.s:1122   .bss.gprmc_led_count:0000000000000000 gprmc_led_count
     /tmp/ccfERZpS.s:1128   .bss.gprmc_led_flag:0000000000000000 gprmc_led_flag
     /tmp/ccfERZpS.s:1135   .bss.pps_count:0000000000000000 pps_count
     /tmp/ccfERZpS.s:1141   .bss.pps_flag:0000000000000000 pps_flag
     /tmp/ccfERZpS.s:1160   .bss.trigger_led_count:0000000000000000 trigger_led_count
     /tmp/ccfERZpS.s:1166   .bss.trigger_led_flag:0000000000000000 trigger_led_flag
     /tmp/ccfERZpS.s:1147   .bss.send_gps_flag:0000000000000000 send_gps_flag
     /tmp/ccfERZpS.s:1153   .bss.trigger_flag:0000000000000000 trigger_flag
     /tmp/ccfERZpS.s:1094   .bss.baseTime:0000000000000000 baseTime
     /tmp/ccfERZpS.s:1090   .bss.baseTime:0000000000000000 $d
     /tmp/ccfERZpS.s:1097   .bss.count_10hz.7514:0000000000000000 $d
     /tmp/ccfERZpS.s:1101   .bss.count_10hz.7514:0000000000000000 count_10hz.7514
     /tmp/ccfERZpS.s:1104   .bss.count_1hz.7515:0000000000000000 $d
     /tmp/ccfERZpS.s:1108   .bss.count_1hz.7515:0000000000000000 count_1hz.7515
     /tmp/ccfERZpS.s:1111   .bss.for_delay:0000000000000000 $d
     /tmp/ccfERZpS.s:1118   .bss.gprmc_led_count:0000000000000000 $d
     /tmp/ccfERZpS.s:1129   .bss.gprmc_led_flag:0000000000000000 $d
     /tmp/ccfERZpS.s:1131   .bss.pps_count:0000000000000000 $d
     /tmp/ccfERZpS.s:1142   .bss.pps_flag:0000000000000000 $d
     /tmp/ccfERZpS.s:1148   .bss.send_gps_flag:0000000000000000 $d
ARM GAS  /tmp/ccfERZpS.s 			page 33


     /tmp/ccfERZpS.s:1154   .bss.trigger_flag:0000000000000000 $d
     /tmp/ccfERZpS.s:1156   .bss.trigger_led_count:0000000000000000 $d
     /tmp/ccfERZpS.s:1167   .bss.trigger_led_flag:0000000000000000 $d
     /tmp/ccfERZpS.s:1172   .bss.uart_transmit_flag:0000000000000000 $d
     /tmp/ccfERZpS.s:1174   .data.pps_offset:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_TogglePin
HAL_Delay
SystemCoreClock
HAL_GetTick
memset
sprintf
strlen
HAL_GPIO_WritePin
htim2
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_TIM2_Init
MX_USART1_UART_Init
MX_USART3_UART_Init
MX_TIM3_Init
HAL_TIM_Base_Start_IT
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_UART_Transmit
HAL_UART_Transmit_DMA
htim3
huart1
huart3
