ARM GAS  /tmp/ccwWYJ2y.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	NMI_Handler
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	NMI_Handler:
  25              	.LFB65:
  26              		.file 1 "Src/stm32f1xx_it.c"
   1:Src/stm32f1xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f1xx_it.c **** /**
   3:Src/stm32f1xx_it.c ****   ******************************************************************************
   4:Src/stm32f1xx_it.c ****   * @file    stm32f1xx_it.c
   5:Src/stm32f1xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f1xx_it.c ****   ******************************************************************************
   7:Src/stm32f1xx_it.c ****   * @attention
   8:Src/stm32f1xx_it.c ****   *
   9:Src/stm32f1xx_it.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Src/stm32f1xx_it.c ****   * All rights reserved.
  11:Src/stm32f1xx_it.c ****   *
  12:Src/stm32f1xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Src/stm32f1xx_it.c ****   * in the root directory of this software component.
  14:Src/stm32f1xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Src/stm32f1xx_it.c ****   *
  16:Src/stm32f1xx_it.c ****   ******************************************************************************
  17:Src/stm32f1xx_it.c ****   */
  18:Src/stm32f1xx_it.c **** /* USER CODE END Header */
  19:Src/stm32f1xx_it.c **** 
  20:Src/stm32f1xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Src/stm32f1xx_it.c **** #include "main.h"
  22:Src/stm32f1xx_it.c **** #include "stm32f1xx_it.h"
  23:Src/stm32f1xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Src/stm32f1xx_it.c **** /* USER CODE BEGIN Includes */
  25:Src/stm32f1xx_it.c **** /* USER CODE END Includes */
  26:Src/stm32f1xx_it.c **** 
  27:Src/stm32f1xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Src/stm32f1xx_it.c **** /* USER CODE BEGIN TD */
  29:Src/stm32f1xx_it.c **** 
  30:Src/stm32f1xx_it.c **** /* USER CODE END TD */
  31:Src/stm32f1xx_it.c **** 
  32:Src/stm32f1xx_it.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  /tmp/ccwWYJ2y.s 			page 2


  33:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PD */
  34:Src/stm32f1xx_it.c **** 
  35:Src/stm32f1xx_it.c **** /* USER CODE END PD */
  36:Src/stm32f1xx_it.c **** 
  37:Src/stm32f1xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PM */
  39:Src/stm32f1xx_it.c **** 
  40:Src/stm32f1xx_it.c **** /* USER CODE END PM */
  41:Src/stm32f1xx_it.c **** 
  42:Src/stm32f1xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PV */
  44:Src/stm32f1xx_it.c **** 
  45:Src/stm32f1xx_it.c **** /* USER CODE END PV */
  46:Src/stm32f1xx_it.c **** 
  47:Src/stm32f1xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PFP */
  49:Src/stm32f1xx_it.c **** 
  50:Src/stm32f1xx_it.c **** /* USER CODE END PFP */
  51:Src/stm32f1xx_it.c **** 
  52:Src/stm32f1xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Src/stm32f1xx_it.c **** /* USER CODE BEGIN 0 */
  54:Src/stm32f1xx_it.c **** 
  55:Src/stm32f1xx_it.c **** /* USER CODE END 0 */
  56:Src/stm32f1xx_it.c **** 
  57:Src/stm32f1xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Src/stm32f1xx_it.c **** extern TIM_HandleTypeDef htim3;
  59:Src/stm32f1xx_it.c **** extern TIM_HandleTypeDef htim5;
  60:Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_tx;
  61:Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_usart3_tx;
  62:Src/stm32f1xx_it.c **** extern UART_HandleTypeDef huart1;
  63:Src/stm32f1xx_it.c **** extern UART_HandleTypeDef huart3;
  64:Src/stm32f1xx_it.c **** /* USER CODE BEGIN EV */
  65:Src/stm32f1xx_it.c **** 
  66:Src/stm32f1xx_it.c **** /* USER CODE END EV */
  67:Src/stm32f1xx_it.c **** 
  68:Src/stm32f1xx_it.c **** /******************************************************************************/
  69:Src/stm32f1xx_it.c **** /*           Cortex-M3 Processor Interruption and Exception Handlers          */
  70:Src/stm32f1xx_it.c **** /******************************************************************************/
  71:Src/stm32f1xx_it.c **** /**
  72:Src/stm32f1xx_it.c ****   * @brief This function handles Non maskable interrupt.
  73:Src/stm32f1xx_it.c ****   */
  74:Src/stm32f1xx_it.c **** void NMI_Handler(void)
  75:Src/stm32f1xx_it.c **** {
  27              		.loc 1 75 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.L2:
  76:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  77:Src/stm32f1xx_it.c **** 
  78:Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  79:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  80:Src/stm32f1xx_it.c ****    while (1)
  34              		.loc 1 80 4 discriminator 1 view .LVU1
  81:Src/stm32f1xx_it.c ****   {
ARM GAS  /tmp/ccwWYJ2y.s 			page 3


  82:Src/stm32f1xx_it.c ****   }
  35              		.loc 1 82 3 discriminator 1 view .LVU2
  80:Src/stm32f1xx_it.c ****   {
  36              		.loc 1 80 10 discriminator 1 view .LVU3
  37 0000 FEE7     		b	.L2
  38              		.cfi_endproc
  39              	.LFE65:
  41              		.section	.text.HardFault_Handler,"ax",%progbits
  42              		.align	1
  43              		.global	HardFault_Handler
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  47              		.fpu softvfp
  49              	HardFault_Handler:
  50              	.LFB66:
  83:Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  84:Src/stm32f1xx_it.c **** }
  85:Src/stm32f1xx_it.c **** 
  86:Src/stm32f1xx_it.c **** /**
  87:Src/stm32f1xx_it.c ****   * @brief This function handles Hard fault interrupt.
  88:Src/stm32f1xx_it.c ****   */
  89:Src/stm32f1xx_it.c **** void HardFault_Handler(void)
  90:Src/stm32f1xx_it.c **** {
  51              		.loc 1 90 1 view -0
  52              		.cfi_startproc
  53              		@ Volatile: function does not return.
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		@ link register save eliminated.
  57              	.L4:
  91:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  92:Src/stm32f1xx_it.c **** 
  93:Src/stm32f1xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  94:Src/stm32f1xx_it.c ****   while (1)
  58              		.loc 1 94 3 discriminator 1 view .LVU5
  95:Src/stm32f1xx_it.c ****   {
  96:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  97:Src/stm32f1xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  98:Src/stm32f1xx_it.c ****   }
  59              		.loc 1 98 3 discriminator 1 view .LVU6
  94:Src/stm32f1xx_it.c ****   {
  60              		.loc 1 94 9 discriminator 1 view .LVU7
  61 0000 FEE7     		b	.L4
  62              		.cfi_endproc
  63              	.LFE66:
  65              		.section	.text.MemManage_Handler,"ax",%progbits
  66              		.align	1
  67              		.global	MemManage_Handler
  68              		.syntax unified
  69              		.thumb
  70              		.thumb_func
  71              		.fpu softvfp
  73              	MemManage_Handler:
  74              	.LFB67:
  99:Src/stm32f1xx_it.c **** }
 100:Src/stm32f1xx_it.c **** 
ARM GAS  /tmp/ccwWYJ2y.s 			page 4


 101:Src/stm32f1xx_it.c **** /**
 102:Src/stm32f1xx_it.c ****   * @brief This function handles Memory management fault.
 103:Src/stm32f1xx_it.c ****   */
 104:Src/stm32f1xx_it.c **** void MemManage_Handler(void)
 105:Src/stm32f1xx_it.c **** {
  75              		.loc 1 105 1 view -0
  76              		.cfi_startproc
  77              		@ Volatile: function does not return.
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		@ link register save eliminated.
  81              	.L6:
 106:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 107:Src/stm32f1xx_it.c **** 
 108:Src/stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 109:Src/stm32f1xx_it.c ****   while (1)
  82              		.loc 1 109 3 discriminator 1 view .LVU9
 110:Src/stm32f1xx_it.c ****   {
 111:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 112:Src/stm32f1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 113:Src/stm32f1xx_it.c ****   }
  83              		.loc 1 113 3 discriminator 1 view .LVU10
 109:Src/stm32f1xx_it.c ****   {
  84              		.loc 1 109 9 discriminator 1 view .LVU11
  85 0000 FEE7     		b	.L6
  86              		.cfi_endproc
  87              	.LFE67:
  89              		.section	.text.BusFault_Handler,"ax",%progbits
  90              		.align	1
  91              		.global	BusFault_Handler
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  95              		.fpu softvfp
  97              	BusFault_Handler:
  98              	.LFB68:
 114:Src/stm32f1xx_it.c **** }
 115:Src/stm32f1xx_it.c **** 
 116:Src/stm32f1xx_it.c **** /**
 117:Src/stm32f1xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 118:Src/stm32f1xx_it.c ****   */
 119:Src/stm32f1xx_it.c **** void BusFault_Handler(void)
 120:Src/stm32f1xx_it.c **** {
  99              		.loc 1 120 1 view -0
 100              		.cfi_startproc
 101              		@ Volatile: function does not return.
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 0, uses_anonymous_args = 0
 104              		@ link register save eliminated.
 105              	.L8:
 121:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 122:Src/stm32f1xx_it.c **** 
 123:Src/stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 124:Src/stm32f1xx_it.c ****   while (1)
 106              		.loc 1 124 3 discriminator 1 view .LVU13
 125:Src/stm32f1xx_it.c ****   {
 126:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
ARM GAS  /tmp/ccwWYJ2y.s 			page 5


 127:Src/stm32f1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 128:Src/stm32f1xx_it.c ****   }
 107              		.loc 1 128 3 discriminator 1 view .LVU14
 124:Src/stm32f1xx_it.c ****   {
 108              		.loc 1 124 9 discriminator 1 view .LVU15
 109 0000 FEE7     		b	.L8
 110              		.cfi_endproc
 111              	.LFE68:
 113              		.section	.text.UsageFault_Handler,"ax",%progbits
 114              		.align	1
 115              		.global	UsageFault_Handler
 116              		.syntax unified
 117              		.thumb
 118              		.thumb_func
 119              		.fpu softvfp
 121              	UsageFault_Handler:
 122              	.LFB69:
 129:Src/stm32f1xx_it.c **** }
 130:Src/stm32f1xx_it.c **** 
 131:Src/stm32f1xx_it.c **** /**
 132:Src/stm32f1xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 133:Src/stm32f1xx_it.c ****   */
 134:Src/stm32f1xx_it.c **** void UsageFault_Handler(void)
 135:Src/stm32f1xx_it.c **** {
 123              		.loc 1 135 1 view -0
 124              		.cfi_startproc
 125              		@ Volatile: function does not return.
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              		@ link register save eliminated.
 129              	.L10:
 136:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 137:Src/stm32f1xx_it.c **** 
 138:Src/stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 139:Src/stm32f1xx_it.c ****   while (1)
 130              		.loc 1 139 3 discriminator 1 view .LVU17
 140:Src/stm32f1xx_it.c ****   {
 141:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 142:Src/stm32f1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 143:Src/stm32f1xx_it.c ****   }
 131              		.loc 1 143 3 discriminator 1 view .LVU18
 139:Src/stm32f1xx_it.c ****   {
 132              		.loc 1 139 9 discriminator 1 view .LVU19
 133 0000 FEE7     		b	.L10
 134              		.cfi_endproc
 135              	.LFE69:
 137              		.section	.text.SVC_Handler,"ax",%progbits
 138              		.align	1
 139              		.global	SVC_Handler
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 143              		.fpu softvfp
 145              	SVC_Handler:
 146              	.LFB70:
 144:Src/stm32f1xx_it.c **** }
 145:Src/stm32f1xx_it.c **** 
ARM GAS  /tmp/ccwWYJ2y.s 			page 6


 146:Src/stm32f1xx_it.c **** /**
 147:Src/stm32f1xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 148:Src/stm32f1xx_it.c ****   */
 149:Src/stm32f1xx_it.c **** void SVC_Handler(void)
 150:Src/stm32f1xx_it.c **** {
 147              		.loc 1 150 1 view -0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151              		@ link register save eliminated.
 151:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 152:Src/stm32f1xx_it.c **** 
 153:Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 154:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 155:Src/stm32f1xx_it.c **** 
 156:Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 157:Src/stm32f1xx_it.c **** }
 152              		.loc 1 157 1 view .LVU21
 153 0000 7047     		bx	lr
 154              		.cfi_endproc
 155              	.LFE70:
 157              		.section	.text.DebugMon_Handler,"ax",%progbits
 158              		.align	1
 159              		.global	DebugMon_Handler
 160              		.syntax unified
 161              		.thumb
 162              		.thumb_func
 163              		.fpu softvfp
 165              	DebugMon_Handler:
 166              	.LFB71:
 158:Src/stm32f1xx_it.c **** 
 159:Src/stm32f1xx_it.c **** /**
 160:Src/stm32f1xx_it.c ****   * @brief This function handles Debug monitor.
 161:Src/stm32f1xx_it.c ****   */
 162:Src/stm32f1xx_it.c **** void DebugMon_Handler(void)
 163:Src/stm32f1xx_it.c **** {
 167              		.loc 1 163 1 view -0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 164:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 165:Src/stm32f1xx_it.c **** 
 166:Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 167:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 168:Src/stm32f1xx_it.c **** 
 169:Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 170:Src/stm32f1xx_it.c **** }
 172              		.loc 1 170 1 view .LVU23
 173 0000 7047     		bx	lr
 174              		.cfi_endproc
 175              	.LFE71:
 177              		.section	.text.PendSV_Handler,"ax",%progbits
 178              		.align	1
 179              		.global	PendSV_Handler
 180              		.syntax unified
 181              		.thumb
ARM GAS  /tmp/ccwWYJ2y.s 			page 7


 182              		.thumb_func
 183              		.fpu softvfp
 185              	PendSV_Handler:
 186              	.LFB72:
 171:Src/stm32f1xx_it.c **** 
 172:Src/stm32f1xx_it.c **** /**
 173:Src/stm32f1xx_it.c ****   * @brief This function handles Pendable request for system service.
 174:Src/stm32f1xx_it.c ****   */
 175:Src/stm32f1xx_it.c **** void PendSV_Handler(void)
 176:Src/stm32f1xx_it.c **** {
 187              		.loc 1 176 1 view -0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 0, uses_anonymous_args = 0
 191              		@ link register save eliminated.
 177:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 178:Src/stm32f1xx_it.c **** 
 179:Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 180:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 181:Src/stm32f1xx_it.c **** 
 182:Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 183:Src/stm32f1xx_it.c **** }
 192              		.loc 1 183 1 view .LVU25
 193 0000 7047     		bx	lr
 194              		.cfi_endproc
 195              	.LFE72:
 197              		.section	.text.SysTick_Handler,"ax",%progbits
 198              		.align	1
 199              		.global	SysTick_Handler
 200              		.syntax unified
 201              		.thumb
 202              		.thumb_func
 203              		.fpu softvfp
 205              	SysTick_Handler:
 206              	.LFB73:
 184:Src/stm32f1xx_it.c **** 
 185:Src/stm32f1xx_it.c **** /**
 186:Src/stm32f1xx_it.c ****   * @brief This function handles System tick timer.
 187:Src/stm32f1xx_it.c ****   */
 188:Src/stm32f1xx_it.c **** void SysTick_Handler(void)
 189:Src/stm32f1xx_it.c **** {
 207              		.loc 1 189 1 view -0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211 0000 08B5     		push	{r3, lr}
 212              	.LCFI0:
 213              		.cfi_def_cfa_offset 8
 214              		.cfi_offset 3, -8
 215              		.cfi_offset 14, -4
 190:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 191:Src/stm32f1xx_it.c **** 
 192:Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 193:Src/stm32f1xx_it.c ****   HAL_IncTick();
 216              		.loc 1 193 3 view .LVU27
 217 0002 FFF7FEFF 		bl	HAL_IncTick
 218              	.LVL0:
ARM GAS  /tmp/ccwWYJ2y.s 			page 8


 194:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 195:Src/stm32f1xx_it.c **** 
 196:Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 197:Src/stm32f1xx_it.c **** }
 219              		.loc 1 197 1 is_stmt 0 view .LVU28
 220 0006 08BD     		pop	{r3, pc}
 221              		.cfi_endproc
 222              	.LFE73:
 224              		.section	.text.DMA1_Channel2_IRQHandler,"ax",%progbits
 225              		.align	1
 226              		.global	DMA1_Channel2_IRQHandler
 227              		.syntax unified
 228              		.thumb
 229              		.thumb_func
 230              		.fpu softvfp
 232              	DMA1_Channel2_IRQHandler:
 233              	.LFB74:
 198:Src/stm32f1xx_it.c **** 
 199:Src/stm32f1xx_it.c **** /******************************************************************************/
 200:Src/stm32f1xx_it.c **** /* STM32F1xx Peripheral Interrupt Handlers                                    */
 201:Src/stm32f1xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 202:Src/stm32f1xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 203:Src/stm32f1xx_it.c **** /* please refer to the startup file (startup_stm32f1xx.s).                    */
 204:Src/stm32f1xx_it.c **** /******************************************************************************/
 205:Src/stm32f1xx_it.c **** 
 206:Src/stm32f1xx_it.c **** /**
 207:Src/stm32f1xx_it.c ****   * @brief This function handles DMA1 channel2 global interrupt.
 208:Src/stm32f1xx_it.c ****   */
 209:Src/stm32f1xx_it.c **** void DMA1_Channel2_IRQHandler(void)
 210:Src/stm32f1xx_it.c **** {
 234              		.loc 1 210 1 is_stmt 1 view -0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238 0000 08B5     		push	{r3, lr}
 239              	.LCFI1:
 240              		.cfi_def_cfa_offset 8
 241              		.cfi_offset 3, -8
 242              		.cfi_offset 14, -4
 211:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel2_IRQn 0 */
 212:Src/stm32f1xx_it.c **** 
 213:Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel2_IRQn 0 */
 214:Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart3_tx);
 243              		.loc 1 214 3 view .LVU30
 244 0002 0248     		ldr	r0, .L18
 245 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 246              	.LVL1:
 215:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel2_IRQn 1 */
 216:Src/stm32f1xx_it.c **** 
 217:Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel2_IRQn 1 */
 218:Src/stm32f1xx_it.c **** }
 247              		.loc 1 218 1 is_stmt 0 view .LVU31
 248 0008 08BD     		pop	{r3, pc}
 249              	.L19:
 250 000a 00BF     		.align	2
 251              	.L18:
 252 000c 00000000 		.word	hdma_usart3_tx
ARM GAS  /tmp/ccwWYJ2y.s 			page 9


 253              		.cfi_endproc
 254              	.LFE74:
 256              		.section	.text.DMA1_Channel4_IRQHandler,"ax",%progbits
 257              		.align	1
 258              		.global	DMA1_Channel4_IRQHandler
 259              		.syntax unified
 260              		.thumb
 261              		.thumb_func
 262              		.fpu softvfp
 264              	DMA1_Channel4_IRQHandler:
 265              	.LFB75:
 219:Src/stm32f1xx_it.c **** 
 220:Src/stm32f1xx_it.c **** /**
 221:Src/stm32f1xx_it.c ****   * @brief This function handles DMA1 channel4 global interrupt.
 222:Src/stm32f1xx_it.c ****   */
 223:Src/stm32f1xx_it.c **** void DMA1_Channel4_IRQHandler(void)
 224:Src/stm32f1xx_it.c **** {
 266              		.loc 1 224 1 is_stmt 1 view -0
 267              		.cfi_startproc
 268              		@ args = 0, pretend = 0, frame = 0
 269              		@ frame_needed = 0, uses_anonymous_args = 0
 270 0000 08B5     		push	{r3, lr}
 271              	.LCFI2:
 272              		.cfi_def_cfa_offset 8
 273              		.cfi_offset 3, -8
 274              		.cfi_offset 14, -4
 225:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel4_IRQn 0 */
 226:Src/stm32f1xx_it.c **** 
 227:Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel4_IRQn 0 */
 228:Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_tx);
 275              		.loc 1 228 3 view .LVU33
 276 0002 0248     		ldr	r0, .L22
 277 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 278              	.LVL2:
 229:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel4_IRQn 1 */
 230:Src/stm32f1xx_it.c **** 
 231:Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel4_IRQn 1 */
 232:Src/stm32f1xx_it.c **** }
 279              		.loc 1 232 1 is_stmt 0 view .LVU34
 280 0008 08BD     		pop	{r3, pc}
 281              	.L23:
 282 000a 00BF     		.align	2
 283              	.L22:
 284 000c 00000000 		.word	hdma_usart1_tx
 285              		.cfi_endproc
 286              	.LFE75:
 288              		.section	.text.TIM3_IRQHandler,"ax",%progbits
 289              		.align	1
 290              		.global	TIM3_IRQHandler
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 294              		.fpu softvfp
 296              	TIM3_IRQHandler:
 297              	.LFB76:
 233:Src/stm32f1xx_it.c **** 
 234:Src/stm32f1xx_it.c **** /**
ARM GAS  /tmp/ccwWYJ2y.s 			page 10


 235:Src/stm32f1xx_it.c ****   * @brief This function handles TIM3 global interrupt.
 236:Src/stm32f1xx_it.c ****   */
 237:Src/stm32f1xx_it.c **** void TIM3_IRQHandler(void)
 238:Src/stm32f1xx_it.c **** {
 298              		.loc 1 238 1 is_stmt 1 view -0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302 0000 08B5     		push	{r3, lr}
 303              	.LCFI3:
 304              		.cfi_def_cfa_offset 8
 305              		.cfi_offset 3, -8
 306              		.cfi_offset 14, -4
 239:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 0 */
 240:Src/stm32f1xx_it.c **** 
 241:Src/stm32f1xx_it.c ****   /* USER CODE END TIM3_IRQn 0 */
 242:Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim3);
 307              		.loc 1 242 3 view .LVU36
 308 0002 0248     		ldr	r0, .L26
 309 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 310              	.LVL3:
 243:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 1 */
 244:Src/stm32f1xx_it.c **** 
 245:Src/stm32f1xx_it.c ****   /* USER CODE END TIM3_IRQn 1 */
 246:Src/stm32f1xx_it.c **** }
 311              		.loc 1 246 1 is_stmt 0 view .LVU37
 312 0008 08BD     		pop	{r3, pc}
 313              	.L27:
 314 000a 00BF     		.align	2
 315              	.L26:
 316 000c 00000000 		.word	htim3
 317              		.cfi_endproc
 318              	.LFE76:
 320              		.section	.text.USART1_IRQHandler,"ax",%progbits
 321              		.align	1
 322              		.global	USART1_IRQHandler
 323              		.syntax unified
 324              		.thumb
 325              		.thumb_func
 326              		.fpu softvfp
 328              	USART1_IRQHandler:
 329              	.LFB77:
 247:Src/stm32f1xx_it.c **** 
 248:Src/stm32f1xx_it.c **** /**
 249:Src/stm32f1xx_it.c ****   * @brief This function handles USART1 global interrupt.
 250:Src/stm32f1xx_it.c ****   */
 251:Src/stm32f1xx_it.c **** void USART1_IRQHandler(void)
 252:Src/stm32f1xx_it.c **** {
 330              		.loc 1 252 1 is_stmt 1 view -0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 0, uses_anonymous_args = 0
 334 0000 08B5     		push	{r3, lr}
 335              	.LCFI4:
 336              		.cfi_def_cfa_offset 8
 337              		.cfi_offset 3, -8
 338              		.cfi_offset 14, -4
ARM GAS  /tmp/ccwWYJ2y.s 			page 11


 253:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 254:Src/stm32f1xx_it.c **** 
 255:Src/stm32f1xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 256:Src/stm32f1xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 339              		.loc 1 256 3 view .LVU39
 340 0002 0248     		ldr	r0, .L30
 341 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 342              	.LVL4:
 257:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 258:Src/stm32f1xx_it.c **** 
 259:Src/stm32f1xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 260:Src/stm32f1xx_it.c **** }
 343              		.loc 1 260 1 is_stmt 0 view .LVU40
 344 0008 08BD     		pop	{r3, pc}
 345              	.L31:
 346 000a 00BF     		.align	2
 347              	.L30:
 348 000c 00000000 		.word	huart1
 349              		.cfi_endproc
 350              	.LFE77:
 352              		.section	.text.USART3_IRQHandler,"ax",%progbits
 353              		.align	1
 354              		.global	USART3_IRQHandler
 355              		.syntax unified
 356              		.thumb
 357              		.thumb_func
 358              		.fpu softvfp
 360              	USART3_IRQHandler:
 361              	.LFB78:
 261:Src/stm32f1xx_it.c **** 
 262:Src/stm32f1xx_it.c **** /**
 263:Src/stm32f1xx_it.c ****   * @brief This function handles USART3 global interrupt.
 264:Src/stm32f1xx_it.c ****   */
 265:Src/stm32f1xx_it.c **** void USART3_IRQHandler(void)
 266:Src/stm32f1xx_it.c **** {
 362              		.loc 1 266 1 is_stmt 1 view -0
 363              		.cfi_startproc
 364              		@ args = 0, pretend = 0, frame = 0
 365              		@ frame_needed = 0, uses_anonymous_args = 0
 366 0000 08B5     		push	{r3, lr}
 367              	.LCFI5:
 368              		.cfi_def_cfa_offset 8
 369              		.cfi_offset 3, -8
 370              		.cfi_offset 14, -4
 267:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USART3_IRQn 0 */
 268:Src/stm32f1xx_it.c **** 
 269:Src/stm32f1xx_it.c ****   /* USER CODE END USART3_IRQn 0 */
 270:Src/stm32f1xx_it.c ****   HAL_UART_IRQHandler(&huart3);
 371              		.loc 1 270 3 view .LVU42
 372 0002 0248     		ldr	r0, .L34
 373 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 374              	.LVL5:
 271:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USART3_IRQn 1 */
 272:Src/stm32f1xx_it.c **** 
 273:Src/stm32f1xx_it.c ****   /* USER CODE END USART3_IRQn 1 */
 274:Src/stm32f1xx_it.c **** }
 375              		.loc 1 274 1 is_stmt 0 view .LVU43
ARM GAS  /tmp/ccwWYJ2y.s 			page 12


 376 0008 08BD     		pop	{r3, pc}
 377              	.L35:
 378 000a 00BF     		.align	2
 379              	.L34:
 380 000c 00000000 		.word	huart3
 381              		.cfi_endproc
 382              	.LFE78:
 384              		.section	.text.TIM5_IRQHandler,"ax",%progbits
 385              		.align	1
 386              		.global	TIM5_IRQHandler
 387              		.syntax unified
 388              		.thumb
 389              		.thumb_func
 390              		.fpu softvfp
 392              	TIM5_IRQHandler:
 393              	.LFB79:
 275:Src/stm32f1xx_it.c **** 
 276:Src/stm32f1xx_it.c **** /**
 277:Src/stm32f1xx_it.c ****   * @brief This function handles TIM5 global interrupt.
 278:Src/stm32f1xx_it.c ****   */
 279:Src/stm32f1xx_it.c **** void TIM5_IRQHandler(void)
 280:Src/stm32f1xx_it.c **** {
 394              		.loc 1 280 1 is_stmt 1 view -0
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 0
 397              		@ frame_needed = 0, uses_anonymous_args = 0
 398 0000 08B5     		push	{r3, lr}
 399              	.LCFI6:
 400              		.cfi_def_cfa_offset 8
 401              		.cfi_offset 3, -8
 402              		.cfi_offset 14, -4
 281:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM5_IRQn 0 */
 282:Src/stm32f1xx_it.c **** 
 283:Src/stm32f1xx_it.c ****   /* USER CODE END TIM5_IRQn 0 */
 284:Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim5);
 403              		.loc 1 284 3 view .LVU45
 404 0002 0248     		ldr	r0, .L38
 405 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 406              	.LVL6:
 285:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM5_IRQn 1 */
 286:Src/stm32f1xx_it.c **** 
 287:Src/stm32f1xx_it.c ****   /* USER CODE END TIM5_IRQn 1 */
 288:Src/stm32f1xx_it.c **** }
 407              		.loc 1 288 1 is_stmt 0 view .LVU46
 408 0008 08BD     		pop	{r3, pc}
 409              	.L39:
 410 000a 00BF     		.align	2
 411              	.L38:
 412 000c 00000000 		.word	htim5
 413              		.cfi_endproc
 414              	.LFE79:
 416              		.text
 417              	.Letext0:
 418              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 419              		.file 3 "Drivers/CMSIS/Include/core_cm3.h"
 420              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 421              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
ARM GAS  /tmp/ccwWYJ2y.s 			page 13


 422              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 423              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 424              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 425              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 426              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /tmp/ccwWYJ2y.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_it.c
     /tmp/ccwWYJ2y.s:16     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccwWYJ2y.s:24     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccwWYJ2y.s:42     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccwWYJ2y.s:49     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccwWYJ2y.s:66     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccwWYJ2y.s:73     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccwWYJ2y.s:90     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccwWYJ2y.s:97     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccwWYJ2y.s:114    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccwWYJ2y.s:121    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccwWYJ2y.s:138    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccwWYJ2y.s:145    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccwWYJ2y.s:158    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccwWYJ2y.s:165    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccwWYJ2y.s:178    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccwWYJ2y.s:185    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccwWYJ2y.s:198    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccwWYJ2y.s:205    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccwWYJ2y.s:225    .text.DMA1_Channel2_IRQHandler:0000000000000000 $t
     /tmp/ccwWYJ2y.s:232    .text.DMA1_Channel2_IRQHandler:0000000000000000 DMA1_Channel2_IRQHandler
     /tmp/ccwWYJ2y.s:252    .text.DMA1_Channel2_IRQHandler:000000000000000c $d
     /tmp/ccwWYJ2y.s:257    .text.DMA1_Channel4_IRQHandler:0000000000000000 $t
     /tmp/ccwWYJ2y.s:264    .text.DMA1_Channel4_IRQHandler:0000000000000000 DMA1_Channel4_IRQHandler
     /tmp/ccwWYJ2y.s:284    .text.DMA1_Channel4_IRQHandler:000000000000000c $d
     /tmp/ccwWYJ2y.s:289    .text.TIM3_IRQHandler:0000000000000000 $t
     /tmp/ccwWYJ2y.s:296    .text.TIM3_IRQHandler:0000000000000000 TIM3_IRQHandler
     /tmp/ccwWYJ2y.s:316    .text.TIM3_IRQHandler:000000000000000c $d
     /tmp/ccwWYJ2y.s:321    .text.USART1_IRQHandler:0000000000000000 $t
     /tmp/ccwWYJ2y.s:328    .text.USART1_IRQHandler:0000000000000000 USART1_IRQHandler
     /tmp/ccwWYJ2y.s:348    .text.USART1_IRQHandler:000000000000000c $d
     /tmp/ccwWYJ2y.s:353    .text.USART3_IRQHandler:0000000000000000 $t
     /tmp/ccwWYJ2y.s:360    .text.USART3_IRQHandler:0000000000000000 USART3_IRQHandler
     /tmp/ccwWYJ2y.s:380    .text.USART3_IRQHandler:000000000000000c $d
     /tmp/ccwWYJ2y.s:385    .text.TIM5_IRQHandler:0000000000000000 $t
     /tmp/ccwWYJ2y.s:392    .text.TIM5_IRQHandler:0000000000000000 TIM5_IRQHandler
     /tmp/ccwWYJ2y.s:412    .text.TIM5_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_DMA_IRQHandler
hdma_usart3_tx
hdma_usart1_tx
HAL_TIM_IRQHandler
htim3
HAL_UART_IRQHandler
huart1
huart3
htim5
