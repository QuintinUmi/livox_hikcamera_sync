ARM GAS  /tmp/ccYMRRE0.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"usart.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
  16              		.align	1
  17              		.global	MX_USART1_UART_Init
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	MX_USART1_UART_Init:
  25              	.LFB65:
  26              		.file 1 "Src/usart.c"
   1:Src/usart.c   **** /* USER CODE BEGIN Header */
   2:Src/usart.c   **** /**
   3:Src/usart.c   ****   ******************************************************************************
   4:Src/usart.c   ****   * @file    usart.c
   5:Src/usart.c   ****   * @brief   This file provides code for the configuration
   6:Src/usart.c   ****   *          of the USART instances.
   7:Src/usart.c   ****   ******************************************************************************
   8:Src/usart.c   ****   * @attention
   9:Src/usart.c   ****   *
  10:Src/usart.c   ****   * Copyright (c) 2024 STMicroelectronics.
  11:Src/usart.c   ****   * All rights reserved.
  12:Src/usart.c   ****   *
  13:Src/usart.c   ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Src/usart.c   ****   * in the root directory of this software component.
  15:Src/usart.c   ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Src/usart.c   ****   *
  17:Src/usart.c   ****   ******************************************************************************
  18:Src/usart.c   ****   */
  19:Src/usart.c   **** /* USER CODE END Header */
  20:Src/usart.c   **** /* Includes ------------------------------------------------------------------*/
  21:Src/usart.c   **** #include "usart.h"
  22:Src/usart.c   **** 
  23:Src/usart.c   **** /* USER CODE BEGIN 0 */
  24:Src/usart.c   **** 
  25:Src/usart.c   **** /* USER CODE END 0 */
  26:Src/usart.c   **** 
  27:Src/usart.c   **** UART_HandleTypeDef huart1;
  28:Src/usart.c   **** UART_HandleTypeDef huart3;
  29:Src/usart.c   **** DMA_HandleTypeDef hdma_usart1_tx;
  30:Src/usart.c   **** DMA_HandleTypeDef hdma_usart3_tx;
  31:Src/usart.c   **** 
  32:Src/usart.c   **** /* USART1 init function */
ARM GAS  /tmp/ccYMRRE0.s 			page 2


  33:Src/usart.c   **** 
  34:Src/usart.c   **** void MX_USART1_UART_Init(void)
  35:Src/usart.c   **** {
  27              		.loc 1 35 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
  36:Src/usart.c   **** 
  37:Src/usart.c   ****   /* USER CODE BEGIN USART1_Init 0 */
  38:Src/usart.c   **** 
  39:Src/usart.c   ****   /* USER CODE END USART1_Init 0 */
  40:Src/usart.c   **** 
  41:Src/usart.c   ****   /* USER CODE BEGIN USART1_Init 1 */
  42:Src/usart.c   **** 
  43:Src/usart.c   ****   /* USER CODE END USART1_Init 1 */
  44:Src/usart.c   ****   huart1.Instance = USART1;
  36              		.loc 1 44 3 view .LVU1
  37              		.loc 1 44 19 is_stmt 0 view .LVU2
  38 0002 0E48     		ldr	r0, .L5
  39 0004 0E4B     		ldr	r3, .L5+4
  40 0006 0360     		str	r3, [r0]
  45:Src/usart.c   ****   huart1.Init.BaudRate = 115200;
  41              		.loc 1 45 3 is_stmt 1 view .LVU3
  42              		.loc 1 45 24 is_stmt 0 view .LVU4
  43 0008 4FF4E133 		mov	r3, #115200
  44 000c 4360     		str	r3, [r0, #4]
  46:Src/usart.c   ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
  45              		.loc 1 46 3 is_stmt 1 view .LVU5
  46              		.loc 1 46 26 is_stmt 0 view .LVU6
  47 000e 0023     		movs	r3, #0
  48 0010 8360     		str	r3, [r0, #8]
  47:Src/usart.c   ****   huart1.Init.StopBits = UART_STOPBITS_1;
  49              		.loc 1 47 3 is_stmt 1 view .LVU7
  50              		.loc 1 47 24 is_stmt 0 view .LVU8
  51 0012 C360     		str	r3, [r0, #12]
  48:Src/usart.c   ****   huart1.Init.Parity = UART_PARITY_NONE;
  52              		.loc 1 48 3 is_stmt 1 view .LVU9
  53              		.loc 1 48 22 is_stmt 0 view .LVU10
  54 0014 0361     		str	r3, [r0, #16]
  49:Src/usart.c   ****   huart1.Init.Mode = UART_MODE_TX_RX;
  55              		.loc 1 49 3 is_stmt 1 view .LVU11
  56              		.loc 1 49 20 is_stmt 0 view .LVU12
  57 0016 0C22     		movs	r2, #12
  58 0018 4261     		str	r2, [r0, #20]
  50:Src/usart.c   ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  59              		.loc 1 50 3 is_stmt 1 view .LVU13
  60              		.loc 1 50 25 is_stmt 0 view .LVU14
  61 001a 8361     		str	r3, [r0, #24]
  51:Src/usart.c   ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
  62              		.loc 1 51 3 is_stmt 1 view .LVU15
  63              		.loc 1 51 28 is_stmt 0 view .LVU16
  64 001c C361     		str	r3, [r0, #28]
ARM GAS  /tmp/ccYMRRE0.s 			page 3


  52:Src/usart.c   ****   if (HAL_UART_Init(&huart1) != HAL_OK)
  65              		.loc 1 52 3 is_stmt 1 view .LVU17
  66              		.loc 1 52 7 is_stmt 0 view .LVU18
  67 001e FFF7FEFF 		bl	HAL_UART_Init
  68              	.LVL0:
  69              		.loc 1 52 6 view .LVU19
  70 0022 40B9     		cbnz	r0, .L4
  71              	.L2:
  53:Src/usart.c   ****   {
  54:Src/usart.c   ****     Error_Handler();
  55:Src/usart.c   ****   }
  56:Src/usart.c   ****   /* USER CODE BEGIN USART1_Init 2 */
  57:Src/usart.c   ****   HAL_NVIC_SetPriority(USART1_IRQn, 2, 2);
  72              		.loc 1 57 3 is_stmt 1 view .LVU20
  73 0024 0222     		movs	r2, #2
  74 0026 1146     		mov	r1, r2
  75 0028 2520     		movs	r0, #37
  76 002a FFF7FEFF 		bl	HAL_NVIC_SetPriority
  77              	.LVL1:
  58:Src/usart.c   ****   HAL_NVIC_EnableIRQ(USART1_IRQn);
  78              		.loc 1 58 3 view .LVU21
  79 002e 2520     		movs	r0, #37
  80 0030 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  81              	.LVL2:
  59:Src/usart.c   ****   /* USER CODE END USART1_Init 2 */
  60:Src/usart.c   **** 
  61:Src/usart.c   **** }
  82              		.loc 1 61 1 is_stmt 0 view .LVU22
  83 0034 08BD     		pop	{r3, pc}
  84              	.L4:
  54:Src/usart.c   ****   }
  85              		.loc 1 54 5 is_stmt 1 view .LVU23
  86 0036 FFF7FEFF 		bl	Error_Handler
  87              	.LVL3:
  88 003a F3E7     		b	.L2
  89              	.L6:
  90              		.align	2
  91              	.L5:
  92 003c 00000000 		.word	huart1
  93 0040 00380140 		.word	1073821696
  94              		.cfi_endproc
  95              	.LFE65:
  97              		.section	.text.MX_USART3_UART_Init,"ax",%progbits
  98              		.align	1
  99              		.global	MX_USART3_UART_Init
 100              		.syntax unified
 101              		.thumb
 102              		.thumb_func
 103              		.fpu softvfp
 105              	MX_USART3_UART_Init:
 106              	.LFB66:
  62:Src/usart.c   **** /* USART3 init function */
  63:Src/usart.c   **** 
  64:Src/usart.c   **** void MX_USART3_UART_Init(void)
  65:Src/usart.c   **** {
 107              		.loc 1 65 1 view -0
 108              		.cfi_startproc
ARM GAS  /tmp/ccYMRRE0.s 			page 4


 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111 0000 08B5     		push	{r3, lr}
 112              	.LCFI1:
 113              		.cfi_def_cfa_offset 8
 114              		.cfi_offset 3, -8
 115              		.cfi_offset 14, -4
  66:Src/usart.c   **** 
  67:Src/usart.c   ****   /* USER CODE BEGIN USART3_Init 0 */
  68:Src/usart.c   **** 
  69:Src/usart.c   ****   /* USER CODE END USART3_Init 0 */
  70:Src/usart.c   **** 
  71:Src/usart.c   ****   /* USER CODE BEGIN USART3_Init 1 */
  72:Src/usart.c   **** 
  73:Src/usart.c   ****   /* USER CODE END USART3_Init 1 */
  74:Src/usart.c   ****   huart3.Instance = USART3;
 116              		.loc 1 74 3 view .LVU25
 117              		.loc 1 74 19 is_stmt 0 view .LVU26
 118 0002 0E48     		ldr	r0, .L11
 119 0004 0E4B     		ldr	r3, .L11+4
 120 0006 0360     		str	r3, [r0]
  75:Src/usart.c   ****   huart3.Init.BaudRate = 9600;
 121              		.loc 1 75 3 is_stmt 1 view .LVU27
 122              		.loc 1 75 24 is_stmt 0 view .LVU28
 123 0008 4FF41653 		mov	r3, #9600
 124 000c 4360     		str	r3, [r0, #4]
  76:Src/usart.c   ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 125              		.loc 1 76 3 is_stmt 1 view .LVU29
 126              		.loc 1 76 26 is_stmt 0 view .LVU30
 127 000e 0023     		movs	r3, #0
 128 0010 8360     		str	r3, [r0, #8]
  77:Src/usart.c   ****   huart3.Init.StopBits = UART_STOPBITS_1;
 129              		.loc 1 77 3 is_stmt 1 view .LVU31
 130              		.loc 1 77 24 is_stmt 0 view .LVU32
 131 0012 C360     		str	r3, [r0, #12]
  78:Src/usart.c   ****   huart3.Init.Parity = UART_PARITY_NONE;
 132              		.loc 1 78 3 is_stmt 1 view .LVU33
 133              		.loc 1 78 22 is_stmt 0 view .LVU34
 134 0014 0361     		str	r3, [r0, #16]
  79:Src/usart.c   ****   huart3.Init.Mode = UART_MODE_TX_RX;
 135              		.loc 1 79 3 is_stmt 1 view .LVU35
 136              		.loc 1 79 20 is_stmt 0 view .LVU36
 137 0016 0C22     		movs	r2, #12
 138 0018 4261     		str	r2, [r0, #20]
  80:Src/usart.c   ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 139              		.loc 1 80 3 is_stmt 1 view .LVU37
 140              		.loc 1 80 25 is_stmt 0 view .LVU38
 141 001a 8361     		str	r3, [r0, #24]
  81:Src/usart.c   ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 142              		.loc 1 81 3 is_stmt 1 view .LVU39
 143              		.loc 1 81 28 is_stmt 0 view .LVU40
 144 001c C361     		str	r3, [r0, #28]
  82:Src/usart.c   ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 145              		.loc 1 82 3 is_stmt 1 view .LVU41
 146              		.loc 1 82 7 is_stmt 0 view .LVU42
 147 001e FFF7FEFF 		bl	HAL_UART_Init
 148              	.LVL4:
ARM GAS  /tmp/ccYMRRE0.s 			page 5


 149              		.loc 1 82 6 view .LVU43
 150 0022 40B9     		cbnz	r0, .L10
 151              	.L8:
  83:Src/usart.c   ****   {
  84:Src/usart.c   ****     Error_Handler();
  85:Src/usart.c   ****   }
  86:Src/usart.c   ****   /* USER CODE BEGIN USART3_Init 2 */
  87:Src/usart.c   ****   HAL_NVIC_SetPriority(USART3_IRQn, 0, 0);
 152              		.loc 1 87 3 is_stmt 1 view .LVU44
 153 0024 0022     		movs	r2, #0
 154 0026 1146     		mov	r1, r2
 155 0028 2720     		movs	r0, #39
 156 002a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 157              	.LVL5:
  88:Src/usart.c   ****   HAL_NVIC_EnableIRQ(USART3_IRQn);
 158              		.loc 1 88 3 view .LVU45
 159 002e 2720     		movs	r0, #39
 160 0030 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 161              	.LVL6:
  89:Src/usart.c   ****   /* USER CODE END USART3_Init 2 */
  90:Src/usart.c   **** 
  91:Src/usart.c   **** }
 162              		.loc 1 91 1 is_stmt 0 view .LVU46
 163 0034 08BD     		pop	{r3, pc}
 164              	.L10:
  84:Src/usart.c   ****   }
 165              		.loc 1 84 5 is_stmt 1 view .LVU47
 166 0036 FFF7FEFF 		bl	Error_Handler
 167              	.LVL7:
 168 003a F3E7     		b	.L8
 169              	.L12:
 170              		.align	2
 171              	.L11:
 172 003c 00000000 		.word	huart3
 173 0040 00480040 		.word	1073760256
 174              		.cfi_endproc
 175              	.LFE66:
 177              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 178              		.align	1
 179              		.global	HAL_UART_MspInit
 180              		.syntax unified
 181              		.thumb
 182              		.thumb_func
 183              		.fpu softvfp
 185              	HAL_UART_MspInit:
 186              	.LVL8:
 187              	.LFB67:
  92:Src/usart.c   **** 
  93:Src/usart.c   **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
  94:Src/usart.c   **** {
 188              		.loc 1 94 1 view -0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 32
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		.loc 1 94 1 is_stmt 0 view .LVU49
 193 0000 70B5     		push	{r4, r5, r6, lr}
 194              	.LCFI2:
ARM GAS  /tmp/ccYMRRE0.s 			page 6


 195              		.cfi_def_cfa_offset 16
 196              		.cfi_offset 4, -16
 197              		.cfi_offset 5, -12
 198              		.cfi_offset 6, -8
 199              		.cfi_offset 14, -4
 200 0002 88B0     		sub	sp, sp, #32
 201              	.LCFI3:
 202              		.cfi_def_cfa_offset 48
 203 0004 0446     		mov	r4, r0
  95:Src/usart.c   **** 
  96:Src/usart.c   ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 204              		.loc 1 96 3 is_stmt 1 view .LVU50
 205              		.loc 1 96 20 is_stmt 0 view .LVU51
 206 0006 0023     		movs	r3, #0
 207 0008 0493     		str	r3, [sp, #16]
 208 000a 0593     		str	r3, [sp, #20]
 209 000c 0693     		str	r3, [sp, #24]
 210 000e 0793     		str	r3, [sp, #28]
  97:Src/usart.c   ****   if(uartHandle->Instance==USART1)
 211              		.loc 1 97 3 is_stmt 1 view .LVU52
 212              		.loc 1 97 16 is_stmt 0 view .LVU53
 213 0010 0368     		ldr	r3, [r0]
 214              		.loc 1 97 5 view .LVU54
 215 0012 4F4A     		ldr	r2, .L23
 216 0014 9342     		cmp	r3, r2
 217 0016 04D0     		beq	.L19
  98:Src/usart.c   ****   {
  99:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspInit 0 */
 100:Src/usart.c   **** 
 101:Src/usart.c   ****   /* USER CODE END USART1_MspInit 0 */
 102:Src/usart.c   ****     /* USART1 clock enable */
 103:Src/usart.c   ****     __HAL_RCC_USART1_CLK_ENABLE();
 104:Src/usart.c   **** 
 105:Src/usart.c   ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 106:Src/usart.c   ****     /**USART1 GPIO Configuration
 107:Src/usart.c   ****     PA9     ------> USART1_TX
 108:Src/usart.c   ****     PA10     ------> USART1_RX
 109:Src/usart.c   ****     */
 110:Src/usart.c   ****     GPIO_InitStruct.Pin = GPIO_PIN_9;
 111:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 112:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 113:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 114:Src/usart.c   **** 
 115:Src/usart.c   ****     GPIO_InitStruct.Pin = GPIO_PIN_10;
 116:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 117:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 118:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 119:Src/usart.c   **** 
 120:Src/usart.c   ****     /* USART1 DMA Init */
 121:Src/usart.c   ****     /* USART1_TX Init */
 122:Src/usart.c   ****     hdma_usart1_tx.Instance = DMA1_Channel4;
 123:Src/usart.c   ****     hdma_usart1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 124:Src/usart.c   ****     hdma_usart1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 125:Src/usart.c   ****     hdma_usart1_tx.Init.MemInc = DMA_MINC_ENABLE;
 126:Src/usart.c   ****     hdma_usart1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 127:Src/usart.c   ****     hdma_usart1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 128:Src/usart.c   ****     hdma_usart1_tx.Init.Mode = DMA_NORMAL;
ARM GAS  /tmp/ccYMRRE0.s 			page 7


 129:Src/usart.c   ****     hdma_usart1_tx.Init.Priority = DMA_PRIORITY_LOW;
 130:Src/usart.c   ****     if (HAL_DMA_Init(&hdma_usart1_tx) != HAL_OK)
 131:Src/usart.c   ****     {
 132:Src/usart.c   ****       Error_Handler();
 133:Src/usart.c   ****     }
 134:Src/usart.c   **** 
 135:Src/usart.c   ****     __HAL_LINKDMA(uartHandle,hdmatx,hdma_usart1_tx);
 136:Src/usart.c   **** 
 137:Src/usart.c   ****     /* USART1 interrupt Init */
 138:Src/usart.c   **** 
 139:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspInit 1 */
 140:Src/usart.c   ****     HAL_NVIC_SetPriority(USART1_IRQn, 2, 2);
 141:Src/usart.c   ****     HAL_NVIC_EnableIRQ(USART1_IRQn);
 142:Src/usart.c   ****   /* USER CODE END USART1_MspInit 1 */
 143:Src/usart.c   ****   }
 144:Src/usart.c   ****   else if(uartHandle->Instance==USART3)
 218              		.loc 1 144 8 is_stmt 1 view .LVU55
 219              		.loc 1 144 10 is_stmt 0 view .LVU56
 220 0018 4E4A     		ldr	r2, .L23+4
 221 001a 9342     		cmp	r3, r2
 222 001c 48D0     		beq	.L20
 223              	.LVL9:
 224              	.L13:
 145:Src/usart.c   ****   {
 146:Src/usart.c   ****   /* USER CODE BEGIN USART3_MspInit 0 */
 147:Src/usart.c   **** 
 148:Src/usart.c   ****   /* USER CODE END USART3_MspInit 0 */
 149:Src/usart.c   ****     /* USART3 clock enable */
 150:Src/usart.c   ****     __HAL_RCC_USART3_CLK_ENABLE();
 151:Src/usart.c   **** 
 152:Src/usart.c   ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 153:Src/usart.c   ****     /**USART3 GPIO Configuration
 154:Src/usart.c   ****     PC10     ------> USART3_TX
 155:Src/usart.c   ****     PC11     ------> USART3_RX
 156:Src/usart.c   ****     */
 157:Src/usart.c   ****     GPIO_InitStruct.Pin = GPIO_PIN_10;
 158:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 159:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 160:Src/usart.c   ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 161:Src/usart.c   **** 
 162:Src/usart.c   ****     GPIO_InitStruct.Pin = GPIO_PIN_11;
 163:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 164:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 165:Src/usart.c   ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 166:Src/usart.c   **** 
 167:Src/usart.c   ****     __HAL_AFIO_REMAP_USART3_PARTIAL();
 168:Src/usart.c   **** 
 169:Src/usart.c   ****     /* USART3 DMA Init */
 170:Src/usart.c   ****     /* USART3_TX Init */
 171:Src/usart.c   ****     hdma_usart3_tx.Instance = DMA1_Channel2;
 172:Src/usart.c   ****     hdma_usart3_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 173:Src/usart.c   ****     hdma_usart3_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 174:Src/usart.c   ****     hdma_usart3_tx.Init.MemInc = DMA_MINC_ENABLE;
 175:Src/usart.c   ****     hdma_usart3_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 176:Src/usart.c   ****     hdma_usart3_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 177:Src/usart.c   ****     hdma_usart3_tx.Init.Mode = DMA_NORMAL;
 178:Src/usart.c   ****     hdma_usart3_tx.Init.Priority = DMA_PRIORITY_LOW;
ARM GAS  /tmp/ccYMRRE0.s 			page 8


 179:Src/usart.c   ****     if (HAL_DMA_Init(&hdma_usart3_tx) != HAL_OK)
 180:Src/usart.c   ****     {
 181:Src/usart.c   ****       Error_Handler();
 182:Src/usart.c   ****     }
 183:Src/usart.c   **** 
 184:Src/usart.c   ****     __HAL_LINKDMA(uartHandle,hdmatx,hdma_usart3_tx);
 185:Src/usart.c   **** 
 186:Src/usart.c   ****     /* USART3 interrupt Init */
 187:Src/usart.c   ****     HAL_NVIC_SetPriority(USART3_IRQn, 0, 0);
 188:Src/usart.c   ****     HAL_NVIC_EnableIRQ(USART3_IRQn);
 189:Src/usart.c   ****   /* USER CODE BEGIN USART3_MspInit 1 */
 190:Src/usart.c   **** 
 191:Src/usart.c   ****   /* USER CODE END USART3_MspInit 1 */
 192:Src/usart.c   ****   }
 193:Src/usart.c   **** }
 225              		.loc 1 193 1 view .LVU57
 226 001e 08B0     		add	sp, sp, #32
 227              	.LCFI4:
 228              		.cfi_remember_state
 229              		.cfi_def_cfa_offset 16
 230              		@ sp needed
 231 0020 70BD     		pop	{r4, r5, r6, pc}
 232              	.LVL10:
 233              	.L19:
 234              	.LCFI5:
 235              		.cfi_restore_state
 103:Src/usart.c   **** 
 236              		.loc 1 103 5 is_stmt 1 view .LVU58
 237              	.LBB2:
 103:Src/usart.c   **** 
 238              		.loc 1 103 5 view .LVU59
 103:Src/usart.c   **** 
 239              		.loc 1 103 5 view .LVU60
 240 0022 4D4B     		ldr	r3, .L23+8
 241 0024 9A69     		ldr	r2, [r3, #24]
 242 0026 42F48042 		orr	r2, r2, #16384
 243 002a 9A61     		str	r2, [r3, #24]
 103:Src/usart.c   **** 
 244              		.loc 1 103 5 view .LVU61
 245 002c 9A69     		ldr	r2, [r3, #24]
 246 002e 02F48042 		and	r2, r2, #16384
 247 0032 0092     		str	r2, [sp]
 103:Src/usart.c   **** 
 248              		.loc 1 103 5 view .LVU62
 249 0034 009A     		ldr	r2, [sp]
 250              	.LBE2:
 103:Src/usart.c   **** 
 251              		.loc 1 103 5 view .LVU63
 105:Src/usart.c   ****     /**USART1 GPIO Configuration
 252              		.loc 1 105 5 view .LVU64
 253              	.LBB3:
 105:Src/usart.c   ****     /**USART1 GPIO Configuration
 254              		.loc 1 105 5 view .LVU65
 105:Src/usart.c   ****     /**USART1 GPIO Configuration
 255              		.loc 1 105 5 view .LVU66
 256 0036 9A69     		ldr	r2, [r3, #24]
 257 0038 42F00402 		orr	r2, r2, #4
ARM GAS  /tmp/ccYMRRE0.s 			page 9


 258 003c 9A61     		str	r2, [r3, #24]
 105:Src/usart.c   ****     /**USART1 GPIO Configuration
 259              		.loc 1 105 5 view .LVU67
 260 003e 9B69     		ldr	r3, [r3, #24]
 261 0040 03F00403 		and	r3, r3, #4
 262 0044 0193     		str	r3, [sp, #4]
 105:Src/usart.c   ****     /**USART1 GPIO Configuration
 263              		.loc 1 105 5 view .LVU68
 264 0046 019B     		ldr	r3, [sp, #4]
 265              	.LBE3:
 105:Src/usart.c   ****     /**USART1 GPIO Configuration
 266              		.loc 1 105 5 view .LVU69
 110:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 267              		.loc 1 110 5 view .LVU70
 110:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 268              		.loc 1 110 25 is_stmt 0 view .LVU71
 269 0048 4FF40073 		mov	r3, #512
 270 004c 0493     		str	r3, [sp, #16]
 111:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 271              		.loc 1 111 5 is_stmt 1 view .LVU72
 111:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 272              		.loc 1 111 26 is_stmt 0 view .LVU73
 273 004e 0223     		movs	r3, #2
 274 0050 0593     		str	r3, [sp, #20]
 112:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 275              		.loc 1 112 5 is_stmt 1 view .LVU74
 112:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 276              		.loc 1 112 27 is_stmt 0 view .LVU75
 277 0052 0323     		movs	r3, #3
 278 0054 0793     		str	r3, [sp, #28]
 113:Src/usart.c   **** 
 279              		.loc 1 113 5 is_stmt 1 view .LVU76
 280 0056 414E     		ldr	r6, .L23+12
 281 0058 04A9     		add	r1, sp, #16
 282 005a 3046     		mov	r0, r6
 283              	.LVL11:
 113:Src/usart.c   **** 
 284              		.loc 1 113 5 is_stmt 0 view .LVU77
 285 005c FFF7FEFF 		bl	HAL_GPIO_Init
 286              	.LVL12:
 115:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 287              		.loc 1 115 5 is_stmt 1 view .LVU78
 115:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 288              		.loc 1 115 25 is_stmt 0 view .LVU79
 289 0060 4FF48063 		mov	r3, #1024
 290 0064 0493     		str	r3, [sp, #16]
 116:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 291              		.loc 1 116 5 is_stmt 1 view .LVU80
 116:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 292              		.loc 1 116 26 is_stmt 0 view .LVU81
 293 0066 0025     		movs	r5, #0
 294 0068 0595     		str	r5, [sp, #20]
 117:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 295              		.loc 1 117 5 is_stmt 1 view .LVU82
 117:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 296              		.loc 1 117 26 is_stmt 0 view .LVU83
 297 006a 0695     		str	r5, [sp, #24]
ARM GAS  /tmp/ccYMRRE0.s 			page 10


 118:Src/usart.c   **** 
 298              		.loc 1 118 5 is_stmt 1 view .LVU84
 299 006c 04A9     		add	r1, sp, #16
 300 006e 3046     		mov	r0, r6
 301 0070 FFF7FEFF 		bl	HAL_GPIO_Init
 302              	.LVL13:
 122:Src/usart.c   ****     hdma_usart1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 303              		.loc 1 122 5 view .LVU85
 122:Src/usart.c   ****     hdma_usart1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 304              		.loc 1 122 29 is_stmt 0 view .LVU86
 305 0074 3A48     		ldr	r0, .L23+16
 306 0076 3B4B     		ldr	r3, .L23+20
 307 0078 0360     		str	r3, [r0]
 123:Src/usart.c   ****     hdma_usart1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 308              		.loc 1 123 5 is_stmt 1 view .LVU87
 123:Src/usart.c   ****     hdma_usart1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 309              		.loc 1 123 35 is_stmt 0 view .LVU88
 310 007a 1023     		movs	r3, #16
 311 007c 4360     		str	r3, [r0, #4]
 124:Src/usart.c   ****     hdma_usart1_tx.Init.MemInc = DMA_MINC_ENABLE;
 312              		.loc 1 124 5 is_stmt 1 view .LVU89
 124:Src/usart.c   ****     hdma_usart1_tx.Init.MemInc = DMA_MINC_ENABLE;
 313              		.loc 1 124 35 is_stmt 0 view .LVU90
 314 007e 8560     		str	r5, [r0, #8]
 125:Src/usart.c   ****     hdma_usart1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 315              		.loc 1 125 5 is_stmt 1 view .LVU91
 125:Src/usart.c   ****     hdma_usart1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 316              		.loc 1 125 32 is_stmt 0 view .LVU92
 317 0080 8023     		movs	r3, #128
 318 0082 C360     		str	r3, [r0, #12]
 126:Src/usart.c   ****     hdma_usart1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 319              		.loc 1 126 5 is_stmt 1 view .LVU93
 126:Src/usart.c   ****     hdma_usart1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 320              		.loc 1 126 45 is_stmt 0 view .LVU94
 321 0084 0561     		str	r5, [r0, #16]
 127:Src/usart.c   ****     hdma_usart1_tx.Init.Mode = DMA_NORMAL;
 322              		.loc 1 127 5 is_stmt 1 view .LVU95
 127:Src/usart.c   ****     hdma_usart1_tx.Init.Mode = DMA_NORMAL;
 323              		.loc 1 127 42 is_stmt 0 view .LVU96
 324 0086 4561     		str	r5, [r0, #20]
 128:Src/usart.c   ****     hdma_usart1_tx.Init.Priority = DMA_PRIORITY_LOW;
 325              		.loc 1 128 5 is_stmt 1 view .LVU97
 128:Src/usart.c   ****     hdma_usart1_tx.Init.Priority = DMA_PRIORITY_LOW;
 326              		.loc 1 128 30 is_stmt 0 view .LVU98
 327 0088 8561     		str	r5, [r0, #24]
 129:Src/usart.c   ****     if (HAL_DMA_Init(&hdma_usart1_tx) != HAL_OK)
 328              		.loc 1 129 5 is_stmt 1 view .LVU99
 129:Src/usart.c   ****     if (HAL_DMA_Init(&hdma_usart1_tx) != HAL_OK)
 329              		.loc 1 129 34 is_stmt 0 view .LVU100
 330 008a C561     		str	r5, [r0, #28]
 130:Src/usart.c   ****     {
 331              		.loc 1 130 5 is_stmt 1 view .LVU101
 130:Src/usart.c   ****     {
 332              		.loc 1 130 9 is_stmt 0 view .LVU102
 333 008c FFF7FEFF 		bl	HAL_DMA_Init
 334              	.LVL14:
 130:Src/usart.c   ****     {
ARM GAS  /tmp/ccYMRRE0.s 			page 11


 335              		.loc 1 130 8 view .LVU103
 336 0090 58B9     		cbnz	r0, .L21
 337              	.L15:
 135:Src/usart.c   **** 
 338              		.loc 1 135 5 is_stmt 1 view .LVU104
 135:Src/usart.c   **** 
 339              		.loc 1 135 5 view .LVU105
 340 0092 334B     		ldr	r3, .L23+16
 341 0094 A363     		str	r3, [r4, #56]
 135:Src/usart.c   **** 
 342              		.loc 1 135 5 view .LVU106
 343 0096 5C62     		str	r4, [r3, #36]
 135:Src/usart.c   **** 
 344              		.loc 1 135 5 view .LVU107
 140:Src/usart.c   ****     HAL_NVIC_EnableIRQ(USART1_IRQn);
 345              		.loc 1 140 5 view .LVU108
 346 0098 0222     		movs	r2, #2
 347 009a 1146     		mov	r1, r2
 348 009c 2520     		movs	r0, #37
 349 009e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 350              	.LVL15:
 141:Src/usart.c   ****   /* USER CODE END USART1_MspInit 1 */
 351              		.loc 1 141 5 view .LVU109
 352 00a2 2520     		movs	r0, #37
 353 00a4 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 354              	.LVL16:
 355 00a8 B9E7     		b	.L13
 356              	.L21:
 132:Src/usart.c   ****     }
 357              		.loc 1 132 7 view .LVU110
 358 00aa FFF7FEFF 		bl	Error_Handler
 359              	.LVL17:
 360 00ae F0E7     		b	.L15
 361              	.LVL18:
 362              	.L20:
 150:Src/usart.c   **** 
 363              		.loc 1 150 5 view .LVU111
 364              	.LBB4:
 150:Src/usart.c   **** 
 365              		.loc 1 150 5 view .LVU112
 150:Src/usart.c   **** 
 366              		.loc 1 150 5 view .LVU113
 367 00b0 294B     		ldr	r3, .L23+8
 368 00b2 DA69     		ldr	r2, [r3, #28]
 369 00b4 42F48022 		orr	r2, r2, #262144
 370 00b8 DA61     		str	r2, [r3, #28]
 150:Src/usart.c   **** 
 371              		.loc 1 150 5 view .LVU114
 372 00ba DA69     		ldr	r2, [r3, #28]
 373 00bc 02F48022 		and	r2, r2, #262144
 374 00c0 0292     		str	r2, [sp, #8]
 150:Src/usart.c   **** 
 375              		.loc 1 150 5 view .LVU115
 376 00c2 029A     		ldr	r2, [sp, #8]
 377              	.LBE4:
 150:Src/usart.c   **** 
 378              		.loc 1 150 5 view .LVU116
ARM GAS  /tmp/ccYMRRE0.s 			page 12


 152:Src/usart.c   ****     /**USART3 GPIO Configuration
 379              		.loc 1 152 5 view .LVU117
 380              	.LBB5:
 152:Src/usart.c   ****     /**USART3 GPIO Configuration
 381              		.loc 1 152 5 view .LVU118
 152:Src/usart.c   ****     /**USART3 GPIO Configuration
 382              		.loc 1 152 5 view .LVU119
 383 00c4 9A69     		ldr	r2, [r3, #24]
 384 00c6 42F01002 		orr	r2, r2, #16
 385 00ca 9A61     		str	r2, [r3, #24]
 152:Src/usart.c   ****     /**USART3 GPIO Configuration
 386              		.loc 1 152 5 view .LVU120
 387 00cc 9B69     		ldr	r3, [r3, #24]
 388 00ce 03F01003 		and	r3, r3, #16
 389 00d2 0393     		str	r3, [sp, #12]
 152:Src/usart.c   ****     /**USART3 GPIO Configuration
 390              		.loc 1 152 5 view .LVU121
 391 00d4 039B     		ldr	r3, [sp, #12]
 392              	.LBE5:
 152:Src/usart.c   ****     /**USART3 GPIO Configuration
 393              		.loc 1 152 5 view .LVU122
 157:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 394              		.loc 1 157 5 view .LVU123
 157:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 395              		.loc 1 157 25 is_stmt 0 view .LVU124
 396 00d6 4FF48063 		mov	r3, #1024
 397 00da 0493     		str	r3, [sp, #16]
 158:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 398              		.loc 1 158 5 is_stmt 1 view .LVU125
 158:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 399              		.loc 1 158 26 is_stmt 0 view .LVU126
 400 00dc 0223     		movs	r3, #2
 401 00de 0593     		str	r3, [sp, #20]
 159:Src/usart.c   ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 402              		.loc 1 159 5 is_stmt 1 view .LVU127
 159:Src/usart.c   ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 403              		.loc 1 159 27 is_stmt 0 view .LVU128
 404 00e0 0323     		movs	r3, #3
 405 00e2 0793     		str	r3, [sp, #28]
 160:Src/usart.c   **** 
 406              		.loc 1 160 5 is_stmt 1 view .LVU129
 407 00e4 204E     		ldr	r6, .L23+24
 408 00e6 04A9     		add	r1, sp, #16
 409 00e8 3046     		mov	r0, r6
 410              	.LVL19:
 160:Src/usart.c   **** 
 411              		.loc 1 160 5 is_stmt 0 view .LVU130
 412 00ea FFF7FEFF 		bl	HAL_GPIO_Init
 413              	.LVL20:
 162:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 414              		.loc 1 162 5 is_stmt 1 view .LVU131
 162:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 415              		.loc 1 162 25 is_stmt 0 view .LVU132
 416 00ee 4FF40063 		mov	r3, #2048
 417 00f2 0493     		str	r3, [sp, #16]
 163:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 418              		.loc 1 163 5 is_stmt 1 view .LVU133
ARM GAS  /tmp/ccYMRRE0.s 			page 13


 163:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 419              		.loc 1 163 26 is_stmt 0 view .LVU134
 420 00f4 0025     		movs	r5, #0
 421 00f6 0595     		str	r5, [sp, #20]
 164:Src/usart.c   ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 422              		.loc 1 164 5 is_stmt 1 view .LVU135
 164:Src/usart.c   ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 423              		.loc 1 164 26 is_stmt 0 view .LVU136
 424 00f8 0695     		str	r5, [sp, #24]
 165:Src/usart.c   **** 
 425              		.loc 1 165 5 is_stmt 1 view .LVU137
 426 00fa 04A9     		add	r1, sp, #16
 427 00fc 3046     		mov	r0, r6
 428 00fe FFF7FEFF 		bl	HAL_GPIO_Init
 429              	.LVL21:
 167:Src/usart.c   **** 
 430              		.loc 1 167 5 view .LVU138
 431              	.LBB6:
 167:Src/usart.c   **** 
 432              		.loc 1 167 5 view .LVU139
 433 0102 1A4A     		ldr	r2, .L23+28
 434 0104 5368     		ldr	r3, [r2, #4]
 435              	.LVL22:
 167:Src/usart.c   **** 
 436              		.loc 1 167 5 view .LVU140
 437 0106 23F03003 		bic	r3, r3, #48
 438              	.LVL23:
 167:Src/usart.c   **** 
 439              		.loc 1 167 5 view .LVU141
 167:Src/usart.c   **** 
 440              		.loc 1 167 5 view .LVU142
 441 010a 43F0E063 		orr	r3, r3, #117440512
 442              	.LVL24:
 167:Src/usart.c   **** 
 443              		.loc 1 167 5 is_stmt 0 view .LVU143
 444 010e 43F01003 		orr	r3, r3, #16
 445              	.LVL25:
 167:Src/usart.c   **** 
 446              		.loc 1 167 5 is_stmt 1 view .LVU144
 447 0112 5360     		str	r3, [r2, #4]
 448              	.LBE6:
 167:Src/usart.c   **** 
 449              		.loc 1 167 5 view .LVU145
 171:Src/usart.c   ****     hdma_usart3_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 450              		.loc 1 171 5 view .LVU146
 171:Src/usart.c   ****     hdma_usart3_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 451              		.loc 1 171 29 is_stmt 0 view .LVU147
 452 0114 1648     		ldr	r0, .L23+32
 453 0116 174B     		ldr	r3, .L23+36
 454              	.LVL26:
 171:Src/usart.c   ****     hdma_usart3_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 455              		.loc 1 171 29 view .LVU148
 456 0118 0360     		str	r3, [r0]
 457              	.LVL27:
 172:Src/usart.c   ****     hdma_usart3_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 458              		.loc 1 172 5 is_stmt 1 view .LVU149
 172:Src/usart.c   ****     hdma_usart3_tx.Init.PeriphInc = DMA_PINC_DISABLE;
ARM GAS  /tmp/ccYMRRE0.s 			page 14


 459              		.loc 1 172 35 is_stmt 0 view .LVU150
 460 011a 1023     		movs	r3, #16
 461 011c 4360     		str	r3, [r0, #4]
 173:Src/usart.c   ****     hdma_usart3_tx.Init.MemInc = DMA_MINC_ENABLE;
 462              		.loc 1 173 5 is_stmt 1 view .LVU151
 173:Src/usart.c   ****     hdma_usart3_tx.Init.MemInc = DMA_MINC_ENABLE;
 463              		.loc 1 173 35 is_stmt 0 view .LVU152
 464 011e 8560     		str	r5, [r0, #8]
 174:Src/usart.c   ****     hdma_usart3_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 465              		.loc 1 174 5 is_stmt 1 view .LVU153
 174:Src/usart.c   ****     hdma_usart3_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 466              		.loc 1 174 32 is_stmt 0 view .LVU154
 467 0120 8023     		movs	r3, #128
 468 0122 C360     		str	r3, [r0, #12]
 175:Src/usart.c   ****     hdma_usart3_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 469              		.loc 1 175 5 is_stmt 1 view .LVU155
 175:Src/usart.c   ****     hdma_usart3_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 470              		.loc 1 175 45 is_stmt 0 view .LVU156
 471 0124 0561     		str	r5, [r0, #16]
 176:Src/usart.c   ****     hdma_usart3_tx.Init.Mode = DMA_NORMAL;
 472              		.loc 1 176 5 is_stmt 1 view .LVU157
 176:Src/usart.c   ****     hdma_usart3_tx.Init.Mode = DMA_NORMAL;
 473              		.loc 1 176 42 is_stmt 0 view .LVU158
 474 0126 4561     		str	r5, [r0, #20]
 177:Src/usart.c   ****     hdma_usart3_tx.Init.Priority = DMA_PRIORITY_LOW;
 475              		.loc 1 177 5 is_stmt 1 view .LVU159
 177:Src/usart.c   ****     hdma_usart3_tx.Init.Priority = DMA_PRIORITY_LOW;
 476              		.loc 1 177 30 is_stmt 0 view .LVU160
 477 0128 8561     		str	r5, [r0, #24]
 178:Src/usart.c   ****     if (HAL_DMA_Init(&hdma_usart3_tx) != HAL_OK)
 478              		.loc 1 178 5 is_stmt 1 view .LVU161
 178:Src/usart.c   ****     if (HAL_DMA_Init(&hdma_usart3_tx) != HAL_OK)
 479              		.loc 1 178 34 is_stmt 0 view .LVU162
 480 012a C561     		str	r5, [r0, #28]
 179:Src/usart.c   ****     {
 481              		.loc 1 179 5 is_stmt 1 view .LVU163
 179:Src/usart.c   ****     {
 482              		.loc 1 179 9 is_stmt 0 view .LVU164
 483 012c FFF7FEFF 		bl	HAL_DMA_Init
 484              	.LVL28:
 179:Src/usart.c   ****     {
 485              		.loc 1 179 8 view .LVU165
 486 0130 58B9     		cbnz	r0, .L22
 487              	.L17:
 184:Src/usart.c   **** 
 488              		.loc 1 184 5 is_stmt 1 view .LVU166
 184:Src/usart.c   **** 
 489              		.loc 1 184 5 view .LVU167
 490 0132 0F4B     		ldr	r3, .L23+32
 491 0134 A363     		str	r3, [r4, #56]
 184:Src/usart.c   **** 
 492              		.loc 1 184 5 view .LVU168
 493 0136 5C62     		str	r4, [r3, #36]
 184:Src/usart.c   **** 
 494              		.loc 1 184 5 view .LVU169
 187:Src/usart.c   ****     HAL_NVIC_EnableIRQ(USART3_IRQn);
 495              		.loc 1 187 5 view .LVU170
ARM GAS  /tmp/ccYMRRE0.s 			page 15


 496 0138 0022     		movs	r2, #0
 497 013a 1146     		mov	r1, r2
 498 013c 2720     		movs	r0, #39
 499 013e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 500              	.LVL29:
 188:Src/usart.c   ****   /* USER CODE BEGIN USART3_MspInit 1 */
 501              		.loc 1 188 5 view .LVU171
 502 0142 2720     		movs	r0, #39
 503 0144 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 504              	.LVL30:
 505              		.loc 1 193 1 is_stmt 0 view .LVU172
 506 0148 69E7     		b	.L13
 507              	.L22:
 181:Src/usart.c   ****     }
 508              		.loc 1 181 7 is_stmt 1 view .LVU173
 509 014a FFF7FEFF 		bl	Error_Handler
 510              	.LVL31:
 511 014e F0E7     		b	.L17
 512              	.L24:
 513              		.align	2
 514              	.L23:
 515 0150 00380140 		.word	1073821696
 516 0154 00480040 		.word	1073760256
 517 0158 00100240 		.word	1073876992
 518 015c 00080140 		.word	1073809408
 519 0160 00000000 		.word	hdma_usart1_tx
 520 0164 44000240 		.word	1073872964
 521 0168 00100140 		.word	1073811456
 522 016c 00000140 		.word	1073807360
 523 0170 00000000 		.word	hdma_usart3_tx
 524 0174 1C000240 		.word	1073872924
 525              		.cfi_endproc
 526              	.LFE67:
 528              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 529              		.align	1
 530              		.global	HAL_UART_MspDeInit
 531              		.syntax unified
 532              		.thumb
 533              		.thumb_func
 534              		.fpu softvfp
 536              	HAL_UART_MspDeInit:
 537              	.LVL32:
 538              	.LFB68:
 194:Src/usart.c   **** 
 195:Src/usart.c   **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
 196:Src/usart.c   **** {
 539              		.loc 1 196 1 view -0
 540              		.cfi_startproc
 541              		@ args = 0, pretend = 0, frame = 0
 542              		@ frame_needed = 0, uses_anonymous_args = 0
 543              		.loc 1 196 1 is_stmt 0 view .LVU175
 544 0000 10B5     		push	{r4, lr}
 545              	.LCFI6:
 546              		.cfi_def_cfa_offset 8
 547              		.cfi_offset 4, -8
 548              		.cfi_offset 14, -4
 549 0002 0446     		mov	r4, r0
ARM GAS  /tmp/ccYMRRE0.s 			page 16


 197:Src/usart.c   **** 
 198:Src/usart.c   ****   if(uartHandle->Instance==USART1)
 550              		.loc 1 198 3 is_stmt 1 view .LVU176
 551              		.loc 1 198 16 is_stmt 0 view .LVU177
 552 0004 0368     		ldr	r3, [r0]
 553              		.loc 1 198 5 view .LVU178
 554 0006 154A     		ldr	r2, .L31
 555 0008 9342     		cmp	r3, r2
 556 000a 03D0     		beq	.L29
 199:Src/usart.c   ****   {
 200:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspDeInit 0 */
 201:Src/usart.c   **** 
 202:Src/usart.c   ****   /* USER CODE END USART1_MspDeInit 0 */
 203:Src/usart.c   ****     /* Peripheral clock disable */
 204:Src/usart.c   ****     __HAL_RCC_USART1_CLK_DISABLE();
 205:Src/usart.c   **** 
 206:Src/usart.c   ****     /**USART1 GPIO Configuration
 207:Src/usart.c   ****     PA9     ------> USART1_TX
 208:Src/usart.c   ****     PA10     ------> USART1_RX
 209:Src/usart.c   ****     */
 210:Src/usart.c   ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
 211:Src/usart.c   **** 
 212:Src/usart.c   ****     /* USART1 DMA DeInit */
 213:Src/usart.c   ****     HAL_DMA_DeInit(uartHandle->hdmatx);
 214:Src/usart.c   **** 
 215:Src/usart.c   ****     /* USART1 interrupt Deinit */
 216:Src/usart.c   ****     HAL_NVIC_DisableIRQ(USART1_IRQn);
 217:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 218:Src/usart.c   **** 
 219:Src/usart.c   ****   /* USER CODE END USART1_MspDeInit 1 */
 220:Src/usart.c   ****   }
 221:Src/usart.c   ****   else if(uartHandle->Instance==USART3)
 557              		.loc 1 221 8 is_stmt 1 view .LVU179
 558              		.loc 1 221 10 is_stmt 0 view .LVU180
 559 000c 144A     		ldr	r2, .L31+4
 560 000e 9342     		cmp	r3, r2
 561 0010 12D0     		beq	.L30
 562              	.LVL33:
 563              	.L25:
 222:Src/usart.c   ****   {
 223:Src/usart.c   ****   /* USER CODE BEGIN USART3_MspDeInit 0 */
 224:Src/usart.c   **** 
 225:Src/usart.c   ****   /* USER CODE END USART3_MspDeInit 0 */
 226:Src/usart.c   ****     /* Peripheral clock disable */
 227:Src/usart.c   ****     __HAL_RCC_USART3_CLK_DISABLE();
 228:Src/usart.c   **** 
 229:Src/usart.c   ****     /**USART3 GPIO Configuration
 230:Src/usart.c   ****     PC10     ------> USART3_TX
 231:Src/usart.c   ****     PC11     ------> USART3_RX
 232:Src/usart.c   ****     */
 233:Src/usart.c   ****     HAL_GPIO_DeInit(GPIOC, GPIO_PIN_10|GPIO_PIN_11);
 234:Src/usart.c   **** 
 235:Src/usart.c   ****     /* USART3 DMA DeInit */
 236:Src/usart.c   ****     HAL_DMA_DeInit(uartHandle->hdmatx);
 237:Src/usart.c   **** 
 238:Src/usart.c   ****     /* USART3 interrupt Deinit */
 239:Src/usart.c   ****     HAL_NVIC_DisableIRQ(USART3_IRQn);
ARM GAS  /tmp/ccYMRRE0.s 			page 17


 240:Src/usart.c   ****   /* USER CODE BEGIN USART3_MspDeInit 1 */
 241:Src/usart.c   **** 
 242:Src/usart.c   ****   /* USER CODE END USART3_MspDeInit 1 */
 243:Src/usart.c   ****   }
 244:Src/usart.c   **** }
 564              		.loc 1 244 1 view .LVU181
 565 0012 10BD     		pop	{r4, pc}
 566              	.LVL34:
 567              	.L29:
 204:Src/usart.c   **** 
 568              		.loc 1 204 5 is_stmt 1 view .LVU182
 569 0014 02F55842 		add	r2, r2, #55296
 570 0018 9369     		ldr	r3, [r2, #24]
 571 001a 23F48043 		bic	r3, r3, #16384
 572 001e 9361     		str	r3, [r2, #24]
 210:Src/usart.c   **** 
 573              		.loc 1 210 5 view .LVU183
 574 0020 4FF4C061 		mov	r1, #1536
 575 0024 0F48     		ldr	r0, .L31+8
 576              	.LVL35:
 210:Src/usart.c   **** 
 577              		.loc 1 210 5 is_stmt 0 view .LVU184
 578 0026 FFF7FEFF 		bl	HAL_GPIO_DeInit
 579              	.LVL36:
 213:Src/usart.c   **** 
 580              		.loc 1 213 5 is_stmt 1 view .LVU185
 581 002a A06B     		ldr	r0, [r4, #56]
 582 002c FFF7FEFF 		bl	HAL_DMA_DeInit
 583              	.LVL37:
 216:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 584              		.loc 1 216 5 view .LVU186
 585 0030 2520     		movs	r0, #37
 586 0032 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 587              	.LVL38:
 588 0036 ECE7     		b	.L25
 589              	.LVL39:
 590              	.L30:
 227:Src/usart.c   **** 
 591              		.loc 1 227 5 view .LVU187
 592 0038 02F5E432 		add	r2, r2, #116736
 593 003c D369     		ldr	r3, [r2, #28]
 594 003e 23F48023 		bic	r3, r3, #262144
 595 0042 D361     		str	r3, [r2, #28]
 233:Src/usart.c   **** 
 596              		.loc 1 233 5 view .LVU188
 597 0044 4FF44061 		mov	r1, #3072
 598 0048 0748     		ldr	r0, .L31+12
 599              	.LVL40:
 233:Src/usart.c   **** 
 600              		.loc 1 233 5 is_stmt 0 view .LVU189
 601 004a FFF7FEFF 		bl	HAL_GPIO_DeInit
 602              	.LVL41:
 236:Src/usart.c   **** 
 603              		.loc 1 236 5 is_stmt 1 view .LVU190
 604 004e A06B     		ldr	r0, [r4, #56]
 605 0050 FFF7FEFF 		bl	HAL_DMA_DeInit
 606              	.LVL42:
ARM GAS  /tmp/ccYMRRE0.s 			page 18


 239:Src/usart.c   ****   /* USER CODE BEGIN USART3_MspDeInit 1 */
 607              		.loc 1 239 5 view .LVU191
 608 0054 2720     		movs	r0, #39
 609 0056 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 610              	.LVL43:
 611              		.loc 1 244 1 is_stmt 0 view .LVU192
 612 005a DAE7     		b	.L25
 613              	.L32:
 614              		.align	2
 615              	.L31:
 616 005c 00380140 		.word	1073821696
 617 0060 00480040 		.word	1073760256
 618 0064 00080140 		.word	1073809408
 619 0068 00100140 		.word	1073811456
 620              		.cfi_endproc
 621              	.LFE68:
 623              		.comm	hdma_usart3_tx,68,4
 624              		.comm	hdma_usart1_tx,68,4
 625              		.comm	huart3,72,4
 626              		.comm	huart1,72,4
 627              		.text
 628              	.Letext0:
 629              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 630              		.file 3 "Drivers/CMSIS/Include/core_cm3.h"
 631              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 632              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 633              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 634              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 635              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 636              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 637              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 638              		.file 11 "Inc/usart.h"
 639              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 640              		.file 13 "Inc/main.h"
ARM GAS  /tmp/ccYMRRE0.s 			page 19


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
     /tmp/ccYMRRE0.s:16     .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccYMRRE0.s:24     .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccYMRRE0.s:92     .text.MX_USART1_UART_Init:000000000000003c $d
                            *COM*:0000000000000048 huart1
     /tmp/ccYMRRE0.s:98     .text.MX_USART3_UART_Init:0000000000000000 $t
     /tmp/ccYMRRE0.s:105    .text.MX_USART3_UART_Init:0000000000000000 MX_USART3_UART_Init
     /tmp/ccYMRRE0.s:172    .text.MX_USART3_UART_Init:000000000000003c $d
                            *COM*:0000000000000048 huart3
     /tmp/ccYMRRE0.s:178    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccYMRRE0.s:185    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccYMRRE0.s:515    .text.HAL_UART_MspInit:0000000000000150 $d
                            *COM*:0000000000000044 hdma_usart1_tx
                            *COM*:0000000000000044 hdma_usart3_tx
     /tmp/ccYMRRE0.s:529    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccYMRRE0.s:536    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccYMRRE0.s:616    .text.HAL_UART_MspDeInit:000000000000005c $d

UNDEFINED SYMBOLS
HAL_UART_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
Error_Handler
HAL_GPIO_Init
HAL_DMA_Init
HAL_GPIO_DeInit
HAL_DMA_DeInit
HAL_NVIC_DisableIRQ
